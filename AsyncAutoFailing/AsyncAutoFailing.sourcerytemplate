{"version":3,"instance":"eyJpZCI6IjI1MjlDNkVFLUJGMDUtNDlDNC1BOTg5LThGNzQ1MDU2OTEzRiIsImRlc2NyaXB0aW9uIjoiQ3JlYXRlcyBhIGBGYWlsaW5nYCBiYXNlZCBvbiBhIGRlcGVuZGVuY3kgcHJvdG9jb2wuXG5OT1RFOiBpdCBhc3N1bWVzIHRoYXQgYWxsIG1vZGVscyByZXR1cm5lZCBoYXZlIGEgYGZpeHR1cmVgIG1ldGhvZCBwcmV2aW91c2x5IGRlZmluZWQuIiwiY29udGVudCI6InslIG1hY3JvIGdldENsZWFuVHlwZU5hbWUgdHlwZU5hbWUgJX1cbiAgICB7JSBpZiB0eXBlTmFtZXxjb250YWluczogXCJJbnRlcmZhY2VcIiAlfVxuICAgICAgICB7eyB0eXBlTmFtZXxyZXBsYWNlOiBcIkludGVyZmFjZVwiLCBcIlwifX1cbiAgICB7JSBlbGlmIHR5cGVOYW1lfGNvbnRhaW5zOiBcIlByb3RvY29sXCIgJX1cbiAgICAgICAge3sgdHlwZU5hbWV8cmVwbGFjZTogXCJQcm90b2NvbFwiLCBcIlwifX1cbiAgICB7JSBlbmRpZiAlfVxueyUgZW5kbWFjcm8gJX1cblxueyUgbWFjcm8gcmVzb2x2ZVJldHVyblZhbHVlRm9yUmV0dXJuVHlwZSBtZXRob2QgJX1cbiAgICB7JSBzZXQgZm91bmRhdGlvblR5cGVzV2l0aE5vRml4dHVyZSAlfSBcbiAgICBbXG4gICAgICAgIFwiRGF0ZVwiLCBcIkRhdGFcIiwgXCJVUkxcIlxuICAgIF1cbiAgICB7JSBlbmRzZXQgJX1cbiAgICB7JSBpZiBtZXRob2QucmV0dXJuVHlwZS5raW5kID09IFwiZW51bVwiICV9XG4gICAgICAgIC57eyBtZXRob2QucmV0dXJuVHlwZS5jYXNlcy5maXJzdC5uYW1lIH19XG4gICAgeyUgZWxpZiBmb3VuZGF0aW9uVHlwZXNXaXRoTm9GaXh0dXJlfGNvbnRhaW5zOiBtZXRob2QucmV0dXJuVHlwZU5hbWUgJX1cbiAgICAgICAgLmluaXQoKVxuICAgIHslIGVsc2UgJX1cbiAgICAgICAgeyUgaWYgbWV0aG9kLnJldHVyblR5cGVOYW1lfGNvbnRhaW5zOlwiW1wiIGFuZCBtZXRob2QucmV0dXJuVHlwZU5hbWV8Y29udGFpbnM6XCJdXCIgJX1cbiAgICAgICAgICAgIC5pbml0KClcbiAgICAgICAgeyUgZWxzZSAlfVxuICAgICAgICAgICAgLmZpeHR1cmUoKVxuICAgICAgICB7JSBlbmRpZiAlfVxuICAgIHslIGVuZGlmICV9XG57JSBlbmRtYWNybyAlfVxuXG57JSBmb3IgdHlwZSBpbiB0eXBlcy5wcm90b2NvbHMgJX17IyBVc2UgdHlwZXMuaW1wbGVtZW50aW5nLkFzeW5jQXV0b0ZhaWxpbmcgaW5zdGVhZCBvZiB0eXBlcy5wcm90b2NvbHMgaWYgZGVjaWRlZCB0byBoYXZlIHRoaXMgcHJvdG9jb2wgI31cbnslIG5ld2xpbmUgJX1pbXBvcnQgWENUZXN0RHluYW1pY092ZXJsYXlcblxuXC9cLyBNQVJLOiAtIHt7IHR5cGUubmFtZSB9fUZhaWxpbmdcblxueyUgc2V0IGNsZWFuVHlwZU5hbWUgJX0geyUgY2FsbCBnZXRDbGVhblR5cGVOYW1lIHR5cGUubmFtZSAlfSAgeyUgZW5kc2V0ICV9XG57eyB0eXBlLmFjY2Vzc0xldmVsIH19IHN0cnVjdCB7eyBjbGVhblR5cGVOYW1lfHJlbW92ZU5ld2xpbmVzIH19RmFpbGluZzoge3sgdHlwZS5uYW1lIH19IHtcbiAgICB7eyB0eXBlLmFjY2Vzc0xldmVsIH19IGluaXQoKSB7fVxuICAgIHslIGZvciBtZXRob2QgaW4gdHlwZS5hbGxNZXRob2RzICV9XG5cbiAgICB7eyB0eXBlLmFjY2Vzc0xldmVsIH19IGZ1bmMge3sgbWV0aG9kLm5hbWUgfX0gYXN5bmMgdGhyb3dzIHslIGlmIG1ldGhvZC5yZXR1cm5UeXBlTmFtZS5uYW1lICE9IFwiVm9pZFwiICV9LT4ge3sgbWV0aG9kLnJldHVyblR5cGVOYW1lLm5hbWUgfX0geyUgZW5kaWYgJX17XG4gICAgICAgIFhDVEZhaWwoXCJcXCgjZnVuY3Rpb24pIGlzIG5vdCBpbXBsZW1lbnRlZC5cIilcbiAgICAgICAgeyUgaWYgbWV0aG9kLnJldHVyblR5cGVOYW1lLm5hbWUgIT0gXCJWb2lkXCIgJX1cbiAgICAgICAgeyUgc2V0IHJldHVyblZhbHVlICV9IHslIGNhbGwgcmVzb2x2ZVJldHVyblZhbHVlRm9yUmV0dXJuVHlwZSBtZXRob2QgJX0geyUgZW5kc2V0ICV9XG4gICAgICAgIHJldHVybiB7eyByZXR1cm5WYWx1ZXxyZW1vdmVOZXdsaW5lcyB9fVxuICAgICAgICB7JSBlbmRpZiAlfVxuICAgIH1cbiAgICB7JSBlbmRmb3IgJX1cbn1cbnslIGVuZGZvciAlfSIsInZlcnNpb24iOjMsImZhdm9yaXRlIjp0cnVlLCJhdXRob3IiOiJFZHVhcmRvIEJvY2F0byIsImdlbmVyYXRlZENvZGUiOiJcbmltcG9ydCBYQ1Rlc3REeW5hbWljT3ZlcmxheVxuXG5cL1wvIE1BUks6IC0gU29tZVNlcnZpY2VQcm90b2NvbEZhaWxpbmdcblxuaW50ZXJuYWwgc3RydWN0IFNvbWVTZXJ2aWNlRmFpbGluZzogU29tZVNlcnZpY2VQcm90b2NvbCB7XG4gICAgaW50ZXJuYWwgaW5pdCgpIHt9XG5cbiAgICBpbnRlcm5hbCBmdW5jIGdldFNvbWV0aGluZyhfIGlkOiBTdHJpbmcpIGFzeW5jIHRocm93cyAtPiBTb21ldGhpbmcge1xuICAgICAgICBYQ1RGYWlsKFwiXFwoI2Z1bmN0aW9uKSBpcyBub3QgaW1wbGVtZW50ZWQuXCIpXG4gICAgICAgIHJldHVybiAuZml4dHVyZSgpXG4gICAgfVxuXG4gICAgaW50ZXJuYWwgZnVuYyBnZXRFbnVtKCkgYXN5bmMgdGhyb3dzIC0+IE15RW51bSB7XG4gICAgICAgIFhDVEZhaWwoXCJcXCgjZnVuY3Rpb24pIGlzIG5vdCBpbXBsZW1lbnRlZC5cIilcbiAgICAgICAgcmV0dXJuIC5maXJzdENhc2VcbiAgICB9XG5cbiAgICBpbnRlcm5hbCBmdW5jIGdldERhdGUoKSBhc3luYyB0aHJvd3MgLT4gRGF0ZSB7XG4gICAgICAgIFhDVEZhaWwoXCJcXCgjZnVuY3Rpb24pIGlzIG5vdCBpbXBsZW1lbnRlZC5cIilcbiAgICAgICAgcmV0dXJuIC5pbml0KClcbiAgICB9XG5cbiAgICBpbnRlcm5hbCBmdW5jIGdldERhdGEoKSBhc3luYyB0aHJvd3MgLT4gRGF0YSB7XG4gICAgICAgIFhDVEZhaWwoXCJcXCgjZnVuY3Rpb24pIGlzIG5vdCBpbXBsZW1lbnRlZC5cIilcbiAgICAgICAgcmV0dXJuIC5pbml0KClcbiAgICB9XG5cbiAgICBpbnRlcm5hbCBmdW5jIGdldFVSTCgpIGFzeW5jIHRocm93cyAtPiBVUkwge1xuICAgICAgICBYQ1RGYWlsKFwiXFwoI2Z1bmN0aW9uKSBpcyBub3QgaW1wbGVtZW50ZWQuXCIpXG4gICAgICAgIHJldHVybiAuaW5pdCgpXG4gICAgfVxuXG4gICAgaW50ZXJuYWwgZnVuYyBnZXRBcnJheSgpIGFzeW5jIHRocm93cyAtPiBbU3RyaW5nXSB7XG4gICAgICAgIFhDVEZhaWwoXCJcXCgjZnVuY3Rpb24pIGlzIG5vdCBpbXBsZW1lbnRlZC5cIilcbiAgICAgICAgcmV0dXJuIC5pbml0KClcbiAgICB9XG5cbiAgICBpbnRlcm5hbCBmdW5jIGdldERpY3Rpb25hcnkoKSBhc3luYyB0aHJvd3MgLT4gW1N0cmluZzogU3RyaW5nXSB7XG4gICAgICAgIFhDVEZhaWwoXCJcXCgjZnVuY3Rpb24pIGlzIG5vdCBpbXBsZW1lbnRlZC5cIilcbiAgICAgICAgcmV0dXJuIC5pbml0KClcbiAgICB9XG5cbiAgICBpbnRlcm5hbCBmdW5jIHBvc3RTb21ldGhpbmcoKSBhc3luYyB0aHJvd3Mge1xuICAgICAgICBYQ1RGYWlsKFwiXFwoI2Z1bmN0aW9uKSBpcyBub3QgaW1wbGVtZW50ZWQuXCIpXG4gICAgfVxufSIsInVybCI6IiIsInJlZ2VuZXJhdGlvbkNvdW50ZXIiOjEwLCJmaWxlVVJMIjoiZmlsZTpcL1wvXC9Vc2Vyc1wvYm9jYXRlZHVcL2FkaWRhc1wvZGV2ZWxvcG1lbnRcL1NvdXJjZXJ5UmVzb3VyY2VzXC9Bc3luY0F1dG9GYWlsaW5nXC9Bc3luY0F1dG9GYWlsaW5nLnNvdXJjZXJ5dGVtcGxhdGUiLCJydW5Db25maWd1cmF0aW9uIjoic2VsZWN0aW9uIiwic2FtcGxlQ29kZSI6ImVudW0gTXlFbnVtIHtcbiAgICBjYXNlIGZpcnN0Q2FzZVxuICAgIGNhc2Ugc2Vjb25kQ2FzZVxufVxuXG5wcm90b2NvbCBTb21lU2VydmljZVByb3RvY29sIHtcbiAgICBmdW5jIGdldFNvbWV0aGluZyhfIGlkOiBTdHJpbmcpIGFzeW5jIHRocm93cyAtPiBTb21ldGhpbmdcbiAgICBmdW5jIGdldEVudW0oKSBhc3luYyB0aHJvd3MgLT4gTXlFbnVtXG4gICAgZnVuYyBnZXREYXRlKCkgYXN5bmMgdGhyb3dzIC0+IERhdGVcbiAgICBmdW5jIGdldERhdGEoKSBhc3luYyB0aHJvd3MgLT4gRGF0YVxuICAgIGZ1bmMgZ2V0VVJMKCkgYXN5bmMgdGhyb3dzIC0+IFVSTFxuICAgIGZ1bmMgZ2V0QXJyYXkoKSBhc3luYyB0aHJvd3MgLT4gW1N0cmluZ11cbiAgICBmdW5jIGdldERpY3Rpb25hcnkoKSBhc3luYyB0aHJvd3MgLT4gW1N0cmluZzogU3RyaW5nXVxuICAgIGZ1bmMgcG9zdFNvbWV0aGluZygpIGFzeW5jIHRocm93c1xufSIsImlzTG9ja2VkIjpmYWxzZSwia2luZCI6InN0ZW5jaWwiLCJ0cmltV2hpdGVzcGFjZXMiOnRydWUsIm5hbWUiOiJBc3luY0F1dG9GYWlsaW5nIiwiaW5zZXJ0aW9uTW9kZSI6ImVuZE9mRmlsZSJ9"}