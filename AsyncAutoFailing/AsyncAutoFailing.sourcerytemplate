{"version":3,"instance":"eyJpZCI6IjI1MjlDNkVFLUJGMDUtNDlDNC1BOTg5LThGNzQ1MDU2OTEzRiIsImRlc2NyaXB0aW9uIjoiQ3JlYXRlcyBhIGBGYWlsaW5nYCBiYXNlZCBvbiBhIGRlcGVuZGVuY3kgcHJvdG9jb2wuXG5OT1RFOiBpdCBhc3N1bWVzIHRoYXQgYWxsIG1vZGVscyByZXR1cm5lZCBoYXZlIGEgYGZpeHR1cmVgIG1ldGhvZCBwcmV2aW91c2x5IGRlZmluZWQuIiwiY29udGVudCI6InslIG1hY3JvIGdldENsZWFuVHlwZU5hbWUgdHlwZU5hbWUgJX1cbiAgICB7JSBpZiB0eXBlTmFtZXxjb250YWluczogXCJJbnRlcmZhY2VcIiAlfVxuICAgICAgICB7eyB0eXBlTmFtZXxyZXBsYWNlOiBcIkludGVyZmFjZVwiLCBcIlwifX1cbiAgICB7JSBlbGlmIHR5cGVOYW1lfGNvbnRhaW5zOiBcIlByb3RvY29sXCIgJX1cbiAgICAgICAge3sgdHlwZU5hbWV8cmVwbGFjZTogXCJQcm90b2NvbFwiLCBcIlwifX1cbiAgICB7JSBlbmRpZiAlfVxueyUgZW5kbWFjcm8gJX1cblxueyUgbWFjcm8gcmVzb2x2ZVJldHVyblZhbHVlRm9yUmV0dXJuVHlwZSBtZXRob2QgJX1cbnslIHR5cGVkIG1ldGhvZCBhcyBNZXRob2QgJX1cbiAgICB7JSBzZXQgZm91bmRhdGlvblR5cGVzV2l0aE5vRml4dHVyZSAlfSBcbiAgICBbXG4gICAgICAgIFwiRGF0ZVwiLCBcIkRhdGFcIlxuICAgIF1cbiAgICB7JSBlbmRzZXQgJX1cbiAgICB7JSBpZiBtZXRob2QucmV0dXJuVHlwZS5raW5kID09IFwiZW51bVwiICV9XG4gICAgICAgIC57eyBtZXRob2QucmV0dXJuVHlwZS5jYXNlcy5maXJzdC5uYW1lIH19XG4gICAgeyUgZWxpZiBmb3VuZGF0aW9uVHlwZXNXaXRoTm9GaXh0dXJlfGNvbnRhaW5zOiBtZXRob2QucmV0dXJuVHlwZU5hbWUgJX1cbiAgICAgICAgLmluaXQoKVxuICAgIHslIGVsc2UgJX1cbiAgICAgICAgeyUgaWYgbWV0aG9kLnJldHVyblR5cGVOYW1lfGNvbnRhaW5zOlwiW1wiIGFuZCBtZXRob2QucmV0dXJuVHlwZU5hbWV8Y29udGFpbnM6XCJdXCIgJX1cbiAgICAgICAgICAgIC5pbml0KClcbiAgICAgICAgeyUgZWxpZiBtZXRob2QucmV0dXJuVHlwZU5hbWV8Y29udGFpbnM6XCJVUkxcIiAlfVxuICAgICAgICAgICAgLmluaXQoc3RyaW5nOiBcInd3dy50ZXN0LmNvbVwiKS51bnNhZmVseVVud3JhcHBlZFxuICAgICAgICB7JSBlbHNlICV9XG4gICAgICAgICAgICAuZml4dHVyZSgpXG4gICAgICAgIHslIGVuZGlmICV9XG4gICAgeyUgZW5kaWYgJX1cbnslIGVuZG1hY3JvICV9XG5cbnslIGZvciB0eXBlIGluIHR5cGVzLnByb3RvY29scyAlfXsjIFVzZSB0eXBlcy5pbXBsZW1lbnRpbmcuQXN5bmNBdXRvRmFpbGluZyBpbnN0ZWFkIG9mIHR5cGVzLnByb3RvY29scyBpZiBkZWNpZGVkIHRvIGhhdmUgdGhpcyBwcm90b2NvbCAjfVxueyUgbmV3bGluZSAlfWltcG9ydCBYQ1Rlc3REeW5hbWljT3ZlcmxheVxuXG5cL1wvIE1BUks6IC0ge3sgdHlwZS5uYW1lIH19RmFpbGluZ1xuXG57JSBzZXQgY2xlYW5UeXBlTmFtZSAlfSB7JSBjYWxsIGdldENsZWFuVHlwZU5hbWUgdHlwZS5uYW1lICV9ICB7JSBlbmRzZXQgJX1cbnt7IHR5cGUuYWNjZXNzTGV2ZWwgfX0gZmluYWwgY2xhc3Mge3sgY2xlYW5UeXBlTmFtZXxyZW1vdmVOZXdsaW5lcyB9fUZhaWxpbmc6IHt7IHR5cGUubmFtZSB9fSB7XG4gICAge3sgdHlwZS5hY2Nlc3NMZXZlbCB9fSBpbml0KCkge31cbiAgICB7JSBmb3IgbWV0aG9kIGluIHR5cGUuYWxsTWV0aG9kcyAlfVxuXG4gICAgeyUgaWYgbWV0aG9kLmlzSW5pdGlhbGl6ZXIgJX1cbiAgICByZXF1aXJlZCB7eyBtZXRob2QubmFtZSB9fSB7XG4gICAgICAgIFhDVEZhaWwoXCJcXCgjZnVuY3Rpb24pIGlzIG5vdCBpbXBsZW1lbnRlZC5cIilcbiAgICB9XG4gICAgeyUgZWxzZSAlfVxuICAgIHt7IHR5cGUuYWNjZXNzTGV2ZWwgfX0gZnVuYyB7eyBtZXRob2QubmFtZSB9fXt7ICcgYXN5bmMnIGlmIG1ldGhvZC5pc0FzeW5jIH19e3sgJyB0aHJvd3MnIGlmIG1ldGhvZC50aHJvd3MgfX17JSBpZiBub3QgbWV0aG9kLnJldHVyblR5cGVOYW1lLmlzVm9pZCAlfSAtPiB7eyBtZXRob2QucmV0dXJuVHlwZU5hbWUgfX17JSBlbmRpZiAlfSB7XG4gICAgICAgIFhDVEZhaWwoXCJcXCgjZnVuY3Rpb24pIGlzIG5vdCBpbXBsZW1lbnRlZC5cIilcbiAgICAgICAgeyUgaWYgbWV0aG9kLnJldHVyblR5cGVOYW1lLm5hbWUgIT0gXCJWb2lkXCIgJX1cbiAgICAgICAgeyUgc2V0IHJldHVyblZhbHVlICV9IHslIGNhbGwgcmVzb2x2ZVJldHVyblZhbHVlRm9yUmV0dXJuVHlwZSBtZXRob2QgJX0geyUgZW5kc2V0ICV9XG4gICAgICAgIHJldHVybiB7eyByZXR1cm5WYWx1ZXxyZW1vdmVOZXdsaW5lcyB9fVxuICAgICAgICB7JSBlbmRpZiAlfVxuICAgIH1cbiAgICB7JSBlbmRpZiAlfVxuICAgIHslIGVuZGZvciAlfVxufVxueyUgZW5kZm9yICV9IiwidmVyc2lvbiI6MywiZmF2b3JpdGUiOnRydWUsImF1dGhvciI6IkVkdWFyZG8gQm9jYXRvIiwiZ2VuZXJhdGVkQ29kZSI6IlxuaW1wb3J0IFhDVGVzdER5bmFtaWNPdmVybGF5XG5cblwvXC8gTUFSSzogLSBTb21lU2VydmljZVByb3RvY29sRmFpbGluZ1xuXG5pbnRlcm5hbCBmaW5hbCBjbGFzcyBTb21lU2VydmljZUZhaWxpbmc6IFNvbWVTZXJ2aWNlUHJvdG9jb2wge1xuICAgIGludGVybmFsIGluaXQoKSB7fVxuXG4gICAgcmVxdWlyZWQgaW5pdChzb21ldGhpbmc6IFN0cmluZykge1xuICAgICAgICBYQ1RGYWlsKFwiXFwoI2Z1bmN0aW9uKSBpcyBub3QgaW1wbGVtZW50ZWQuXCIpXG4gICAgfVxuXG4gICAgaW50ZXJuYWwgZnVuYyBnZXRTb21ldGhpbmcoXyBpZDogU3RyaW5nKSBhc3luYyB0aHJvd3MgLT4gU29tZXRoaW5nIHtcbiAgICAgICAgWENURmFpbChcIlxcKCNmdW5jdGlvbikgaXMgbm90IGltcGxlbWVudGVkLlwiKVxuICAgICAgICByZXR1cm4gLmZpeHR1cmUoKVxuICAgIH1cblxuICAgIGludGVybmFsIGZ1bmMgZ2V0RW51bSgpIGFzeW5jIHRocm93cyAtPiBNeUVudW0ge1xuICAgICAgICBYQ1RGYWlsKFwiXFwoI2Z1bmN0aW9uKSBpcyBub3QgaW1wbGVtZW50ZWQuXCIpXG4gICAgICAgIHJldHVybiAuZmlyc3RDYXNlXG4gICAgfVxuXG4gICAgaW50ZXJuYWwgZnVuYyBnZXREYXRlKCkgYXN5bmMgdGhyb3dzIC0+IERhdGUge1xuICAgICAgICBYQ1RGYWlsKFwiXFwoI2Z1bmN0aW9uKSBpcyBub3QgaW1wbGVtZW50ZWQuXCIpXG4gICAgICAgIHJldHVybiAuaW5pdCgpXG4gICAgfVxuXG4gICAgaW50ZXJuYWwgZnVuYyBnZXREYXRhKCkgYXN5bmMgdGhyb3dzIC0+IERhdGEge1xuICAgICAgICBYQ1RGYWlsKFwiXFwoI2Z1bmN0aW9uKSBpcyBub3QgaW1wbGVtZW50ZWQuXCIpXG4gICAgICAgIHJldHVybiAuaW5pdCgpXG4gICAgfVxuXG4gICAgaW50ZXJuYWwgZnVuYyBnZXRVUkwoKSBhc3luYyB0aHJvd3MgLT4gVVJMIHtcbiAgICAgICAgWENURmFpbChcIlxcKCNmdW5jdGlvbikgaXMgbm90IGltcGxlbWVudGVkLlwiKVxuICAgICAgICByZXR1cm4gLmluaXQoc3RyaW5nOlwid3d3LnRlc3QuY29tXCIpLnVuc2FmZWx5VW53cmFwcGVkXG4gICAgfVxuXG4gICAgaW50ZXJuYWwgZnVuYyBnZXRBcnJheSgpIGFzeW5jIHRocm93cyAtPiBbU3RyaW5nXSB7XG4gICAgICAgIFhDVEZhaWwoXCJcXCgjZnVuY3Rpb24pIGlzIG5vdCBpbXBsZW1lbnRlZC5cIilcbiAgICAgICAgcmV0dXJuIC5pbml0KClcbiAgICB9XG5cbiAgICBpbnRlcm5hbCBmdW5jIGdldERpY3Rpb25hcnkoKSBhc3luYyB0aHJvd3MgLT4gW1N0cmluZzogU3RyaW5nXSB7XG4gICAgICAgIFhDVEZhaWwoXCJcXCgjZnVuY3Rpb24pIGlzIG5vdCBpbXBsZW1lbnRlZC5cIilcbiAgICAgICAgcmV0dXJuIC5pbml0KClcbiAgICB9XG5cbiAgICBpbnRlcm5hbCBmdW5jIHBvc3RTb21ldGhpbmcoKSBhc3luYyB0aHJvd3Mge1xuICAgICAgICBYQ1RGYWlsKFwiXFwoI2Z1bmN0aW9uKSBpcyBub3QgaW1wbGVtZW50ZWQuXCIpXG4gICAgfVxuXG4gICAgaW50ZXJuYWwgZnVuYyBwb3N0Tm9UaHJvdygpIGFzeW5jIHtcbiAgICAgICAgWENURmFpbChcIlxcKCNmdW5jdGlvbikgaXMgbm90IGltcGxlbWVudGVkLlwiKVxuICAgIH1cbn0iLCJ1cmwiOiIiLCJyZWdlbmVyYXRpb25Db3VudGVyIjoxODUsImZpbGVVUkwiOiJmaWxlOlwvXC9cL1VzZXJzXC9ib2NhdGVkdVwvYWRpZGFzXC9kZXZlbG9wbWVudFwvU291cmNlcnlSZXNvdXJjZXNcL0FzeW5jQXV0b0ZhaWxpbmdcL0FzeW5jQXV0b0ZhaWxpbmcuc291cmNlcnl0ZW1wbGF0ZSIsInJ1bkNvbmZpZ3VyYXRpb24iOiJzZWxlY3Rpb24iLCJzYW1wbGVDb2RlIjoic3RydWN0IFNvbWV0aGluZyB7XG4gICAgbGV0IHNvbWVTdHJpbmc6IFN0cmluZ1xufVxuZXh0ZW5zaW9uIFNvbWV0aGluZyB7XG4gICAgc3RhdGljIGZ1bmMgZml4dHVyZShcbiAgICAgICAgc29tZVN0cmluZzogU3RyaW5nID0gXCJzb21lU3RyaW5nXCJcbiAgICApIC0+IFNlbGYge1xuICAgICAgICByZXR1cm4gLmluaXQoXG4gICAgICAgICAgICBzb21lU3RyaW5nOiBzb21lU3RyaW5nXG4gICAgICAgIClcbiAgICB9XG59XG5cbmVudW0gTXlFbnVtIHtcbiAgICBjYXNlIGZpcnN0Q2FzZVxuICAgIGNhc2Ugc2Vjb25kQ2FzZVxufVxuXG5wcm90b2NvbCBTb21lU2VydmljZVByb3RvY29sIHtcbiAgICBpbml0KHNvbWV0aGluZzogU3RyaW5nKVxuICAgIGZ1bmMgZ2V0U29tZXRoaW5nKF8gaWQ6IFN0cmluZykgYXN5bmMgdGhyb3dzIC0+IFNvbWV0aGluZ1xuICAgIGZ1bmMgZ2V0RW51bSgpIGFzeW5jIHRocm93cyAtPiBNeUVudW1cbiAgICBmdW5jIGdldERhdGUoKSBhc3luYyB0aHJvd3MgLT4gRGF0ZVxuICAgIGZ1bmMgZ2V0RGF0YSgpIGFzeW5jIHRocm93cyAtPiBEYXRhXG4gICAgZnVuYyBnZXRVUkwoKSBhc3luYyB0aHJvd3MgLT4gVVJMXG4gICAgZnVuYyBnZXRBcnJheSgpIGFzeW5jIHRocm93cyAtPiBbU3RyaW5nXVxuICAgIGZ1bmMgZ2V0RGljdGlvbmFyeSgpIGFzeW5jIHRocm93cyAtPiBbU3RyaW5nOiBTdHJpbmddXG4gICAgZnVuYyBwb3N0U29tZXRoaW5nKCkgYXN5bmMgdGhyb3dzXG4gICAgZnVuYyBwb3N0Tm9UaHJvdygpIGFzeW5jXG59IiwiaXNMb2NrZWQiOmZhbHNlLCJraW5kIjoic3RlbmNpbCIsInRyaW1XaGl0ZXNwYWNlcyI6dHJ1ZSwibmFtZSI6IkFzeW5jQXV0b0ZhaWxpbmciLCJpbnNlcnRpb25Nb2RlIjoiZW5kT2ZGaWxlIn0="}