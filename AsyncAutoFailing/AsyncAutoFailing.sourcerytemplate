{"version":3,"instance":"eyJpZCI6IjVFOTZEMDVGLTJEODgtNDBDOC1BQ0M1LUIzREU5QThCNzIyMyIsImRlc2NyaXB0aW9uIjoiQ3JlYXRlcyBhIGBGYWlsaW5nYCBiYXNlZCBvbiBhIGRlcGVuZGVuY3kgcHJvdG9jb2wuXG5OT1RFOiBpdCBhc3N1bWVzIHRoYXQgYWxsIG1vZGVscyByZXR1cm5lZCBoYXZlIGEgYGZpeHR1cmVgIG1ldGhvZCBwcmV2aW91c2x5IGRlZmluZWQuIiwiY29udGVudCI6InslIG1hY3JvIGdldENsZWFuVHlwZU5hbWUgdHlwZU5hbWUgJX1cbiAgICB7JSBpZiB0eXBlTmFtZXxjb250YWluczogXCJJbnRlcmZhY2VcIiAlfVxuICAgICAgICB7eyB0eXBlTmFtZXxyZXBsYWNlOiBcIkludGVyZmFjZVwiLCBcIlwifX1cbiAgICB7JSBlbGlmIHR5cGVOYW1lfGNvbnRhaW5zOiBcIlByb3RvY29sXCIgJX1cbiAgICAgICAge3sgdHlwZU5hbWV8cmVwbGFjZTogXCJQcm90b2NvbFwiLCBcIlwifX1cbiAgICB7JSBlbmRpZiAlfVxueyUgZW5kbWFjcm8gJX1cblxueyUgbWFjcm8gcmVzb2x2ZVJldHVyblZhbHVlRm9yUmV0dXJuVHlwZSBtZXRob2QgJX1cbiAgICB7JSBzZXQgZm91bmRhdGlvblR5cGVzV2l0aE5vRml4dHVyZSAlfSBcbiAgICBbXG4gICAgICAgIFwiRGF0ZVwiLCBcIkRhdGFcIiwgXCJVUkxcIlxuICAgIF1cbiAgICB7JSBlbmRzZXQgJX1cbiAgICB7JSBpZiBtZXRob2QucmV0dXJuVHlwZS5raW5kID09IFwiZW51bVwiICV9XG4gICAgICAgIC57eyBtZXRob2QucmV0dXJuVHlwZS5jYXNlcy5maXJzdC5uYW1lIH19XG4gICAgeyUgZWxpZiBmb3VuZGF0aW9uVHlwZXNXaXRoTm9GaXh0dXJlfGNvbnRhaW5zOiBtZXRob2QucmV0dXJuVHlwZU5hbWUgJX1cbiAgICAgICAgLmluaXQoKVxuICAgIHslIGVsc2UgJX1cbiAgICAgICAgeyUgaWYgbWV0aG9kLnJldHVyblR5cGVOYW1lfGNvbnRhaW5zOlwiW1wiIGFuZCBtZXRob2QucmV0dXJuVHlwZU5hbWV8Y29udGFpbnM6XCJdXCIgJX1cbiAgICAgICAgICAgIC5pbml0KClcbiAgICAgICAgeyUgZWxzZSAlfVxuICAgICAgICAgICAgLmZpeHR1cmUoKVxuICAgICAgICB7JSBlbmRpZiAlfVxuICAgIHslIGVuZGlmICV9XG57JSBlbmRtYWNybyAlfVxuXG57JSBmb3IgdHlwZSBpbiB0eXBlcy5wcm90b2NvbHMgJX1cbiNpZiBERUJVR1xuaW1wb3J0IFhDVGVzdER5bmFtaWNPdmVybGF5XG5cbnslIHNldCBjbGVhblR5cGVOYW1lICV9IHslIGNhbGwgZ2V0Q2xlYW5UeXBlTmFtZSB0eXBlLm5hbWUgJX0gIHslIGVuZHNldCAlfVxucHVibGljIHN0cnVjdCB7eyBjbGVhblR5cGVOYW1lfHJlbW92ZU5ld2xpbmVzIH19RmFpbGluZzoge3sgdHlwZS5uYW1lIH19IHtcbiAgICBwdWJsaWMgaW5pdCgpIHt9XG4gICAgeyUgZm9yIG1ldGhvZCBpbiB0eXBlLmFsbE1ldGhvZHMgJX1cblxuICAgIHB1YmxpYyBmdW5jIHt7IG1ldGhvZC5uYW1lIH19IGFzeW5jIHRocm93cyB7JSBpZiBtZXRob2QucmV0dXJuVHlwZU5hbWUubmFtZSAhPSBcIlZvaWRcIiAlfS0+IHt7IG1ldGhvZC5yZXR1cm5UeXBlTmFtZS5uYW1lIH19IHslIGVuZGlmICV9e1xuICAgICAgICBYQ1RGYWlsKFwiXFwoI2Z1bmN0aW9uKSBpcyBub3QgaW1wbGVtZW50ZWQuXCIpXG4gICAgICAgIHslIGlmIG1ldGhvZC5yZXR1cm5UeXBlTmFtZS5uYW1lICE9IFwiVm9pZFwiICV9XG4gICAgICAgIHslIHNldCByZXR1cm5WYWx1ZSAlfSB7JSBjYWxsIHJlc29sdmVSZXR1cm5WYWx1ZUZvclJldHVyblR5cGUgbWV0aG9kICV9IHslIGVuZHNldCAlfVxuICAgICAgICByZXR1cm4ge3sgcmV0dXJuVmFsdWV8cmVtb3ZlTmV3bGluZXMgfX1cbiAgICAgICAgeyUgZW5kaWYgJX1cbiAgICB9XG4gICAgeyUgZW5kZm9yICV9XG59XG4jZW5kaWZcblxueyUgZW5kZm9yICV9IiwidmVyc2lvbiI6MywiZmF2b3JpdGUiOnRydWUsImF1dGhvciI6IkVkdWFyZG8gQm9jYXRvIiwiZ2VuZXJhdGVkQ29kZSI6IiNpZiBERUJVR1xuaW1wb3J0IFhDVGVzdER5bmFtaWNPdmVybGF5XG5cbnB1YmxpYyBzdHJ1Y3QgU29tZVNlcnZpY2VGYWlsaW5nOiBTb21lU2VydmljZVByb3RvY29sIHtcbiAgICBwdWJsaWMgaW5pdCgpIHt9XG5cbiAgICBwdWJsaWMgZnVuYyBnZXRTb21ldGhpbmcoXyBpZDogU3RyaW5nKSBhc3luYyB0aHJvd3MgLT4gU29tZXRoaW5nIHtcbiAgICAgICAgWENURmFpbChcIlxcKCNmdW5jdGlvbikgaXMgbm90IGltcGxlbWVudGVkLlwiKVxuICAgICAgICByZXR1cm4gLmZpeHR1cmUoKVxuICAgIH1cblxuICAgIHB1YmxpYyBmdW5jIGdldEVudW0oKSBhc3luYyB0aHJvd3MgLT4gTXlFbnVtIHtcbiAgICAgICAgWENURmFpbChcIlxcKCNmdW5jdGlvbikgaXMgbm90IGltcGxlbWVudGVkLlwiKVxuICAgICAgICByZXR1cm4gLmZpcnN0Q2FzZVxuICAgIH1cblxuICAgIHB1YmxpYyBmdW5jIGdldERhdGUoKSBhc3luYyB0aHJvd3MgLT4gRGF0ZSB7XG4gICAgICAgIFhDVEZhaWwoXCJcXCgjZnVuY3Rpb24pIGlzIG5vdCBpbXBsZW1lbnRlZC5cIilcbiAgICAgICAgcmV0dXJuIC5pbml0KClcbiAgICB9XG5cbiAgICBwdWJsaWMgZnVuYyBnZXREYXRhKCkgYXN5bmMgdGhyb3dzIC0+IERhdGEge1xuICAgICAgICBYQ1RGYWlsKFwiXFwoI2Z1bmN0aW9uKSBpcyBub3QgaW1wbGVtZW50ZWQuXCIpXG4gICAgICAgIHJldHVybiAuaW5pdCgpXG4gICAgfVxuXG4gICAgcHVibGljIGZ1bmMgZ2V0VVJMKCkgYXN5bmMgdGhyb3dzIC0+IFVSTCB7XG4gICAgICAgIFhDVEZhaWwoXCJcXCgjZnVuY3Rpb24pIGlzIG5vdCBpbXBsZW1lbnRlZC5cIilcbiAgICAgICAgcmV0dXJuIC5pbml0KClcbiAgICB9XG5cbiAgICBwdWJsaWMgZnVuYyBnZXRBcnJheSgpIGFzeW5jIHRocm93cyAtPiBbU3RyaW5nXSB7XG4gICAgICAgIFhDVEZhaWwoXCJcXCgjZnVuY3Rpb24pIGlzIG5vdCBpbXBsZW1lbnRlZC5cIilcbiAgICAgICAgcmV0dXJuIC5pbml0KClcbiAgICB9XG5cbiAgICBwdWJsaWMgZnVuYyBnZXREaWN0aW9uYXJ5KCkgYXN5bmMgdGhyb3dzIC0+IFtTdHJpbmc6IFN0cmluZ10ge1xuICAgICAgICBYQ1RGYWlsKFwiXFwoI2Z1bmN0aW9uKSBpcyBub3QgaW1wbGVtZW50ZWQuXCIpXG4gICAgICAgIHJldHVybiAuaW5pdCgpXG4gICAgfVxuXG4gICAgcHVibGljIGZ1bmMgcG9zdFNvbWV0aGluZygpIGFzeW5jIHRocm93cyB7XG4gICAgICAgIFhDVEZhaWwoXCJcXCgjZnVuY3Rpb24pIGlzIG5vdCBpbXBsZW1lbnRlZC5cIilcbiAgICB9XG59XG4jZW5kaWYiLCJ1cmwiOiIiLCJyZWdlbmVyYXRpb25Db3VudGVyIjo1LCJmaWxlVVJMIjoiZmlsZTpcL1wvXC9Vc2Vyc1wvYm9jYXRlZHVcL0Rlc2t0b3BcL0FzeW5jQXV0b0ZhaWxpbmcuc291cmNlcnl0ZW1wbGF0ZSIsInJ1bkNvbmZpZ3VyYXRpb24iOiJzZWxlY3Rpb24iLCJzYW1wbGVDb2RlIjoiZW51bSBNeUVudW0ge1xuICAgIGNhc2UgZmlyc3RDYXNlXG4gICAgY2FzZSBzZWNvbmRDYXNlXG59XG5cbnByb3RvY29sIFNvbWVTZXJ2aWNlUHJvdG9jb2wge1xuICAgIGZ1bmMgZ2V0U29tZXRoaW5nKF8gaWQ6IFN0cmluZykgYXN5bmMgdGhyb3dzIC0+IFNvbWV0aGluZ1xuICAgIGZ1bmMgZ2V0RW51bSgpIGFzeW5jIHRocm93cyAtPiBNeUVudW1cbiAgICBmdW5jIGdldERhdGUoKSBhc3luYyB0aHJvd3MgLT4gRGF0ZVxuICAgIGZ1bmMgZ2V0RGF0YSgpIGFzeW5jIHRocm93cyAtPiBEYXRhXG4gICAgZnVuYyBnZXRVUkwoKSBhc3luYyB0aHJvd3MgLT4gVVJMXG4gICAgZnVuYyBnZXRBcnJheSgpIGFzeW5jIHRocm93cyAtPiBbU3RyaW5nXVxuICAgIGZ1bmMgZ2V0RGljdGlvbmFyeSgpIGFzeW5jIHRocm93cyAtPiBbU3RyaW5nOiBTdHJpbmddXG4gICAgZnVuYyBwb3N0U29tZXRoaW5nKCkgYXN5bmMgdGhyb3dzXG59IiwiaXNMb2NrZWQiOmZhbHNlLCJraW5kIjoic3RlbmNpbCIsInRyaW1XaGl0ZXNwYWNlcyI6dHJ1ZSwibmFtZSI6IkFzeW5jQXV0b0ZhaWxpbmciLCJpbnNlcnRpb25Nb2RlIjoiZW5kT2ZGaWxlIn0="}