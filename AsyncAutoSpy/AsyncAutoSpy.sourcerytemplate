{"version":3,"instance":"eyJpZCI6Ijc3MkExMzk0LUE1OTMtNDdFNS04RDg5LUQ0MTQ2NzRBODQzRiIsImRlc2NyaXB0aW9uIjoiR2VuZXJhdGVzIGBTcHlgcyBiYXNlZCBvbiBhIGRlcGVuZGVuY3kgcHJvdG9jb2wsIG1vc3RseSBhcHBsaWNhYmxlIGZvciBkYXRhc291cmNlcyBsaWtlIHNlcnZpY2VzIGFuZCByZXBvc2l0b3JpZXMuXG5OT1RFOiBpdCBhc3N1bWVzIHRoYXQgYWxsIG1vZGVscyByZXR1cm5lZCBoYXZlIGEgYGZpeHR1cmVgIG1ldGhvZCBwcmV2aW91c2x5IGRlZmluZWQuXG4qQmFzZWQgb24gYFByb3RvY29sIE1vY2tgIHRlbXBsYXRlIGZyb20gYMWBdWthc3ogS3VjemJvcnNraWAqIiwiY29udGVudCI6InslIG1hY3JvIGdldENsZWFuVHlwZU5hbWUgdHlwZU5hbWUgJX1cbiAgICB7JSBpZiB0eXBlTmFtZXxjb250YWluczogXCJJbnRlcmZhY2VcIiAlfVxuICAgICAgICB7eyB0eXBlTmFtZXxyZXBsYWNlOiBcIkludGVyZmFjZVwiLCBcIlwifX1cbiAgICB7JSBlbGlmIHR5cGVOYW1lfGNvbnRhaW5zOiBcIlByb3RvY29sXCIgJX1cbiAgICAgICAge3sgdHlwZU5hbWV8cmVwbGFjZTogXCJQcm90b2NvbFwiLCBcIlwifX1cbiAgICB7JSBlbmRpZiAlfVxueyUgZW5kbWFjcm8gJX1cblxueyUgbWFjcm8gc3dpZnRpZnlNZXRob2ROYW1lIG5hbWUgJX17JSB0eXBlZCBuYW1lIGFzIFN0cmluZyAlfXt7IG5hbWUgfCByZXBsYWNlOlwiKFwiLFwiX1wiIHwgcmVwbGFjZTpcIilcIixcIlwiIHwgcmVwbGFjZTpcIjpcIixcIl9cIiB8IHJlcGxhY2U6XCJgXCIsXCJcIiB8IHNuYWtlVG9DYW1lbENhc2UgfCBsb3dlckZpcnN0V29yZCB9fXslIGVuZG1hY3JvICV9XG5cbnslIG1hY3JvIHJlc29sdmVSZXR1cm5WYWx1ZUZvclJldHVyblR5cGUgbWV0aG9kICV9XG4gICAgeyUgc2V0IGZvdW5kYXRpb25UeXBlc1dpdGhOb0ZpeHR1cmUgJX0gXG4gICAgW1xuICAgICAgICBcIkRhdGVcIiwgXCJEYXRhXCIsIFwiVVJMXCJcbiAgICBdXG4gICAgeyUgZW5kc2V0ICV9XG4gICAgeyUgaWYgbWV0aG9kLnJldHVyblR5cGUua2luZCA9PSBcImVudW1cIiAlfVxuICAgICAgICAue3sgbWV0aG9kLnJldHVyblR5cGUuY2FzZXMuZmlyc3QubmFtZSB9fVxuICAgIHslIGVsaWYgZm91bmRhdGlvblR5cGVzV2l0aE5vRml4dHVyZXxjb250YWluczogbWV0aG9kLnJldHVyblR5cGVOYW1lICV9XG4gICAgICAgIC5pbml0KClcbiAgICB7JSBlbHNlICV9XG4gICAgICAgIHslIGlmIG1ldGhvZC5yZXR1cm5UeXBlTmFtZXxjb250YWluczpcIltcIiBhbmQgbWV0aG9kLnJldHVyblR5cGVOYW1lfGNvbnRhaW5zOlwiXVwiICV9XG4gICAgICAgICAgICAuaW5pdCgpXG4gICAgICAgIHslIGVsc2UgJX1cbiAgICAgICAgICAgIC5maXh0dXJlKClcbiAgICAgICAgeyUgZW5kaWYgJX1cbiAgICB7JSBlbmRpZiAlfVxueyUgZW5kbWFjcm8gJX1cblxueyUgbWFjcm8gbWV0aG9kUmVjZWl2ZWRQYXJhbWV0ZXJzIG1ldGhvZCAlfVxueyUgdHlwZWQgbWV0aG9kIGFzIE1ldGhvZCAlfVxuICAgIHslaWYgbWV0aG9kLnBhcmFtZXRlcnMuY291bnQgPT0gMSAlfVxuICAgICAgICB7JSBjYWxsIHN3aWZ0aWZ5TWV0aG9kTmFtZSBtZXRob2Quc2VsZWN0b3JOYW1lICV9UmVjZWl2ZWR7JSBmb3IgcGFyYW0gaW4gbWV0aG9kLnBhcmFtZXRlcnMgJX17eyBwYXJhbS5uYW1lfHVwcGVyRmlyc3RMZXR0ZXIgfX0gPSB7eyBwYXJhbS5uYW1lIH19eyUgZW5kZm9yICV9XG4gICAgICAgIHslIGNhbGwgc3dpZnRpZnlNZXRob2ROYW1lIG1ldGhvZC5zZWxlY3Rvck5hbWUgJX1SZWNlaXZlZEludm9jYXRpb25zLmFwcGVuZCh7JSBmb3IgcGFyYW0gaW4gbWV0aG9kLnBhcmFtZXRlcnMgJX17eyBwYXJhbS5uYW1lIH19KXslIGVuZGZvciAlfVxuICAgIHslIGVsc2UgJX1cbiAgICB7JSBpZiBub3QgbWV0aG9kLnBhcmFtZXRlcnMuY291bnQgPT0gMCAlfVxuICAgICAgICB7JSBjYWxsIHN3aWZ0aWZ5TWV0aG9kTmFtZSBtZXRob2Quc2VsZWN0b3JOYW1lICV9UmVjZWl2ZWRBcmd1bWVudHMgPSAoeyUgZm9yIHBhcmFtIGluIG1ldGhvZC5wYXJhbWV0ZXJzICV9e3sgcGFyYW0ubmFtZSB9fToge3sgcGFyYW0ubmFtZSB9fXslIGlmIG5vdCBmb3Jsb29wLmxhc3QlfSwgeyUgZW5kaWYgJX17JSBlbmRmb3IgJX0pXG4gICAgICAgIHslIGNhbGwgc3dpZnRpZnlNZXRob2ROYW1lIG1ldGhvZC5zZWxlY3Rvck5hbWUgJX1SZWNlaXZlZEludm9jYXRpb25zLmFwcGVuZCgoeyUgZm9yIHBhcmFtIGluIG1ldGhvZC5wYXJhbWV0ZXJzICV9e3sgcGFyYW0ubmFtZSB9fToge3sgcGFyYW0ubmFtZSB9fXslIGlmIG5vdCBmb3Jsb29wLmxhc3QlfSwgeyUgZW5kaWYgJX17JSBlbmRmb3IgJX0pKVxuICAgIHslIGVuZGlmICV9XG4gICAgeyUgZW5kaWYgJX1cbnslIGVuZG1hY3JvICV9XG5cbnslIG1hY3JvIG1ldGhvZENsb3N1cmVOYW1lIG1ldGhvZCAlfXslIHR5cGVkIG1ldGhvZCBhcyBNZXRob2QgJX17JSBjYWxsIHN3aWZ0aWZ5TWV0aG9kTmFtZSBtZXRob2Quc2VsZWN0b3JOYW1lICV9Q2xvc3VyZXslIGVuZG1hY3JvICV9XG5cbnslIG1hY3JvIGNsb3N1cmVSZXR1cm5UeXBlTmFtZSBtZXRob2QgJX17JSB0eXBlZCBtZXRob2QgYXMgTWV0aG9kICV9eyUgaWYgbWV0aG9kLmlzT3B0aW9uYWxSZXR1cm5UeXBlICV9e3sgbWV0aG9kLnVud3JhcHBlZFJldHVyblR5cGVOYW1lIH19P3slIGVsc2UgJX17eyBtZXRob2QucmV0dXJuVHlwZU5hbWUgfX17JSBlbmRpZiAlfXslIGVuZG1hY3JvICV9XG5cbnslIG1hY3JvIG1ldGhvZENsb3N1cmVEZWNsYXJhdGlvbiBtZXRob2QgJX1cbnslIHR5cGVkIG1ldGhvZCBhcyBNZXRob2QgJX1cbnslIGlmIG1ldGhvZC5pc0luaXRpYWxpemVyICV9XG4gICAge3sgdHlwZS5hY2Nlc3NMZXZlbCB9fSB2YXIgeyUgY2FsbCBtZXRob2RDbG9zdXJlTmFtZSBtZXRob2QgJX06ICgoeyUgZm9yIHBhcmFtIGluIG1ldGhvZC5wYXJhbWV0ZXJzICV9e3sgcGFyYW0udHlwZU5hbWUgfX17JSBpZiBub3QgZm9ybG9vcC5sYXN0ICV9LCB7JSBlbmRpZiAlfXslIGVuZGZvciAlfSkgeyUgaWYgbWV0aG9kLnRocm93cyAlfXRocm93cyB7JSBlbmRpZiAlfS0+IHslIGlmIG1ldGhvZC5pc0luaXRpYWxpemVyICV9Vm9pZHslIGVsc2UgJX17JSBjYWxsIGNsb3N1cmVSZXR1cm5UeXBlTmFtZSBtZXRob2QgJX17JSBlbmRpZiAlfSk\/XG57JSBlbmRpZiAlfVxueyUgZW5kbWFjcm8gJX1cblxueyUgbWFjcm8gbWV0aG9kQ2xvc3VyZUNhbGxQYXJhbWV0ZXJzIG1ldGhvZCAlfXslIHR5cGVkIG1ldGhvZCBhcyBNZXRob2QgJX17JSBmb3IgcGFyYW0gaW4gbWV0aG9kLnBhcmFtZXRlcnMgJX17eyBwYXJhbS5uYW1lIH19eyUgaWYgbm90IGZvcmxvb3AubGFzdCAlfSwgeyUgZW5kaWYgJX17JSBlbmRmb3IgJX17JSBlbmRtYWNybyAlfVxuXG57JSBtYWNybyBtb2NrTWV0aG9kIG1ldGhvZCAlfVxuICAgIHslIHR5cGVkIG1ldGhvZCBhcyBNZXRob2QgJX1cbiAgICB7JSBuZXdsaW5lICV9ICAgXC9cLyBNQVJLOiAtIHt7IG1ldGhvZC5zaG9ydE5hbWUgfX1cblxuICAgIHslIGlmIG5vdCBtZXRob2QuaXNJbml0aWFsaXplciAlfVxuICAgIHt7IHR5cGUuYWNjZXNzTGV2ZWwgfX0gdmFyIHslIGNhbGwgc3dpZnRpZnlNZXRob2ROYW1lIG1ldGhvZC5zZWxlY3Rvck5hbWUgJX1DYWxsc0NvdW50ID0gMFxuICAgIHt7IHR5cGUuYWNjZXNzTGV2ZWwgfX0gdmFyIHslIGNhbGwgc3dpZnRpZnlNZXRob2ROYW1lIG1ldGhvZC5zZWxlY3Rvck5hbWUgJX1DYWxsZWQ6IEJvb2wge1xuICAgICAgICB7JSBjYWxsIHN3aWZ0aWZ5TWV0aG9kTmFtZSBtZXRob2Quc2VsZWN0b3JOYW1lICV9Q2FsbHNDb3VudCA+IDBcbiAgICB9XG4gICAgeyUgZW5kaWYgJX1cbiAgICB7JSBpZiBtZXRob2QucGFyYW1ldGVycy5jb3VudCA9PSAxICV9XG4gICAge3sgdHlwZS5hY2Nlc3NMZXZlbCB9fSB2YXIgeyUgY2FsbCBzd2lmdGlmeU1ldGhvZE5hbWUgbWV0aG9kLnNlbGVjdG9yTmFtZSAlfVJlY2VpdmVkeyUgZm9yIHBhcmFtIGluIG1ldGhvZC5wYXJhbWV0ZXJzICV9e3sgcGFyYW0ubmFtZXx1cHBlckZpcnN0TGV0dGVyIH19OiB7eyAnKCcgaWYgcGFyYW0uaXNDbG9zdXJlIH19e3sgcGFyYW0udHlwZU5hbWUudW53cmFwcGVkVHlwZU5hbWUgfX17eyAnKScgaWYgcGFyYW0uaXNDbG9zdXJlIH19P3slIGVuZGZvciAlfVxuICAgIHt7IHR5cGUuYWNjZXNzTGV2ZWwgfX0gdmFyIHslIGNhbGwgc3dpZnRpZnlNZXRob2ROYW1lIG1ldGhvZC5zZWxlY3Rvck5hbWUgJX1SZWNlaXZlZEludm9jYXRpb25zeyUgZm9yIHBhcmFtIGluIG1ldGhvZC5wYXJhbWV0ZXJzICV9OiBbe3sgJygnIGlmIHBhcmFtLmlzQ2xvc3VyZSB9fXt7IHBhcmFtLnR5cGVOYW1lLnVud3JhcHBlZFR5cGVOYW1lIH19e3sgJyknIGlmIHBhcmFtLmlzQ2xvc3VyZSB9fXslaWYgcGFyYW0udHlwZU5hbWUuaXNPcHRpb25hbCV9P3slZW5kaWYlfV17JSBlbmRmb3IgJX0gPSBbXVxuICAgIHslIGVsaWYgbm90IG1ldGhvZC5wYXJhbWV0ZXJzLmNvdW50ID09IDAgJX1cbiAgICB7eyB0eXBlLmFjY2Vzc0xldmVsIH19IHZhciB7JSBjYWxsIHN3aWZ0aWZ5TWV0aG9kTmFtZSBtZXRob2Quc2VsZWN0b3JOYW1lICV9UmVjZWl2ZWRBcmd1bWVudHM6ICh7JSBmb3IgcGFyYW0gaW4gbWV0aG9kLnBhcmFtZXRlcnMgJX17eyBwYXJhbS5uYW1lIH19OiB7eyBwYXJhbS51bndyYXBwZWRUeXBlTmFtZSBpZiBwYXJhbS50eXBlQXR0cmlidXRlcy5lc2NhcGluZyBlbHNlIHBhcmFtLnR5cGVOYW1lIH19e3sgJywgJyBpZiBub3QgZm9ybG9vcC5sYXN0IH19eyUgZW5kZm9yICV9KT9cbiAgICB7eyB0eXBlLmFjY2Vzc0xldmVsIH19IHZhciB7JSBjYWxsIHN3aWZ0aWZ5TWV0aG9kTmFtZSBtZXRob2Quc2VsZWN0b3JOYW1lICV9UmVjZWl2ZWRJbnZvY2F0aW9uczogWyh7JSBmb3IgcGFyYW0gaW4gbWV0aG9kLnBhcmFtZXRlcnMgJX17eyBwYXJhbS5uYW1lIH19OiB7eyBwYXJhbS51bndyYXBwZWRUeXBlTmFtZSBpZiBwYXJhbS50eXBlQXR0cmlidXRlcy5lc2NhcGluZyBlbHNlIHBhcmFtLnR5cGVOYW1lIH19e3sgJywgJyBpZiBub3QgZm9ybG9vcC5sYXN0IH19eyUgZW5kZm9yICV9KV0gPSBbXVxuICAgIHslIGVuZGlmICV9XG4gICAgeyUgY2FsbCBtZXRob2RDbG9zdXJlRGVjbGFyYXRpb24gbWV0aG9kICV9XG5cbnslIGlmIG1ldGhvZC5pc0luaXRpYWxpemVyICV9XG4gICAgcmVxdWlyZWQge3sgbWV0aG9kLm5hbWUgfX0ge1xuICAgICAgICB7JSBjYWxsIG1ldGhvZFJlY2VpdmVkUGFyYW1ldGVycyBtZXRob2QgJX1cbiAgICAgICAgeyUgY2FsbCBtZXRob2RDbG9zdXJlTmFtZSBtZXRob2QgJX0\/KHslIGNhbGwgbWV0aG9kQ2xvc3VyZUNhbGxQYXJhbWV0ZXJzIG1ldGhvZCAlfSlcbiAgICB9XG57JSBlbHNlICV9XG4gICAge3sgdHlwZS5hY2Nlc3NMZXZlbCB9fSBmdW5jIHt7IG1ldGhvZC5uYW1lIH19e3sgJyBhc3luYycgaWYgbWV0aG9kLmlzQXN5bmMgfX17eyAnIHRocm93cycgaWYgbWV0aG9kLnRocm93cyB9fXslIGlmIG5vdCBtZXRob2QucmV0dXJuVHlwZU5hbWUuaXNWb2lkICV9IC0+IHt7IG1ldGhvZC5yZXR1cm5UeXBlTmFtZSB9fXslIGVuZGlmICV9IHtcbiAgICAgICAgeyUgY2FsbCBzd2lmdGlmeU1ldGhvZE5hbWUgbWV0aG9kLnNlbGVjdG9yTmFtZSAlfUNhbGxzQ291bnQgKz0gMVxuICAgICAgICB7JSBjYWxsIG1ldGhvZFJlY2VpdmVkUGFyYW1ldGVycyBtZXRob2QgJX1cbiAgICAgICAgeyUgaWYgbm90IG1ldGhvZC5yZXR1cm5UeXBlTmFtZS5pc1ZvaWQgJX1cbiAgICAgICAgeyUgc2V0IHJldHVyblZhbHVlICV9IHslIGNhbGwgcmVzb2x2ZVJldHVyblZhbHVlRm9yUmV0dXJuVHlwZSBtZXRob2QgJX0geyUgZW5kc2V0ICV9XG4gICAgICAgIHJldHVybiB7eyByZXR1cm5WYWx1ZXxyZW1vdmVOZXdsaW5lcyB9fVxuICAgICAgICB7JSBlbmRpZiAlfVxuICAgIH1cbnslIGVuZGlmICV9XG57JSBlbmRtYWNybyAlfVxuXG57JSBtYWNybyBtb2NrZWRWYXJpYWJsZU5hbWUgdmFyaWFibGUgJX17eyB2YXJpYWJsZS5uYW1lIH19eyUgZW5kbWFjcm8gJX1cbnslIG1hY3JvIHVuZGVybHlpbmdNb2NrZWRWYXJpYWJsZU5hbWUgdmFyaWFibGUgJX11bmRlcmx5aW5ne3sgdmFyaWFibGUubmFtZXx1cHBlckZpcnN0TGV0dGVyIH19eyUgZW5kbWFjcm8gJX1cblxueyUgbWFjcm8gbW9ja09wdGlvbmFsVmFyaWFibGUgdmFyaWFibGUgJX1cbnslIHR5cGVkIHZhcmlhYmxlIGFzIFZhcmlhYmxlICV9XG4gICAge3sgdHlwZS5hY2Nlc3NMZXZlbCB9fSB2YXIgeyUgY2FsbCBtb2NrZWRWYXJpYWJsZU5hbWUgdmFyaWFibGUgJX06IHt7IHZhcmlhYmxlLnR5cGVOYW1lIH19XG57JSBlbmRtYWNybyAlfVxuXG57JSBtYWNybyBtb2NrTm9uT3B0aW9uYWxBcnJheU9yRGljdGlvbmFyeVZhcmlhYmxlIHZhcmlhYmxlICV9XG57JSB0eXBlZCB2YXJpYWJsZSBhcyBWYXJpYWJsZSAlfVxuICAgIHt7IHR5cGUuYWNjZXNzTGV2ZWwgfX0gdmFyIHslIGNhbGwgbW9ja2VkVmFyaWFibGVOYW1lIHZhcmlhYmxlICV9OiB7eyB2YXJpYWJsZS50eXBlTmFtZSB9fSA9IHslIGlmIHZhcmlhYmxlLmlzQXJyYXkgJX1bXXslIGVsaWYgdmFyaWFibGUuaXNEaWN0aW9uYXJ5ICV9WzpdeyUgZW5kaWYgJX1cbnslIGVuZG1hY3JvICV9XG5cbnslIG1hY3JvIG1vY2tOb25PcHRpb25hbFZhcmlhYmxlIHZhcmlhYmxlICV9XG4gICAgeyUgdHlwZWQgdmFyaWFibGUgYXMgVmFyaWFibGUgJX1cbiAgICB7JSBuZXdsaW5lICV9ICAgXC9cLyBNQVJLOiAtIHt7IHZhcmlhYmxlLm5hbWUgfX1cblxuICAgIHt7IHR5cGUuYWNjZXNzTGV2ZWwgfX0gdmFyIHslIGNhbGwgbW9ja2VkVmFyaWFibGVOYW1lIHZhcmlhYmxlICV9OiB7eyB2YXJpYWJsZS50eXBlTmFtZSB9fSB7XG4gICAgICAgIGdldCB7IHslIGNhbGwgdW5kZXJseWluZ01vY2tlZFZhcmlhYmxlTmFtZSB2YXJpYWJsZSAlfSB9XG4gICAgICAgIHNldCh2YWx1ZSkgeyB7JSBjYWxsIHVuZGVybHlpbmdNb2NrZWRWYXJpYWJsZU5hbWUgdmFyaWFibGUgJX0gPSB2YWx1ZSB9XG4gICAgfVxuICAgIHByaXZhdGUgdmFyIHslIGNhbGwgdW5kZXJseWluZ01vY2tlZFZhcmlhYmxlTmFtZSB2YXJpYWJsZSAlfToge3sgdmFyaWFibGUudHlwZU5hbWUgfX0hXG57JSBlbmRtYWNybyAlfVxuXG5cbnslIGZvciB0eXBlIGluIHR5cGVzLnByb3RvY29scyAlfSB7IyBVc2UgdHlwZXMuaW1wbGVtZW50aW5nLkFzeW5jQXV0b1NweSBpbnN0ZWFkIG9mIHR5cGVzLnByb3RvY29scyBpZiBkZWNpZGVkIHRvIGhhdmUgdGhpcyBwcm90b2NvbCAjfVxuXG57JSBuZXdsaW5lICV9XC9cLyBNQVJLOiAtIHt7IHR5cGUubmFtZSB9fVNweVxueyUgc2V0IGNsZWFuVHlwZU5hbWUgJX0geyUgY2FsbCBnZXRDbGVhblR5cGVOYW1lIHR5cGUubmFtZSAlfSAgeyUgZW5kc2V0ICV9XG57eyB0eXBlLmFjY2Vzc0xldmVsIH19IGZpbmFsIGNsYXNzIHt7IGNsZWFuVHlwZU5hbWV8cmVtb3ZlTmV3bGluZXMgfX1TcHk6IHt7IHR5cGUubmFtZSB9fSB7XG5cbiAgICB7eyB0eXBlLmFjY2Vzc0xldmVsIH19IGluaXQoKSB7fVxueyUgZm9yIHZhcmlhYmxlIGluIHR5cGUuYWxsVmFyaWFibGVzfCFkZWZpbmVkSW5FeHRlbnNpb24gJX1cbiAgICB7JSBpZiB2YXJpYWJsZS5pc09wdGlvbmFsICV9eyUgY2FsbCBtb2NrT3B0aW9uYWxWYXJpYWJsZSB2YXJpYWJsZSAlfXslIGVsaWYgdmFyaWFibGUuaXNBcnJheSBvciB2YXJpYWJsZS5pc0RpY3Rpb25hcnkgJX17JSBjYWxsIG1vY2tOb25PcHRpb25hbEFycmF5T3JEaWN0aW9uYXJ5VmFyaWFibGUgdmFyaWFibGUgJX17JSBlbHNlICV9eyUgY2FsbCBtb2NrTm9uT3B0aW9uYWxWYXJpYWJsZSB2YXJpYWJsZSAlfXslIGVuZGlmICV9XG57JSBlbmRmb3IgJX1cbnslIGZvciBtZXRob2QgaW4gdHlwZS5hbGxNZXRob2RzfCFkZWZpbmVkSW5FeHRlbnNpb24gJX1cbiAgICB7JSBjYWxsIG1vY2tNZXRob2QgbWV0aG9kICV9XG57JSBlbmRmb3IgJX1cbn1cbnslIGVuZGZvciAlfSIsInZlcnNpb24iOjMsImZhdm9yaXRlIjp0cnVlLCJhdXRob3IiOiJFZHVhcmRvIEJvY2F0byIsImdlbmVyYXRlZENvZGUiOiJcblwvXC8gTUFSSzogLSBTb21ldGhpbmdSZXBvc2l0b3J5SW50ZXJmYWNlU3B5XG5pbnRlcm5hbCBmaW5hbCBjbGFzcyBTb21ldGhpbmdSZXBvc2l0b3J5U3B5OiBTb21ldGhpbmdSZXBvc2l0b3J5SW50ZXJmYWNlIHtcblxuICAgIGludGVybmFsIGluaXQoKSB7fVxuICAgIFxuICAgXC9cLyBNQVJLOiAtIGluaXRcblxuICAgIGludGVybmFsIHZhciBpbml0SW5wdXRSZWNlaXZlZElucHV0OiBTdHJpbmc\/XG4gICAgaW50ZXJuYWwgdmFyIGluaXRJbnB1dFJlY2VpdmVkSW52b2NhdGlvbnM6IFtTdHJpbmddID0gW11cbiAgICBpbnRlcm5hbCB2YXIgaW5pdElucHV0Q2xvc3VyZTogKChTdHJpbmcpIC0+IFZvaWQpP1xuXG4gICAgcmVxdWlyZWQgaW5pdChpbnB1dDogU3RyaW5nKSB7XG4gICAgICAgIGluaXRJbnB1dFJlY2VpdmVkSW5wdXQgPSBpbnB1dFxuICAgICAgICBpbml0SW5wdXRSZWNlaXZlZEludm9jYXRpb25zLmFwcGVuZChpbnB1dClcbiAgICAgICAgaW5pdElucHV0Q2xvc3VyZT8oaW5wdXQpXG4gICAgfVxuICAgIFxuICAgXC9cLyBNQVJLOiAtIGZldGNoU29tZXRoaW5nV2l0aElEXG5cbiAgICBpbnRlcm5hbCB2YXIgZmV0Y2hTb21ldGhpbmdXaXRoSURDYWxsc0NvdW50ID0gMFxuICAgIGludGVybmFsIHZhciBmZXRjaFNvbWV0aGluZ1dpdGhJRENhbGxlZDogQm9vbCB7XG4gICAgICAgIGZldGNoU29tZXRoaW5nV2l0aElEQ2FsbHNDb3VudCA+IDBcbiAgICB9XG4gICAgaW50ZXJuYWwgdmFyIGZldGNoU29tZXRoaW5nV2l0aElEUmVjZWl2ZWRJZDogU3RyaW5nP1xuICAgIGludGVybmFsIHZhciBmZXRjaFNvbWV0aGluZ1dpdGhJRFJlY2VpdmVkSW52b2NhdGlvbnM6IFtTdHJpbmddID0gW11cblxuICAgIGludGVybmFsIGZ1bmMgZmV0Y2hTb21ldGhpbmdXaXRoSUQoXyBpZDogU3RyaW5nKSBhc3luYyB0aHJvd3MgLT4gU29tZXRoaW5nIHtcbiAgICAgICAgZmV0Y2hTb21ldGhpbmdXaXRoSURDYWxsc0NvdW50ICs9IDFcbiAgICAgICAgZmV0Y2hTb21ldGhpbmdXaXRoSURSZWNlaXZlZElkID0gaWRcbiAgICAgICAgZmV0Y2hTb21ldGhpbmdXaXRoSURSZWNlaXZlZEludm9jYXRpb25zLmFwcGVuZChpZClcbiAgICAgICAgcmV0dXJuIC5maXh0dXJlKClcbiAgICB9XG4gICAgXG4gICBcL1wvIE1BUks6IC0gZmV0Y2hBcnJheU9mU29tZXRoaW5nXG5cbiAgICBpbnRlcm5hbCB2YXIgZmV0Y2hBcnJheU9mU29tZXRoaW5nQ2FsbHNDb3VudCA9IDBcbiAgICBpbnRlcm5hbCB2YXIgZmV0Y2hBcnJheU9mU29tZXRoaW5nQ2FsbGVkOiBCb29sIHtcbiAgICAgICAgZmV0Y2hBcnJheU9mU29tZXRoaW5nQ2FsbHNDb3VudCA+IDBcbiAgICB9XG5cbiAgICBpbnRlcm5hbCBmdW5jIGZldGNoQXJyYXlPZlNvbWV0aGluZygpIGFzeW5jIHRocm93cyAtPiBbU29tZXRoaW5nXSB7XG4gICAgICAgIGZldGNoQXJyYXlPZlNvbWV0aGluZ0NhbGxzQ291bnQgKz0gMVxuICAgICAgICByZXR1cm4gLmluaXQoKVxuICAgIH1cbiAgICBcbiAgIFwvXC8gTUFSSzogLSBmZXRjaEFycmF5T2ZTb21lRW51bVxuXG4gICAgaW50ZXJuYWwgdmFyIGZldGNoQXJyYXlPZlNvbWVFbnVtQ2FsbHNDb3VudCA9IDBcbiAgICBpbnRlcm5hbCB2YXIgZmV0Y2hBcnJheU9mU29tZUVudW1DYWxsZWQ6IEJvb2wge1xuICAgICAgICBmZXRjaEFycmF5T2ZTb21lRW51bUNhbGxzQ291bnQgPiAwXG4gICAgfVxuXG4gICAgaW50ZXJuYWwgZnVuYyBmZXRjaEFycmF5T2ZTb21lRW51bSgpIGFzeW5jIHRocm93cyAtPiBbU29tZUVudW1dIHtcbiAgICAgICAgZmV0Y2hBcnJheU9mU29tZUVudW1DYWxsc0NvdW50ICs9IDFcbiAgICAgICAgcmV0dXJuIC5pbml0KClcbiAgICB9XG4gICAgXG4gICBcL1wvIE1BUks6IC0gcG9zdFNvbWV0aGluZ1xuXG4gICAgaW50ZXJuYWwgdmFyIHBvc3RTb21ldGhpbmdTdHJpbmdQYXJhbUludFBhcmFtU29tZXRoaW5nUGFyYW1DYWxsc0NvdW50ID0gMFxuICAgIGludGVybmFsIHZhciBwb3N0U29tZXRoaW5nU3RyaW5nUGFyYW1JbnRQYXJhbVNvbWV0aGluZ1BhcmFtQ2FsbGVkOiBCb29sIHtcbiAgICAgICAgcG9zdFNvbWV0aGluZ1N0cmluZ1BhcmFtSW50UGFyYW1Tb21ldGhpbmdQYXJhbUNhbGxzQ291bnQgPiAwXG4gICAgfVxuICAgIGludGVybmFsIHZhciBwb3N0U29tZXRoaW5nU3RyaW5nUGFyYW1JbnRQYXJhbVNvbWV0aGluZ1BhcmFtUmVjZWl2ZWRBcmd1bWVudHM6IChzdHJpbmdQYXJhbTogU3RyaW5nLCBpbnRQYXJhbTogSW50LCBzb21ldGhpbmdQYXJhbTogU29tZXRoaW5nKT9cbiAgICBpbnRlcm5hbCB2YXIgcG9zdFNvbWV0aGluZ1N0cmluZ1BhcmFtSW50UGFyYW1Tb21ldGhpbmdQYXJhbVJlY2VpdmVkSW52b2NhdGlvbnM6IFsoc3RyaW5nUGFyYW06IFN0cmluZywgaW50UGFyYW06IEludCwgc29tZXRoaW5nUGFyYW06IFNvbWV0aGluZyldID0gW11cblxuICAgIGludGVybmFsIGZ1bmMgcG9zdFNvbWV0aGluZyhzdHJpbmdQYXJhbTogU3RyaW5nLCBpbnRQYXJhbTogSW50LCBzb21ldGhpbmdQYXJhbTogU29tZXRoaW5nKSBhc3luYyB0aHJvd3Mge1xuICAgICAgICBwb3N0U29tZXRoaW5nU3RyaW5nUGFyYW1JbnRQYXJhbVNvbWV0aGluZ1BhcmFtQ2FsbHNDb3VudCArPSAxXG4gICAgICAgIHBvc3RTb21ldGhpbmdTdHJpbmdQYXJhbUludFBhcmFtU29tZXRoaW5nUGFyYW1SZWNlaXZlZEFyZ3VtZW50cyA9IChzdHJpbmdQYXJhbTogc3RyaW5nUGFyYW0sIGludFBhcmFtOiBpbnRQYXJhbSwgc29tZXRoaW5nUGFyYW06IHNvbWV0aGluZ1BhcmFtKVxuICAgICAgICBwb3N0U29tZXRoaW5nU3RyaW5nUGFyYW1JbnRQYXJhbVNvbWV0aGluZ1BhcmFtUmVjZWl2ZWRJbnZvY2F0aW9ucy5hcHBlbmQoKHN0cmluZ1BhcmFtOiBzdHJpbmdQYXJhbSwgaW50UGFyYW06IGludFBhcmFtLCBzb21ldGhpbmdQYXJhbTogc29tZXRoaW5nUGFyYW0pKVxuICAgIH1cbn0iLCJ1cmwiOiIiLCJyZWdlbmVyYXRpb25Db3VudGVyIjowLCJmaWxlVVJMIjoiZmlsZTpcL1wvXC9Vc2Vyc1wvYm9jYXRlZHVcL2FkaWRhc1wvZGV2ZWxvcG1lbnRcL1NvdXJjZXJ5UmVzb3VyY2VzXC9Bc3luY0F1dG9TcHlcL0FzeW5jQXV0b1NweS5zb3VyY2VyeXRlbXBsYXRlIiwicnVuQ29uZmlndXJhdGlvbiI6InNlbGVjdGlvbiIsInNhbXBsZUNvZGUiOiJlbnVtIFNvbWVFbnVtIHtcbiAgICBjYXNlIGZpcnN0Q2FzZVxuICAgIGNhc2Ugc2Vjb25kQ2FzZVxufVxuXG5wcm90b2NvbCBTb21ldGhpbmdSZXBvc2l0b3J5SW50ZXJmYWNlIHtcbiAgICBpbml0KGlucHV0OiBTdHJpbmcpXG4gICAgZnVuYyBmZXRjaFNvbWV0aGluZ1dpdGhJRChfIGlkOiBTdHJpbmcpIGFzeW5jIHRocm93cyAtPiBTb21ldGhpbmdcbiAgICBmdW5jIGZldGNoQXJyYXlPZlNvbWV0aGluZygpIGFzeW5jIHRocm93cyAtPiBbU29tZXRoaW5nXVxuICAgIGZ1bmMgZmV0Y2hBcnJheU9mU29tZUVudW0oKSBhc3luYyB0aHJvd3MgLT4gW1NvbWVFbnVtXVxuICAgIGZ1bmMgcG9zdFNvbWV0aGluZyhzdHJpbmdQYXJhbTogU3RyaW5nLCBpbnRQYXJhbTogSW50LCBzb21ldGhpbmdQYXJhbTogU29tZXRoaW5nKSBhc3luYyB0aHJvd3Ncbn0iLCJpc0xvY2tlZCI6ZmFsc2UsImtpbmQiOiJzdGVuY2lsIiwidHJpbVdoaXRlc3BhY2VzIjp0cnVlLCJuYW1lIjoiQXN5bmNBdXRvU3B5IiwiaW5zZXJ0aW9uTW9kZSI6ImVuZE9mRmlsZSJ9"}