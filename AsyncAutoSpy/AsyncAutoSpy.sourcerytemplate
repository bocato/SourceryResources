{"version":3,"instance":"eyJpZCI6Ijc3MkExMzk0LUE1OTMtNDdFNS04RDg5LUQ0MTQ2NzRBODQzRiIsImRlc2NyaXB0aW9uIjoiR2VuZXJhdGVzIGBTcHlgcyBiYXNlZCBvbiBhIGRlcGVuZGVuY3kgcHJvdG9jb2wsIG1vc3RseSBhcHBsaWNhYmxlIGZvciBkYXRhc291cmNlcyBsaWtlIHNlcnZpY2VzIGFuZCByZXBvc2l0b3JpZXMuXG5OT1RFOiBpdCBhc3N1bWVzIHRoYXQgYWxsIG1vZGVscyByZXR1cm5lZCBoYXZlIGEgYGZpeHR1cmVgIG1ldGhvZCBwcmV2aW91c2x5IGRlZmluZWQuXG4qQmFzZWQgb24gYFByb3RvY29sIE1vY2tgIHRlbXBsYXRlIGZyb20gYMWBdWthc3ogS3VjemJvcnNraWAqIiwiY29udGVudCI6InslIG1hY3JvIGdldENsZWFuVHlwZU5hbWUgdHlwZU5hbWUgJX1cbiAgICB7JSBpZiB0eXBlTmFtZXxjb250YWluczogXCJJbnRlcmZhY2VcIiAlfVxuICAgICAgICB7eyB0eXBlTmFtZXxyZXBsYWNlOiBcIkludGVyZmFjZVwiLCBcIlwifX1cbiAgICB7JSBlbGlmIHR5cGVOYW1lfGNvbnRhaW5zOiBcIlByb3RvY29sXCIgJX1cbiAgICAgICAge3sgdHlwZU5hbWV8cmVwbGFjZTogXCJQcm90b2NvbFwiLCBcIlwifX1cbiAgICB7JSBlbmRpZiAlfVxueyUgZW5kbWFjcm8gJX1cblxueyUgbWFjcm8gc3dpZnRpZnlNZXRob2ROYW1lIG5hbWUgJX17JSB0eXBlZCBuYW1lIGFzIFN0cmluZyAlfXt7IG5hbWUgfCByZXBsYWNlOlwiKFwiLFwiX1wiIHwgcmVwbGFjZTpcIilcIixcIlwiIHwgcmVwbGFjZTpcIjpcIixcIl9cIiB8IHJlcGxhY2U6XCJgXCIsXCJcIiB8IHNuYWtlVG9DYW1lbENhc2UgfCBsb3dlckZpcnN0V29yZCB9fXslIGVuZG1hY3JvICV9XG5cbnslIG1hY3JvIHJlc29sdmVSZXR1cm5WYWx1ZUZvclJldHVyblR5cGUgbWV0aG9kICV9XG4gICAgeyUgc2V0IGZvdW5kYXRpb25UeXBlc1dpdGhOb0ZpeHR1cmUgJX0gXG4gICAgW1xuICAgICAgICBcIkRhdGVcIiwgXCJEYXRhXCIsIFwiVVJMXCJcbiAgICBdXG4gICAgeyUgZW5kc2V0ICV9XG4gICAgeyUgaWYgbWV0aG9kLnJldHVyblR5cGUua2luZCA9PSBcImVudW1cIiAlfVxuICAgICAgICAue3sgbWV0aG9kLnJldHVyblR5cGUuY2FzZXMuZmlyc3QubmFtZSB9fVxuICAgIHslIGVsaWYgZm91bmRhdGlvblR5cGVzV2l0aE5vRml4dHVyZXxjb250YWluczogbWV0aG9kLnJldHVyblR5cGVOYW1lICV9XG4gICAgICAgIC5pbml0KClcbiAgICB7JSBlbHNlICV9XG4gICAgICAgIHslIGlmIG1ldGhvZC5yZXR1cm5UeXBlTmFtZXxjb250YWluczpcIltcIiBhbmQgbWV0aG9kLnJldHVyblR5cGVOYW1lfGNvbnRhaW5zOlwiXVwiICV9XG4gICAgICAgICAgICAuaW5pdCgpXG4gICAgICAgIHslIGVsc2UgJX1cbiAgICAgICAgICAgIC5maXh0dXJlKClcbiAgICAgICAgeyUgZW5kaWYgJX1cbiAgICB7JSBlbmRpZiAlfVxueyUgZW5kbWFjcm8gJX1cblxueyUgbWFjcm8gbWV0aG9kUmVjZWl2ZWRQYXJhbWV0ZXJzIG1ldGhvZCAlfVxueyUgdHlwZWQgbWV0aG9kIGFzIE1ldGhvZCAlfVxuICAgIHslaWYgbWV0aG9kLnBhcmFtZXRlcnMuY291bnQgPT0gMSAlfVxuICAgICAgICB7JSBjYWxsIHN3aWZ0aWZ5TWV0aG9kTmFtZSBtZXRob2Quc2VsZWN0b3JOYW1lICV9UmVjZWl2ZWR7JSBmb3IgcGFyYW0gaW4gbWV0aG9kLnBhcmFtZXRlcnMgJX17eyBwYXJhbS5uYW1lfHVwcGVyRmlyc3RMZXR0ZXIgfX0gPSB7eyBwYXJhbS5uYW1lIH19eyUgZW5kZm9yICV9XG4gICAgICAgIHslIGNhbGwgc3dpZnRpZnlNZXRob2ROYW1lIG1ldGhvZC5zZWxlY3Rvck5hbWUgJX1SZWNlaXZlZEludm9jYXRpb25zLmFwcGVuZCh7JSBmb3IgcGFyYW0gaW4gbWV0aG9kLnBhcmFtZXRlcnMgJX17eyBwYXJhbS5uYW1lIH19KXslIGVuZGZvciAlfVxuICAgIHslIGVsc2UgJX1cbiAgICB7JSBpZiBub3QgbWV0aG9kLnBhcmFtZXRlcnMuY291bnQgPT0gMCAlfVxuICAgICAgICB7JSBjYWxsIHN3aWZ0aWZ5TWV0aG9kTmFtZSBtZXRob2Quc2VsZWN0b3JOYW1lICV9UmVjZWl2ZWRBcmd1bWVudHMgPSAoeyUgZm9yIHBhcmFtIGluIG1ldGhvZC5wYXJhbWV0ZXJzICV9e3sgcGFyYW0ubmFtZSB9fToge3sgcGFyYW0ubmFtZSB9fXslIGlmIG5vdCBmb3Jsb29wLmxhc3QlfSwgeyUgZW5kaWYgJX17JSBlbmRmb3IgJX0pXG4gICAgICAgIHslIGNhbGwgc3dpZnRpZnlNZXRob2ROYW1lIG1ldGhvZC5zZWxlY3Rvck5hbWUgJX1SZWNlaXZlZEludm9jYXRpb25zLmFwcGVuZCgoeyUgZm9yIHBhcmFtIGluIG1ldGhvZC5wYXJhbWV0ZXJzICV9e3sgcGFyYW0ubmFtZSB9fToge3sgcGFyYW0ubmFtZSB9fXslIGlmIG5vdCBmb3Jsb29wLmxhc3QlfSwgeyUgZW5kaWYgJX17JSBlbmRmb3IgJX0pKVxuICAgIHslIGVuZGlmICV9XG4gICAgeyUgZW5kaWYgJX1cbnslIGVuZG1hY3JvICV9XG5cbnslIG1hY3JvIG1ldGhvZENsb3N1cmVOYW1lIG1ldGhvZCAlfXslIHR5cGVkIG1ldGhvZCBhcyBNZXRob2QgJX17JSBjYWxsIHN3aWZ0aWZ5TWV0aG9kTmFtZSBtZXRob2Quc2VsZWN0b3JOYW1lICV9Q2xvc3VyZXslIGVuZG1hY3JvICV9XG5cbnslIG1hY3JvIGNsb3N1cmVSZXR1cm5UeXBlTmFtZSBtZXRob2QgJX17JSB0eXBlZCBtZXRob2QgYXMgTWV0aG9kICV9eyUgaWYgbWV0aG9kLmlzT3B0aW9uYWxSZXR1cm5UeXBlICV9e3sgbWV0aG9kLnVud3JhcHBlZFJldHVyblR5cGVOYW1lIH19P3slIGVsc2UgJX17eyBtZXRob2QucmV0dXJuVHlwZU5hbWUgfX17JSBlbmRpZiAlfXslIGVuZG1hY3JvICV9XG5cbnslIG1hY3JvIG1ldGhvZENsb3N1cmVEZWNsYXJhdGlvbiBtZXRob2QgJX1cbnslIHR5cGVkIG1ldGhvZCBhcyBNZXRob2QgJX1cbnslIGlmIG1ldGhvZC5pc0luaXRpYWxpemVyICV9XG4gICAge3sgdHlwZS5hY2Nlc3NMZXZlbCB9fSB2YXIgeyUgY2FsbCBtZXRob2RDbG9zdXJlTmFtZSBtZXRob2QgJX06ICgoeyUgZm9yIHBhcmFtIGluIG1ldGhvZC5wYXJhbWV0ZXJzICV9e3sgcGFyYW0udHlwZU5hbWUgfX17JSBpZiBub3QgZm9ybG9vcC5sYXN0ICV9LCB7JSBlbmRpZiAlfXslIGVuZGZvciAlfSkgeyUgaWYgbWV0aG9kLnRocm93cyAlfXRocm93cyB7JSBlbmRpZiAlfS0+IHslIGlmIG1ldGhvZC5pc0luaXRpYWxpemVyICV9Vm9pZHslIGVsc2UgJX17JSBjYWxsIGNsb3N1cmVSZXR1cm5UeXBlTmFtZSBtZXRob2QgJX17JSBlbmRpZiAlfSk\/XG57JSBlbmRpZiAlfVxueyUgZW5kbWFjcm8gJX1cblxueyUgbWFjcm8gbWV0aG9kQ2xvc3VyZUNhbGxQYXJhbWV0ZXJzIG1ldGhvZCAlfXslIHR5cGVkIG1ldGhvZCBhcyBNZXRob2QgJX17JSBmb3IgcGFyYW0gaW4gbWV0aG9kLnBhcmFtZXRlcnMgJX17eyBwYXJhbS5uYW1lIH19eyUgaWYgbm90IGZvcmxvb3AubGFzdCAlfSwgeyUgZW5kaWYgJX17JSBlbmRmb3IgJX17JSBlbmRtYWNybyAlfVxuXG57JSBtYWNybyBtb2NrTWV0aG9kIG1ldGhvZCAlfVxuICAgIHslIHR5cGVkIG1ldGhvZCBhcyBNZXRob2QgJX1cbiAgICB7JSBuZXdsaW5lICV9ICAgXC9cLyBNQVJLOiAtIHt7IG1ldGhvZC5zaG9ydE5hbWUgfX1cblxuICAgIHslIGlmIG5vdCBtZXRob2QuaXNJbml0aWFsaXplciAlfVxuICAgIHt7IHR5cGUuYWNjZXNzTGV2ZWwgfX0gdmFyIHslIGNhbGwgc3dpZnRpZnlNZXRob2ROYW1lIG1ldGhvZC5zZWxlY3Rvck5hbWUgJX1DYWxsc0NvdW50ID0gMFxuICAgIHt7IHR5cGUuYWNjZXNzTGV2ZWwgfX0gdmFyIHslIGNhbGwgc3dpZnRpZnlNZXRob2ROYW1lIG1ldGhvZC5zZWxlY3Rvck5hbWUgJX1DYWxsZWQ6IEJvb2wge1xuICAgICAgICB7JSBjYWxsIHN3aWZ0aWZ5TWV0aG9kTmFtZSBtZXRob2Quc2VsZWN0b3JOYW1lICV9Q2FsbHNDb3VudCA+IDBcbiAgICB9XG4gICAgeyUgZW5kaWYgJX1cbiAgICB7JSBpZiBtZXRob2QucGFyYW1ldGVycy5jb3VudCA9PSAxICV9XG4gICAge3sgdHlwZS5hY2Nlc3NMZXZlbCB9fSB2YXIgeyUgY2FsbCBzd2lmdGlmeU1ldGhvZE5hbWUgbWV0aG9kLnNlbGVjdG9yTmFtZSAlfVJlY2VpdmVkeyUgZm9yIHBhcmFtIGluIG1ldGhvZC5wYXJhbWV0ZXJzICV9e3sgcGFyYW0ubmFtZXx1cHBlckZpcnN0TGV0dGVyIH19OiB7eyAnKCcgaWYgcGFyYW0uaXNDbG9zdXJlIH19e3sgcGFyYW0udHlwZU5hbWUudW53cmFwcGVkVHlwZU5hbWUgfX17eyAnKScgaWYgcGFyYW0uaXNDbG9zdXJlIH19P3slIGVuZGZvciAlfVxuICAgIHt7IHR5cGUuYWNjZXNzTGV2ZWwgfX0gdmFyIHslIGNhbGwgc3dpZnRpZnlNZXRob2ROYW1lIG1ldGhvZC5zZWxlY3Rvck5hbWUgJX1SZWNlaXZlZEludm9jYXRpb25zeyUgZm9yIHBhcmFtIGluIG1ldGhvZC5wYXJhbWV0ZXJzICV9OiBbe3sgJygnIGlmIHBhcmFtLmlzQ2xvc3VyZSB9fXt7IHBhcmFtLnR5cGVOYW1lLnVud3JhcHBlZFR5cGVOYW1lIH19e3sgJyknIGlmIHBhcmFtLmlzQ2xvc3VyZSB9fXslaWYgcGFyYW0udHlwZU5hbWUuaXNPcHRpb25hbCV9P3slZW5kaWYlfV17JSBlbmRmb3IgJX0gPSBbXVxuICAgIHslIGVsaWYgbm90IG1ldGhvZC5wYXJhbWV0ZXJzLmNvdW50ID09IDAgJX1cbiAgICB7eyB0eXBlLmFjY2Vzc0xldmVsIH19IHZhciB7JSBjYWxsIHN3aWZ0aWZ5TWV0aG9kTmFtZSBtZXRob2Quc2VsZWN0b3JOYW1lICV9UmVjZWl2ZWRBcmd1bWVudHM6ICh7JSBmb3IgcGFyYW0gaW4gbWV0aG9kLnBhcmFtZXRlcnMgJX17eyBwYXJhbS5uYW1lIH19OiB7eyBwYXJhbS51bndyYXBwZWRUeXBlTmFtZSBpZiBwYXJhbS50eXBlQXR0cmlidXRlcy5lc2NhcGluZyBlbHNlIHBhcmFtLnR5cGVOYW1lIH19e3sgJywgJyBpZiBub3QgZm9ybG9vcC5sYXN0IH19eyUgZW5kZm9yICV9KT9cbiAgICB7eyB0eXBlLmFjY2Vzc0xldmVsIH19IHZhciB7JSBjYWxsIHN3aWZ0aWZ5TWV0aG9kTmFtZSBtZXRob2Quc2VsZWN0b3JOYW1lICV9UmVjZWl2ZWRJbnZvY2F0aW9uczogWyh7JSBmb3IgcGFyYW0gaW4gbWV0aG9kLnBhcmFtZXRlcnMgJX17eyBwYXJhbS5uYW1lIH19OiB7eyBwYXJhbS51bndyYXBwZWRUeXBlTmFtZSBpZiBwYXJhbS50eXBlQXR0cmlidXRlcy5lc2NhcGluZyBlbHNlIHBhcmFtLnR5cGVOYW1lIH19e3sgJywgJyBpZiBub3QgZm9ybG9vcC5sYXN0IH19eyUgZW5kZm9yICV9KV0gPSBbXVxuICAgIHslIGVuZGlmICV9XG4gICAgeyUgY2FsbCBtZXRob2RDbG9zdXJlRGVjbGFyYXRpb24gbWV0aG9kICV9XG5cbnslIGlmIG1ldGhvZC5pc0luaXRpYWxpemVyICV9XG4gICAgcmVxdWlyZWQge3sgbWV0aG9kLm5hbWUgfX0ge1xuICAgICAgICB7JSBjYWxsIG1ldGhvZFJlY2VpdmVkUGFyYW1ldGVycyBtZXRob2QgJX1cbiAgICAgICAgeyUgY2FsbCBtZXRob2RDbG9zdXJlTmFtZSBtZXRob2QgJX0\/KHslIGNhbGwgbWV0aG9kQ2xvc3VyZUNhbGxQYXJhbWV0ZXJzIG1ldGhvZCAlfSlcbiAgICB9XG57JSBlbHNlICV9XG4gICAge3sgdHlwZS5hY2Nlc3NMZXZlbCB9fSBmdW5jIHt7IG1ldGhvZC5uYW1lIH19e3sgJyB0aHJvd3MnIGlmIG1ldGhvZC50aHJvd3MgfX17JSBpZiBub3QgbWV0aG9kLnJldHVyblR5cGVOYW1lLmlzVm9pZCAlfSAtPiB7eyBtZXRob2QucmV0dXJuVHlwZU5hbWUgfX17JSBlbmRpZiAlfSB7XG4gICAgICAgIHslIGNhbGwgc3dpZnRpZnlNZXRob2ROYW1lIG1ldGhvZC5zZWxlY3Rvck5hbWUgJX1DYWxsc0NvdW50ICs9IDFcbiAgICAgICAgeyUgY2FsbCBtZXRob2RSZWNlaXZlZFBhcmFtZXRlcnMgbWV0aG9kICV9XG4gICAgICAgIHslIGlmIG5vdCBtZXRob2QucmV0dXJuVHlwZU5hbWUuaXNWb2lkICV9XG4gICAgICAgIHslIHNldCByZXR1cm5WYWx1ZSAlfSB7JSBjYWxsIHJlc29sdmVSZXR1cm5WYWx1ZUZvclJldHVyblR5cGUgbWV0aG9kICV9IHslIGVuZHNldCAlfVxuICAgICAgICByZXR1cm4ge3sgcmV0dXJuVmFsdWV8cmVtb3ZlTmV3bGluZXMgfX1cbiAgICAgICAgeyUgZW5kaWYgJX1cbiAgICB9XG57JSBlbmRpZiAlfVxueyUgZW5kbWFjcm8gJX1cblxueyUgbWFjcm8gbW9ja2VkVmFyaWFibGVOYW1lIHZhcmlhYmxlICV9e3sgdmFyaWFibGUubmFtZSB9fXslIGVuZG1hY3JvICV9XG57JSBtYWNybyB1bmRlcmx5aW5nTW9ja2VkVmFyaWFibGVOYW1lIHZhcmlhYmxlICV9dW5kZXJseWluZ3t7IHZhcmlhYmxlLm5hbWV8dXBwZXJGaXJzdExldHRlciB9fXslIGVuZG1hY3JvICV9XG5cbnslIG1hY3JvIG1vY2tPcHRpb25hbFZhcmlhYmxlIHZhcmlhYmxlICV9XG57JSB0eXBlZCB2YXJpYWJsZSBhcyBWYXJpYWJsZSAlfVxuICAgIHt7IHR5cGUuYWNjZXNzTGV2ZWwgfX0gdmFyIHslIGNhbGwgbW9ja2VkVmFyaWFibGVOYW1lIHZhcmlhYmxlICV9OiB7eyB2YXJpYWJsZS50eXBlTmFtZSB9fVxueyUgZW5kbWFjcm8gJX1cblxueyUgbWFjcm8gbW9ja05vbk9wdGlvbmFsQXJyYXlPckRpY3Rpb25hcnlWYXJpYWJsZSB2YXJpYWJsZSAlfVxueyUgdHlwZWQgdmFyaWFibGUgYXMgVmFyaWFibGUgJX1cbiAgICB7eyB0eXBlLmFjY2Vzc0xldmVsIH19IHZhciB7JSBjYWxsIG1vY2tlZFZhcmlhYmxlTmFtZSB2YXJpYWJsZSAlfToge3sgdmFyaWFibGUudHlwZU5hbWUgfX0gPSB7JSBpZiB2YXJpYWJsZS5pc0FycmF5ICV9W117JSBlbGlmIHZhcmlhYmxlLmlzRGljdGlvbmFyeSAlfVs6XXslIGVuZGlmICV9XG57JSBlbmRtYWNybyAlfVxuXG57JSBtYWNybyBtb2NrTm9uT3B0aW9uYWxWYXJpYWJsZSB2YXJpYWJsZSAlfVxuICAgIHslIHR5cGVkIHZhcmlhYmxlIGFzIFZhcmlhYmxlICV9XG4gICAgeyUgbmV3bGluZSAlfSAgIFwvXC8gTUFSSzogLSB7eyB2YXJpYWJsZS5uYW1lIH19XG5cbiAgICB7eyB0eXBlLmFjY2Vzc0xldmVsIH19IHZhciB7JSBjYWxsIG1vY2tlZFZhcmlhYmxlTmFtZSB2YXJpYWJsZSAlfToge3sgdmFyaWFibGUudHlwZU5hbWUgfX0ge1xuICAgICAgICBnZXQgeyB7JSBjYWxsIHVuZGVybHlpbmdNb2NrZWRWYXJpYWJsZU5hbWUgdmFyaWFibGUgJX0gfVxuICAgICAgICBzZXQodmFsdWUpIHsgeyUgY2FsbCB1bmRlcmx5aW5nTW9ja2VkVmFyaWFibGVOYW1lIHZhcmlhYmxlICV9ID0gdmFsdWUgfVxuICAgIH1cbiAgICBwcml2YXRlIHZhciB7JSBjYWxsIHVuZGVybHlpbmdNb2NrZWRWYXJpYWJsZU5hbWUgdmFyaWFibGUgJX06IHt7IHZhcmlhYmxlLnR5cGVOYW1lIH19IVxueyUgZW5kbWFjcm8gJX1cblxuXG57JSBmb3IgdHlwZSBpbiB0eXBlcy5wcm90b2NvbHMgJX0geyMgVXNlIHR5cGVzLmltcGxlbWVudGluZy5Bc3luY0F1dG9TcHkgaW5zdGVhZCBvZiB0eXBlcy5wcm90b2NvbHMgaWYgZGVjaWRlZCB0byBoYXZlIHRoaXMgcHJvdG9jb2wgI31cblxueyUgbmV3bGluZSAlfVwvXC8gTUFSSzogLSB7eyB0eXBlLm5hbWUgfX1TcHlcbnslIHNldCBjbGVhblR5cGVOYW1lICV9IHslIGNhbGwgZ2V0Q2xlYW5UeXBlTmFtZSB0eXBlLm5hbWUgJX0gIHslIGVuZHNldCAlfVxue3sgdHlwZS5hY2Nlc3NMZXZlbCB9fSBmaW5hbCBjbGFzcyB7eyBjbGVhblR5cGVOYW1lfHJlbW92ZU5ld2xpbmVzIH19U3B5OiB7eyB0eXBlLm5hbWUgfX0ge1xuXG4gICAge3sgdHlwZS5hY2Nlc3NMZXZlbCB9fSBpbml0KCkge31cbnslIGZvciB2YXJpYWJsZSBpbiB0eXBlLmFsbFZhcmlhYmxlc3whZGVmaW5lZEluRXh0ZW5zaW9uICV9XG4gICAgeyUgaWYgdmFyaWFibGUuaXNPcHRpb25hbCAlfXslIGNhbGwgbW9ja09wdGlvbmFsVmFyaWFibGUgdmFyaWFibGUgJX17JSBlbGlmIHZhcmlhYmxlLmlzQXJyYXkgb3IgdmFyaWFibGUuaXNEaWN0aW9uYXJ5ICV9eyUgY2FsbCBtb2NrTm9uT3B0aW9uYWxBcnJheU9yRGljdGlvbmFyeVZhcmlhYmxlIHZhcmlhYmxlICV9eyUgZWxzZSAlfXslIGNhbGwgbW9ja05vbk9wdGlvbmFsVmFyaWFibGUgdmFyaWFibGUgJX17JSBlbmRpZiAlfVxueyUgZW5kZm9yICV9XG57JSBmb3IgbWV0aG9kIGluIHR5cGUuYWxsTWV0aG9kc3whZGVmaW5lZEluRXh0ZW5zaW9uICV9XG4gICAgeyUgY2FsbCBtb2NrTWV0aG9kIG1ldGhvZCAlfVxueyUgZW5kZm9yICV9XG59XG57JSBlbmRmb3IgJX0iLCJ2ZXJzaW9uIjozLCJmYXZvcml0ZSI6dHJ1ZSwiYXV0aG9yIjoiRWR1YXJkbyBCb2NhdG8iLCJnZW5lcmF0ZWRDb2RlIjoiXG5cL1wvIE1BUks6IC0gU29tZXRoaW5nUmVwb3NpdG9yeUludGVyZmFjZVNweVxuaW50ZXJuYWwgZmluYWwgY2xhc3MgU29tZXRoaW5nUmVwb3NpdG9yeVNweTogU29tZXRoaW5nUmVwb3NpdG9yeUludGVyZmFjZSB7XG5cbiAgICBpbnRlcm5hbCBpbml0KCkge31cbiAgICBcbiAgIFwvXC8gTUFSSzogLSBpbml0XG5cbiAgICBpbnRlcm5hbCB2YXIgaW5pdElucHV0UmVjZWl2ZWRJbnB1dDogU3RyaW5nP1xuICAgIGludGVybmFsIHZhciBpbml0SW5wdXRSZWNlaXZlZEludm9jYXRpb25zOiBbU3RyaW5nXSA9IFtdXG4gICAgaW50ZXJuYWwgdmFyIGluaXRJbnB1dENsb3N1cmU6ICgoU3RyaW5nKSAtPiBWb2lkKT9cblxuICAgIHJlcXVpcmVkIGluaXQoaW5wdXQ6IFN0cmluZykge1xuICAgICAgICBpbml0SW5wdXRSZWNlaXZlZElucHV0ID0gaW5wdXRcbiAgICAgICAgaW5pdElucHV0UmVjZWl2ZWRJbnZvY2F0aW9ucy5hcHBlbmQoaW5wdXQpXG4gICAgICAgIGluaXRJbnB1dENsb3N1cmU\/KGlucHV0KVxuICAgIH1cbiAgICBcbiAgIFwvXC8gTUFSSzogLSBmZXRjaFNvbWV0aGluZ1dpdGhJRFxuXG4gICAgaW50ZXJuYWwgdmFyIGZldGNoU29tZXRoaW5nV2l0aElEQ2FsbHNDb3VudCA9IDBcbiAgICBpbnRlcm5hbCB2YXIgZmV0Y2hTb21ldGhpbmdXaXRoSURDYWxsZWQ6IEJvb2wge1xuICAgICAgICBmZXRjaFNvbWV0aGluZ1dpdGhJRENhbGxzQ291bnQgPiAwXG4gICAgfVxuICAgIGludGVybmFsIHZhciBmZXRjaFNvbWV0aGluZ1dpdGhJRFJlY2VpdmVkSWQ6IFN0cmluZz9cbiAgICBpbnRlcm5hbCB2YXIgZmV0Y2hTb21ldGhpbmdXaXRoSURSZWNlaXZlZEludm9jYXRpb25zOiBbU3RyaW5nXSA9IFtdXG5cbiAgICBpbnRlcm5hbCBmdW5jIGZldGNoU29tZXRoaW5nV2l0aElEKF8gaWQ6IFN0cmluZykgdGhyb3dzIC0+IFNvbWV0aGluZyB7XG4gICAgICAgIGZldGNoU29tZXRoaW5nV2l0aElEQ2FsbHNDb3VudCArPSAxXG4gICAgICAgIGZldGNoU29tZXRoaW5nV2l0aElEUmVjZWl2ZWRJZCA9IGlkXG4gICAgICAgIGZldGNoU29tZXRoaW5nV2l0aElEUmVjZWl2ZWRJbnZvY2F0aW9ucy5hcHBlbmQoaWQpXG4gICAgICAgIHJldHVybiAuZml4dHVyZSgpXG4gICAgfVxuICAgIFxuICAgXC9cLyBNQVJLOiAtIGZldGNoQXJyYXlPZlNvbWV0aGluZ1xuXG4gICAgaW50ZXJuYWwgdmFyIGZldGNoQXJyYXlPZlNvbWV0aGluZ0NhbGxzQ291bnQgPSAwXG4gICAgaW50ZXJuYWwgdmFyIGZldGNoQXJyYXlPZlNvbWV0aGluZ0NhbGxlZDogQm9vbCB7XG4gICAgICAgIGZldGNoQXJyYXlPZlNvbWV0aGluZ0NhbGxzQ291bnQgPiAwXG4gICAgfVxuXG4gICAgaW50ZXJuYWwgZnVuYyBmZXRjaEFycmF5T2ZTb21ldGhpbmcoKSB0aHJvd3MgLT4gW1NvbWV0aGluZ10ge1xuICAgICAgICBmZXRjaEFycmF5T2ZTb21ldGhpbmdDYWxsc0NvdW50ICs9IDFcbiAgICAgICAgcmV0dXJuIC5pbml0KClcbiAgICB9XG4gICAgXG4gICBcL1wvIE1BUks6IC0gZmV0Y2hBcnJheU9mU29tZUVudW1cblxuICAgIGludGVybmFsIHZhciBmZXRjaEFycmF5T2ZTb21lRW51bUNhbGxzQ291bnQgPSAwXG4gICAgaW50ZXJuYWwgdmFyIGZldGNoQXJyYXlPZlNvbWVFbnVtQ2FsbGVkOiBCb29sIHtcbiAgICAgICAgZmV0Y2hBcnJheU9mU29tZUVudW1DYWxsc0NvdW50ID4gMFxuICAgIH1cblxuICAgIGludGVybmFsIGZ1bmMgZmV0Y2hBcnJheU9mU29tZUVudW0oKSB0aHJvd3MgLT4gW1NvbWVFbnVtXSB7XG4gICAgICAgIGZldGNoQXJyYXlPZlNvbWVFbnVtQ2FsbHNDb3VudCArPSAxXG4gICAgICAgIHJldHVybiAuaW5pdCgpXG4gICAgfVxuICAgIFxuICAgXC9cLyBNQVJLOiAtIHBvc3RTb21ldGhpbmdcblxuICAgIGludGVybmFsIHZhciBwb3N0U29tZXRoaW5nU3RyaW5nUGFyYW1JbnRQYXJhbVNvbWV0aGluZ1BhcmFtQ2FsbHNDb3VudCA9IDBcbiAgICBpbnRlcm5hbCB2YXIgcG9zdFNvbWV0aGluZ1N0cmluZ1BhcmFtSW50UGFyYW1Tb21ldGhpbmdQYXJhbUNhbGxlZDogQm9vbCB7XG4gICAgICAgIHBvc3RTb21ldGhpbmdTdHJpbmdQYXJhbUludFBhcmFtU29tZXRoaW5nUGFyYW1DYWxsc0NvdW50ID4gMFxuICAgIH1cbiAgICBpbnRlcm5hbCB2YXIgcG9zdFNvbWV0aGluZ1N0cmluZ1BhcmFtSW50UGFyYW1Tb21ldGhpbmdQYXJhbVJlY2VpdmVkQXJndW1lbnRzOiAoc3RyaW5nUGFyYW06IFN0cmluZywgaW50UGFyYW06IEludCwgc29tZXRoaW5nUGFyYW06IFNvbWV0aGluZyk\/XG4gICAgaW50ZXJuYWwgdmFyIHBvc3RTb21ldGhpbmdTdHJpbmdQYXJhbUludFBhcmFtU29tZXRoaW5nUGFyYW1SZWNlaXZlZEludm9jYXRpb25zOiBbKHN0cmluZ1BhcmFtOiBTdHJpbmcsIGludFBhcmFtOiBJbnQsIHNvbWV0aGluZ1BhcmFtOiBTb21ldGhpbmcpXSA9IFtdXG5cbiAgICBpbnRlcm5hbCBmdW5jIHBvc3RTb21ldGhpbmcoc3RyaW5nUGFyYW06IFN0cmluZywgaW50UGFyYW06IEludCwgc29tZXRoaW5nUGFyYW06IFNvbWV0aGluZykgdGhyb3dzIHtcbiAgICAgICAgcG9zdFNvbWV0aGluZ1N0cmluZ1BhcmFtSW50UGFyYW1Tb21ldGhpbmdQYXJhbUNhbGxzQ291bnQgKz0gMVxuICAgICAgICBwb3N0U29tZXRoaW5nU3RyaW5nUGFyYW1JbnRQYXJhbVNvbWV0aGluZ1BhcmFtUmVjZWl2ZWRBcmd1bWVudHMgPSAoc3RyaW5nUGFyYW06IHN0cmluZ1BhcmFtLCBpbnRQYXJhbTogaW50UGFyYW0sIHNvbWV0aGluZ1BhcmFtOiBzb21ldGhpbmdQYXJhbSlcbiAgICAgICAgcG9zdFNvbWV0aGluZ1N0cmluZ1BhcmFtSW50UGFyYW1Tb21ldGhpbmdQYXJhbVJlY2VpdmVkSW52b2NhdGlvbnMuYXBwZW5kKChzdHJpbmdQYXJhbTogc3RyaW5nUGFyYW0sIGludFBhcmFtOiBpbnRQYXJhbSwgc29tZXRoaW5nUGFyYW06IHNvbWV0aGluZ1BhcmFtKSlcbiAgICB9XG59IiwidXJsIjoiIiwicmVnZW5lcmF0aW9uQ291bnRlciI6MiwiZmlsZVVSTCI6ImZpbGU6XC9cL1wvVXNlcnNcL2JvY2F0ZWR1XC9hZGlkYXNcL2RldmVsb3BtZW50XC9Tb3VyY2VyeVJlc291cmNlc1wvQXN5bmNBdXRvU3B5XC9Bc3luY0F1dG9TcHkuc291cmNlcnl0ZW1wbGF0ZSIsInJ1bkNvbmZpZ3VyYXRpb24iOiJzZWxlY3Rpb24iLCJzYW1wbGVDb2RlIjoiZW51bSBTb21lRW51bSB7XG4gICAgY2FzZSBmaXJzdENhc2VcbiAgICBjYXNlIHNlY29uZENhc2Vcbn1cblxucHJvdG9jb2wgU29tZXRoaW5nUmVwb3NpdG9yeUludGVyZmFjZSB7XG4gICAgaW5pdChpbnB1dDogU3RyaW5nKVxuICAgIGZ1bmMgZmV0Y2hTb21ldGhpbmdXaXRoSUQoXyBpZDogU3RyaW5nKSBhc3luYyB0aHJvd3MgLT4gU29tZXRoaW5nXG4gICAgZnVuYyBmZXRjaEFycmF5T2ZTb21ldGhpbmcoKSBhc3luYyB0aHJvd3MgLT4gW1NvbWV0aGluZ11cbiAgICBmdW5jIGZldGNoQXJyYXlPZlNvbWVFbnVtKCkgYXN5bmMgdGhyb3dzIC0+IFtTb21lRW51bV1cbiAgICBmdW5jIHBvc3RTb21ldGhpbmcoc3RyaW5nUGFyYW06IFN0cmluZywgaW50UGFyYW06IEludCwgc29tZXRoaW5nUGFyYW06IFNvbWV0aGluZykgYXN5bmMgdGhyb3dzXG59IiwiaXNMb2NrZWQiOmZhbHNlLCJraW5kIjoic3RlbmNpbCIsInRyaW1XaGl0ZXNwYWNlcyI6dHJ1ZSwibmFtZSI6IkFzeW5jQXV0b1NweSIsImluc2VydGlvbk1vZGUiOiJlbmRPZkZpbGUifQ=="}