{"version":3,"instance":"\/XG4gICAgcHVibGljIHZhciBpbml0SW5wdXRSZWNlaXZlZEludm9jYXRpb25zOiBbU3RyaW5nXSA9IFtdXG4gICAgcHVibGljIHZhciBpbml0SW5wdXRDbG9zdXJlOiAoKFN0cmluZykgLT4gVm9pZCk\/XG5cbiAgICByZXF1aXJlZCBpbml0KGlucHV0OiBTdHJpbmcpIHtcbiAgICAgICAgaW5pdElucHV0UmVjZWl2ZWRJbnB1dCA9IGlucHV0XG4gICAgICAgIGluaXRJbnB1dFJlY2VpdmVkSW52b2NhdGlvbnMuYXBwZW5kKGlucHV0KVxuICAgICAgICBpbml0SW5wdXRDbG9zdXJlPyhpbnB1dClcbiAgICB9XG4gICAgXG4gICBcL1wvIE1BUks6IC0gZmV0Y2hTb21ldGhpbmdXaXRoSURcblxuICAgIHB1YmxpYyB2YXIgZmV0Y2hTb21ldGhpbmdXaXRoSURSZXN1bHRUb0JlUmV0dXJuZWQ6IFJlc3VsdDxTb21ldGhpbmcsIEVycm9yPiA9IC5zdWNjZXNzKC5maXh0dXJlKCkpXG4gICAgcHVibGljIHZhciBmZXRjaFNvbWV0aGluZ1dpdGhJRENhbGxzQ291bnQgPSAwXG4gICAgcHVibGljIHZhciBmZXRjaFNvbWV0aGluZ1dpdGhJRENhbGxlZDogQm9vbCB7XG4gICAgICAgIGZldGNoU29tZXRoaW5nV2l0aElEQ2FsbHNDb3VudCA+IDBcbiAgICB9XG4gICAgcHVibGljIHZhciBmZXRjaFNvbWV0aGluZ1dpdGhJRFJlY2VpdmVkSWQ6IFN0cmluZz9cbiAgICBwdWJsaWMgdmFyIGZldGNoU29tZXRoaW5nV2l0aElEUmVjZWl2ZWRJbnZvY2F0aW9uczogW1N0cmluZ10gPSBbXVxuXG4gICAgcHVibGljIGZ1bmMgZmV0Y2hTb21ldGhpbmdXaXRoSUQoXyBpZDogU3RyaW5nKSB0aHJvd3MgLT4gU29tZXRoaW5nIHtcbiAgICAgICAgZmV0Y2hTb21ldGhpbmdXaXRoSURDYWxsc0NvdW50ICs9IDFcbiAgICAgICAgZmV0Y2hTb21ldGhpbmdXaXRoSURSZWNlaXZlZElkID0gaWRcbiAgICAgICAgZmV0Y2hTb21ldGhpbmdXaXRoSURSZWNlaXZlZEludm9jYXRpb25zLmFwcGVuZChpZClcbiAgICAgICAgcmV0dXJuIHRyeSBmZXRjaFNvbWV0aGluZ1dpdGhJRFJlc3VsdFRvQmVSZXR1cm5lZC5nZXQoKVxuICAgIH1cbiAgICBcbiAgIFwvXC8gTUFSSzogLSBmZXRjaEFycmF5T2ZTb21ldGhpbmdcblxuICAgIHB1YmxpYyB2YXIgZmV0Y2hBcnJheU9mU29tZXRoaW5nUmVzdWx0VG9CZVJldHVybmVkOiBSZXN1bHQ8W1NvbWV0aGluZ10sIEVycm9yPiA9IC5zdWNjZXNzKC5pbml0KCkpXG4gICAgcHVibGljIHZhciBmZXRjaEFycmF5T2ZTb21ldGhpbmdDYWxsc0NvdW50ID0gMFxuICAgIHB1YmxpYyB2YXIgZmV0Y2hBcnJheU9mU29tZXRoaW5nQ2FsbGVkOiBCb29sIHtcbiAgICAgICAgZmV0Y2hBcnJheU9mU29tZXRoaW5nQ2FsbHNDb3VudCA+IDBcbiAgICB9XG5cbiAgICBwdWJsaWMgZnVuYyBmZXRjaEFycmF5T2ZTb21ldGhpbmcoKSB0aHJvd3MgLT4gW1NvbWV0aGluZ10ge1xuICAgICAgICBmZXRjaEFycmF5T2ZTb21ldGhpbmdDYWxsc0NvdW50ICs9IDFcbiAgICAgICAgcmV0dXJuIHRyeSBmZXRjaEFycmF5T2ZTb21ldGhpbmdSZXN1bHRUb0JlUmV0dXJuZWQuZ2V0KClcbiAgICB9XG4gICAgXG4gICBcL1wvIE1BUks6IC0gZmV0Y2hBcnJheU9mU29tZUVudW1cblxuICAgIHB1YmxpYyB2YXIgZmV0Y2hBcnJheU9mU29tZUVudW1SZXN1bHRUb0JlUmV0dXJuZWQ6IFJlc3VsdDxbU29tZUVudW1dLCBFcnJvcj4gPSAuc3VjY2VzcyguaW5pdCgpKVxuICAgIHB1YmxpYyB2YXIgZmV0Y2hBcnJheU9mU29tZUVudW1DYWxsc0NvdW50ID0gMFxuICAgIHB1YmxpYyB2YXIgZmV0Y2hBcnJheU9mU29tZUVudW1DYWxsZWQ6IEJvb2wge1xuICAgICAgICBmZXRjaEFycmF5T2ZTb21lRW51bUNhbGxzQ291bnQgPiAwXG4gICAgfVxuXG4gICAgcHVibGljIGZ1bmMgZmV0Y2hBcnJheU9mU29tZUVudW0oKSB0aHJvd3MgLT4gW1NvbWVFbnVtXSB7XG4gICAgICAgIGZldGNoQXJyYXlPZlNvbWVFbnVtQ2FsbHNDb3VudCArPSAxXG4gICAgICAgIHJldHVybiB0cnkgZmV0Y2hBcnJheU9mU29tZUVudW1SZXN1bHRUb0JlUmV0dXJuZWQuZ2V0KClcbiAgICB9XG4gICAgXG4gICBcL1wvIE1BUks6IC0gcG9zdFNvbWV0aGluZ1xuXG4gICAgcHVibGljIHZhciBwb3N0U29tZXRoaW5nU3RyaW5nUGFyYW1JbnRQYXJhbVNvbWV0aGluZ1BhcmFtUmVzdWx0VG9CZVJldHVybmVkOiBSZXN1bHQ8Vm9pZCwgRXJyb3I+ID0gLnN1Y2Nlc3MoLmZpeHR1cmUoKSlcbiAgICBwdWJsaWMgdmFyIHBvc3RTb21ldGhpbmdTdHJpbmdQYXJhbUludFBhcmFtU29tZXRoaW5nUGFyYW1DYWxsc0NvdW50ID0gMFxuICAgIHB1YmxpYyB2YXIgcG9zdFNvbWV0aGluZ1N0cmluZ1BhcmFtSW50UGFyYW1Tb21ldGhpbmdQYXJhbUNhbGxlZDogQm9vbCB7XG4gICAgICAgIHBvc3RTb21ldGhpbmdTdHJpbmdQYXJhbUludFBhcmFtU29tZXRoaW5nUGFyYW1DYWxsc0NvdW50ID4gMFxuICAgIH1cbiAgICBwdWJsaWMgdmFyIHBvc3RTb21ldGhpbmdTdHJpbmdQYXJhbUludFBhcmFtU29tZXRoaW5nUGFyYW1SZWNlaXZlZEFyZ3VtZW50czogKHN0cmluZ1BhcmFtOiBTdHJpbmcsIGludFBhcmFtOiBJbnQsIHNvbWV0aGluZ1BhcmFtOiBTb21ldGhpbmcpP1xuICAgIHB1YmxpYyB2YXIgcG9zdFNvbWV0aGluZ1N0cmluZ1BhcmFtSW50UGFyYW1Tb21ldGhpbmdQYXJhbVJlY2VpdmVkSW52b2NhdGlvbnM6IFsoc3RyaW5nUGFyYW06IFN0cmluZywgaW50UGFyYW06IEludCwgc29tZXRoaW5nUGFyYW06IFNvbWV0aGluZyldID0gW11cblxuICAgIHB1YmxpYyBmdW5jIHBvc3RTb21ldGhpbmcoc3RyaW5nUGFyYW06IFN0cmluZywgaW50UGFyYW06IEludCwgc29tZXRoaW5nUGFyYW06IFNvbWV0aGluZykgdGhyb3dzIHtcbiAgICAgICAgcG9zdFNvbWV0aGluZ1N0cmluZ1BhcmFtSW50UGFyYW1Tb21ldGhpbmdQYXJhbUNhbGxzQ291bnQgKz0gMVxuICAgICAgICBwb3N0U29tZXRoaW5nU3RyaW5nUGFyYW1JbnRQYXJhbVNvbWV0aGluZ1BhcmFtUmVjZWl2ZWRBcmd1bWVudHMgPSAoc3RyaW5nUGFyYW06IHN0cmluZ1BhcmFtLCBpbnRQYXJhbTogaW50UGFyYW0sIHNvbWV0aGluZ1BhcmFtOiBzb21ldGhpbmdQYXJhbSlcbiAgICAgICAgcG9zdFNvbWV0aGluZ1N0cmluZ1BhcmFtSW50UGFyYW1Tb21ldGhpbmdQYXJhbVJlY2VpdmVkSW52b2NhdGlvbnMuYXBwZW5kKChzdHJpbmdQYXJhbTogc3RyaW5nUGFyYW0sIGludFBhcmFtOiBpbnRQYXJhbSwgc29tZXRoaW5nUGFyYW06IHNvbWV0aGluZ1BhcmFtKSlcbiAgICB9XG59XG4jZW5kaWYiLCJpc0xvY2tlZCI6ZmFsc2UsImF1dGhvciI6IkVkdWFyZG8gQm9jYXRvIiwicmVnZW5lcmF0aW9uQ291bnRlciI6MCwiZmF2b3JpdGUiOnRydWUsImluc2VydGlvbk1vZGUiOiJlbmRPZkZpbGUiLCJraW5kIjoic3RlbmNpbCIsInNhbXBsZUNvZGUiOiJlbnVtIFNvbWVFbnVtIHtcbiAgICBjYXNlIGZpcnN0Q2FzZVxuICAgIGNhc2Ugc2Vjb25kQ2FzZVxufVxuXG5wcm90b2NvbCBTb21ldGhpbmdSZXBvc2l0b3J5SW50ZXJmYWNlIHtcbiAgICBpbml0KGlucHV0OiBTdHJpbmcpXG4gICAgZnVuYyBmZXRjaFNvbWV0aGluZ1dpdGhJRChfIGlkOiBTdHJpbmcpIGFzeW5jIHRocm93cyAtPiBTb21ldGhpbmdcbiAgICBmdW5jIGZldGNoQXJyYXlPZlNvbWV0aGluZygpIGFzeW5jIHRocm93cyAtPiBbU29tZXRoaW5nXVxuICAgIGZ1bmMgZmV0Y2hBcnJheU9mU29tZUVudW0oKSBhc3luYyB0aHJvd3MgLT4gW1NvbWVFbnVtXVxuICAgIGZ1bmMgcG9zdFNvbWV0aGluZyhzdHJpbmdQYXJhbTogU3RyaW5nLCBpbnRQYXJhbTogSW50LCBzb21ldGhpbmdQYXJhbTogU29tZXRoaW5nKSBhc3luYyB0aHJvd3Ncbn0ifQ=="}