{"version":3,"instance":"eyJpZCI6IkEyMTgyNkUxLTU4MzktNDg0Ny04NTRGLTVEQTI1QjY1RDBDMSIsImRlc2NyaXB0aW9uIjoiR2VuZXJhdGVzIGBUZXN0IERvdWJsZXNgIHRoYXQgc2VydmUgYXMgYFNweWAgYW5kIGBTdHViYCBiYXNlZCBvbiBhIGRlcGVuZGVuY3kgcHJvdG9jb2wsIG1vc3RseSBhcHBsaWNhYmxlIGZvciBkYXRhc291cmNlcyBsaWtlIHNlcnZpY2VzIGFuZCByZXBvc2l0b3JpZXMuXG5OT1RFOiBpdCBhc3N1bWVzIHRoYXQgYWxsIG1vZGVscyByZXR1cm5lZCBoYXZlIGEgYGZpeHR1cmVgIG1ldGhvZCBwcmV2aW91c2x5IGRlZmluZWQuXG4qQmFzZWQgb24gYFByb3RvY29sIE1vY2tgIHRlbXBsYXRlIGZyb20gYMWBdWthc3ogS3VjemJvcnNraWAqIiwiY29udGVudCI6InslIG1hY3JvIGdldENsZWFuVHlwZU5hbWUgdHlwZU5hbWUgJX1cbiAgICB7JSBpZiB0eXBlTmFtZXxjb250YWluczogXCJJbnRlcmZhY2VcIiAlfVxuICAgICAgICB7eyB0eXBlTmFtZXxyZXBsYWNlOiBcIkludGVyZmFjZVwiLCBcIlwifX1cbiAgICB7JSBlbGlmIHR5cGVOYW1lfGNvbnRhaW5zOiBcIlByb3RvY29sXCIgJX1cbiAgICAgICAge3sgdHlwZU5hbWV8cmVwbGFjZTogXCJQcm90b2NvbFwiLCBcIlwifX1cbiAgICB7JSBlbmRpZiAlfVxueyUgZW5kbWFjcm8gJX1cblxueyUgbWFjcm8gc3dpZnRpZnlNZXRob2ROYW1lIG5hbWUgJX17JSB0eXBlZCBuYW1lIGFzIFN0cmluZyAlfXt7IG5hbWUgfCByZXBsYWNlOlwiKFwiLFwiX1wiIHwgcmVwbGFjZTpcIilcIixcIlwiIHwgcmVwbGFjZTpcIjpcIixcIl9cIiB8IHJlcGxhY2U6XCJgXCIsXCJcIiB8IHNuYWtlVG9DYW1lbENhc2UgfCBsb3dlckZpcnN0V29yZCB9fXslIGVuZG1hY3JvICV9XG5cbnslIG1hY3JvIHJlc29sdmVSZXR1cm5WYWx1ZUZvclJldHVyblR5cGUgbWV0aG9kICV9XG4gICAgeyUgc2V0IGZvdW5kYXRpb25UeXBlc1dpdGhOb0ZpeHR1cmUgJX0gXG4gICAgW1xuICAgICAgICBcIkRhdGVcIiwgXCJEYXRhXCIsIFwiVVJMXCJcbiAgICBdXG4gICAgeyUgZW5kc2V0ICV9XG4gICAgeyUgaWYgbWV0aG9kLnJldHVyblR5cGUua2luZCA9PSBcImVudW1cIiAlfVxuICAgICAgICAue3sgbWV0aG9kLnJldHVyblR5cGUuY2FzZXMuZmlyc3QubmFtZSB9fVxuICAgIHslIGVsaWYgZm91bmRhdGlvblR5cGVzV2l0aE5vRml4dHVyZXxjb250YWluczogbWV0aG9kLnJldHVyblR5cGVOYW1lICV9XG4gICAgICAgIC5pbml0KClcbiAgICB7JSBlbHNlICV9XG4gICAgICAgIHslIGlmIG1ldGhvZC5yZXR1cm5UeXBlTmFtZXxjb250YWluczpcIltcIiBhbmQgbWV0aG9kLnJldHVyblR5cGVOYW1lfGNvbnRhaW5zOlwiXVwiICV9XG4gICAgICAgICAgICAuaW5pdCgpXG4gICAgICAgIHslIGVsc2UgJX1cbiAgICAgICAgICAgIC5maXh0dXJlKClcbiAgICAgICAgeyUgZW5kaWYgJX1cbiAgICB7JSBlbmRpZiAlfVxueyUgZW5kbWFjcm8gJX1cblxueyUgbWFjcm8gbWV0aG9kUmVzdWx0RGVjbGFyYXRpb24gbWV0aG9kICV9XG57JSB0eXBlZCBtZXRob2QgYXMgTWV0aG9kICV9XG57JSBzZXQgcmV0dXJuVmFsdWUgJX0geyUgY2FsbCByZXNvbHZlUmV0dXJuVmFsdWVGb3JSZXR1cm5UeXBlIG1ldGhvZCAlfSB7JSBlbmRzZXQgJX1cbiAgICB7JSBpZiBtZXRob2QucmV0dXJuVHlwZU5hbWUubmFtZSAhPSBcIlZvaWRcIiAlfVxuICAgIHslIHNldCByZXR1cm5WYWx1ZSAlfSB7JSBjYWxsIHJlc29sdmVSZXR1cm5WYWx1ZUZvclJldHVyblR5cGUgbWV0aG9kICV9IHslIGVuZHNldCAlfVxuICAgIHt7IHR5cGUuYWNjZXNzTGV2ZWwgfX0gdmFyIHt7IG1ldGhvZC5zaG9ydE5hbWUgfX1SZXN1bHRUb0JlUmV0dXJuZWQ6IFJlc3VsdDx7eyBtZXRob2QucmV0dXJuVHlwZU5hbWUubmFtZSB9fSwgRXJyb3I+ID0gLnN1Y2Nlc3Moe3sgcmV0dXJuVmFsdWV8cmVtb3ZlTmV3bGluZXMgfX0pXG4gICAgeyUgZWxzZSAlfVxuICAgIHt7IHR5cGUuYWNjZXNzTGV2ZWwgfX0gdmFyIHt7IG1ldGhvZC5zaG9ydE5hbWUgfX1SZXN1bHRUb0JlUmV0dXJuZWQ6IFJlc3VsdDxWb2lkLCBFcnJvcj4gPSAuc3VjY2VzcygoKSlcbiAgICB7JSBlbmRpZiAlfVxueyUgZW5kbWFjcm8gJX1cblxueyUgbWFjcm8gbWV0aG9kUmVjZWl2ZWRQYXJhbWV0ZXJzIG1ldGhvZCAlfVxueyUgdHlwZWQgbWV0aG9kIGFzIE1ldGhvZCAlfVxuICAgIHslaWYgbWV0aG9kLnBhcmFtZXRlcnMuY291bnQgPT0gMSAlfVxuICAgICAgICB7JSBjYWxsIHN3aWZ0aWZ5TWV0aG9kTmFtZSBtZXRob2Quc2VsZWN0b3JOYW1lICV9UmVjZWl2ZWR7JSBmb3IgcGFyYW0gaW4gbWV0aG9kLnBhcmFtZXRlcnMgJX17eyBwYXJhbS5uYW1lfHVwcGVyRmlyc3RMZXR0ZXIgfX0gPSB7eyBwYXJhbS5uYW1lIH19eyUgZW5kZm9yICV9XG4gICAgICAgIHslIGNhbGwgc3dpZnRpZnlNZXRob2ROYW1lIG1ldGhvZC5zZWxlY3Rvck5hbWUgJX1SZWNlaXZlZEludm9jYXRpb25zLmFwcGVuZCh7JSBmb3IgcGFyYW0gaW4gbWV0aG9kLnBhcmFtZXRlcnMgJX17eyBwYXJhbS5uYW1lIH19KXslIGVuZGZvciAlfVxuICAgIHslIGVsc2UgJX1cbiAgICB7JSBpZiBub3QgbWV0aG9kLnBhcmFtZXRlcnMuY291bnQgPT0gMCAlfVxuICAgICAgICB7JSBjYWxsIHN3aWZ0aWZ5TWV0aG9kTmFtZSBtZXRob2Quc2VsZWN0b3JOYW1lICV9UmVjZWl2ZWRBcmd1bWVudHMgPSAoeyUgZm9yIHBhcmFtIGluIG1ldGhvZC5wYXJhbWV0ZXJzICV9e3sgcGFyYW0ubmFtZSB9fToge3sgcGFyYW0ubmFtZSB9fXslIGlmIG5vdCBmb3Jsb29wLmxhc3QlfSwgeyUgZW5kaWYgJX17JSBlbmRmb3IgJX0pXG4gICAgICAgIHslIGNhbGwgc3dpZnRpZnlNZXRob2ROYW1lIG1ldGhvZC5zZWxlY3Rvck5hbWUgJX1SZWNlaXZlZEludm9jYXRpb25zLmFwcGVuZCgoeyUgZm9yIHBhcmFtIGluIG1ldGhvZC5wYXJhbWV0ZXJzICV9e3sgcGFyYW0ubmFtZSB9fToge3sgcGFyYW0ubmFtZSB9fXslIGlmIG5vdCBmb3Jsb29wLmxhc3QlfSwgeyUgZW5kaWYgJX17JSBlbmRmb3IgJX0pKVxuICAgIHslIGVuZGlmICV9XG4gICAgeyUgZW5kaWYgJX1cbnslIGVuZG1hY3JvICV9XG5cbnslIG1hY3JvIG1ldGhvZENsb3N1cmVOYW1lIG1ldGhvZCAlfXslIHR5cGVkIG1ldGhvZCBhcyBNZXRob2QgJX17JSBjYWxsIHN3aWZ0aWZ5TWV0aG9kTmFtZSBtZXRob2Quc2VsZWN0b3JOYW1lICV9Q2xvc3VyZXslIGVuZG1hY3JvICV9XG5cbnslIG1hY3JvIGNsb3N1cmVSZXR1cm5UeXBlTmFtZSBtZXRob2QgJX17JSB0eXBlZCBtZXRob2QgYXMgTWV0aG9kICV9eyUgaWYgbWV0aG9kLmlzT3B0aW9uYWxSZXR1cm5UeXBlICV9e3sgbWV0aG9kLnVud3JhcHBlZFJldHVyblR5cGVOYW1lIH19P3slIGVsc2UgJX17eyBtZXRob2QucmV0dXJuVHlwZU5hbWUgfX17JSBlbmRpZiAlfXslIGVuZG1hY3JvICV9XG5cbnslIG1hY3JvIG1ldGhvZENsb3N1cmVEZWNsYXJhdGlvbiBtZXRob2QgJX1cbnslIHR5cGVkIG1ldGhvZCBhcyBNZXRob2QgJX1cbnslIGlmIG1ldGhvZC5pc0luaXRpYWxpemVyICV9XG4gICAge3sgdHlwZS5hY2Nlc3NMZXZlbCB9fSB2YXIgeyUgY2FsbCBtZXRob2RDbG9zdXJlTmFtZSBtZXRob2QgJX06ICgoeyUgZm9yIHBhcmFtIGluIG1ldGhvZC5wYXJhbWV0ZXJzICV9e3sgcGFyYW0udHlwZU5hbWUgfX17JSBpZiBub3QgZm9ybG9vcC5sYXN0ICV9LCB7JSBlbmRpZiAlfXslIGVuZGZvciAlfSkgeyUgaWYgbWV0aG9kLnRocm93cyAlfXRocm93cyB7JSBlbmRpZiAlfS0+IHslIGlmIG1ldGhvZC5pc0luaXRpYWxpemVyICV9Vm9pZHslIGVsc2UgJX17JSBjYWxsIGNsb3N1cmVSZXR1cm5UeXBlTmFtZSBtZXRob2QgJX17JSBlbmRpZiAlfSk\/XG57JSBlbmRpZiAlfVxueyUgZW5kbWFjcm8gJX1cblxueyUgbWFjcm8gbWV0aG9kQ2xvc3VyZUNhbGxQYXJhbWV0ZXJzIG1ldGhvZCAlfXslIHR5cGVkIG1ldGhvZCBhcyBNZXRob2QgJX17JSBmb3IgcGFyYW0gaW4gbWV0aG9kLnBhcmFtZXRlcnMgJX17eyBwYXJhbS5uYW1lIH19eyUgaWYgbm90IGZvcmxvb3AubGFzdCAlfSwgeyUgZW5kaWYgJX17JSBlbmRmb3IgJX17JSBlbmRtYWNybyAlfVxuXG57JSBtYWNybyBtb2NrTWV0aG9kIG1ldGhvZCAlfVxuICAgIHslIHR5cGVkIG1ldGhvZCBhcyBNZXRob2QgJX1cbiAgICB7JSBuZXdsaW5lICV9ICAgXC9cLyBNQVJLOiAtIHt7IG1ldGhvZC5zaG9ydE5hbWUgfX1cblxuICAgIHslIGNhbGwgbWV0aG9kUmVzdWx0RGVjbGFyYXRpb24gbWV0aG9kICV9XG4gICAgeyUgaWYgbm90IG1ldGhvZC5pc0luaXRpYWxpemVyICV9XG4gICAge3sgdHlwZS5hY2Nlc3NMZXZlbCB9fSB2YXIgeyUgY2FsbCBzd2lmdGlmeU1ldGhvZE5hbWUgbWV0aG9kLnNlbGVjdG9yTmFtZSAlfUNhbGxzQ291bnQgPSAwXG4gICAge3sgdHlwZS5hY2Nlc3NMZXZlbCB9fSB2YXIgeyUgY2FsbCBzd2lmdGlmeU1ldGhvZE5hbWUgbWV0aG9kLnNlbGVjdG9yTmFtZSAlfUNhbGxlZDogQm9vbCB7XG4gICAgICAgIHslIGNhbGwgc3dpZnRpZnlNZXRob2ROYW1lIG1ldGhvZC5zZWxlY3Rvck5hbWUgJX1DYWxsc0NvdW50ID4gMFxuICAgIH1cbiAgICB7JSBlbmRpZiAlfVxuICAgIHslIGlmIG1ldGhvZC5wYXJhbWV0ZXJzLmNvdW50ID09IDEgJX1cbiAgICB7eyB0eXBlLmFjY2Vzc0xldmVsIH19IHZhciB7JSBjYWxsIHN3aWZ0aWZ5TWV0aG9kTmFtZSBtZXRob2Quc2VsZWN0b3JOYW1lICV9UmVjZWl2ZWR7JSBmb3IgcGFyYW0gaW4gbWV0aG9kLnBhcmFtZXRlcnMgJX17eyBwYXJhbS5uYW1lfHVwcGVyRmlyc3RMZXR0ZXIgfX06IHt7ICcoJyBpZiBwYXJhbS5pc0Nsb3N1cmUgfX17eyBwYXJhbS50eXBlTmFtZS51bndyYXBwZWRUeXBlTmFtZSB9fXt7ICcpJyBpZiBwYXJhbS5pc0Nsb3N1cmUgfX0\/eyUgZW5kZm9yICV9XG4gICAge3sgdHlwZS5hY2Nlc3NMZXZlbCB9fSB2YXIgeyUgY2FsbCBzd2lmdGlmeU1ldGhvZE5hbWUgbWV0aG9kLnNlbGVjdG9yTmFtZSAlfVJlY2VpdmVkSW52b2NhdGlvbnN7JSBmb3IgcGFyYW0gaW4gbWV0aG9kLnBhcmFtZXRlcnMgJX06IFt7eyAnKCcgaWYgcGFyYW0uaXNDbG9zdXJlIH19e3sgcGFyYW0udHlwZU5hbWUudW53cmFwcGVkVHlwZU5hbWUgfX17eyAnKScgaWYgcGFyYW0uaXNDbG9zdXJlIH19eyVpZiBwYXJhbS50eXBlTmFtZS5pc09wdGlvbmFsJX0\/eyVlbmRpZiV9XXslIGVuZGZvciAlfSA9IFtdXG4gICAgeyUgZWxpZiBub3QgbWV0aG9kLnBhcmFtZXRlcnMuY291bnQgPT0gMCAlfVxuICAgIHt7IHR5cGUuYWNjZXNzTGV2ZWwgfX0gdmFyIHslIGNhbGwgc3dpZnRpZnlNZXRob2ROYW1lIG1ldGhvZC5zZWxlY3Rvck5hbWUgJX1SZWNlaXZlZEFyZ3VtZW50czogKHslIGZvciBwYXJhbSBpbiBtZXRob2QucGFyYW1ldGVycyAlfXt7IHBhcmFtLm5hbWUgfX06IHt7IHBhcmFtLnVud3JhcHBlZFR5cGVOYW1lIGlmIHBhcmFtLnR5cGVBdHRyaWJ1dGVzLmVzY2FwaW5nIGVsc2UgcGFyYW0udHlwZU5hbWUgfX17eyAnLCAnIGlmIG5vdCBmb3Jsb29wLmxhc3QgfX17JSBlbmRmb3IgJX0pP1xuICAgIHt7IHR5cGUuYWNjZXNzTGV2ZWwgfX0gdmFyIHslIGNhbGwgc3dpZnRpZnlNZXRob2ROYW1lIG1ldGhvZC5zZWxlY3Rvck5hbWUgJX1SZWNlaXZlZEludm9jYXRpb25zOiBbKHslIGZvciBwYXJhbSBpbiBtZXRob2QucGFyYW1ldGVycyAlfXt7IHBhcmFtLm5hbWUgfX06IHt7IHBhcmFtLnVud3JhcHBlZFR5cGVOYW1lIGlmIHBhcmFtLnR5cGVBdHRyaWJ1dGVzLmVzY2FwaW5nIGVsc2UgcGFyYW0udHlwZU5hbWUgfX17eyAnLCAnIGlmIG5vdCBmb3Jsb29wLmxhc3QgfX17JSBlbmRmb3IgJX0pXSA9IFtdXG4gICAgeyUgZW5kaWYgJX1cbiAgICB7JSBjYWxsIG1ldGhvZENsb3N1cmVEZWNsYXJhdGlvbiBtZXRob2QgJX1cblxueyUgaWYgbWV0aG9kLmlzSW5pdGlhbGl6ZXIgJX1cbiAgICByZXF1aXJlZCB7eyBtZXRob2QubmFtZSB9fSB7XG4gICAgICAgIHslIGNhbGwgbWV0aG9kUmVjZWl2ZWRQYXJhbWV0ZXJzIG1ldGhvZCAlfVxuICAgICAgICB7JSBjYWxsIG1ldGhvZENsb3N1cmVOYW1lIG1ldGhvZCAlfT8oeyUgY2FsbCBtZXRob2RDbG9zdXJlQ2FsbFBhcmFtZXRlcnMgbWV0aG9kICV9KVxuICAgIH1cbnslIGVsc2UgJX1cbiAgICB7eyB0eXBlLmFjY2Vzc0xldmVsIH19IGZ1bmMge3sgbWV0aG9kLm5hbWUgfX17eyAnIHRocm93cycgaWYgbWV0aG9kLnRocm93cyB9fXslIGlmIG5vdCBtZXRob2QucmV0dXJuVHlwZU5hbWUuaXNWb2lkICV9IC0+IHt7IG1ldGhvZC5yZXR1cm5UeXBlTmFtZSB9fXslIGVuZGlmICV9IHtcbiAgICAgICAgeyUgY2FsbCBzd2lmdGlmeU1ldGhvZE5hbWUgbWV0aG9kLnNlbGVjdG9yTmFtZSAlfUNhbGxzQ291bnQgKz0gMVxuICAgICAgICB7JSBjYWxsIG1ldGhvZFJlY2VpdmVkUGFyYW1ldGVycyBtZXRob2QgJX1cbiAgICAgICAgeyUgaWYgbm90IG1ldGhvZC5yZXR1cm5UeXBlTmFtZS5pc1ZvaWQgJX1cbiAgICAgICAgcmV0dXJuIHRyeSB7eyBtZXRob2Quc2hvcnROYW1lIH19UmVzdWx0VG9CZVJldHVybmVkLmdldCgpXG4gICAgICAgIHslIGVuZGlmICV9XG4gICAgfVxueyUgZW5kaWYgJX1cbnslIGVuZG1hY3JvICV9XG5cbnslIG1hY3JvIG1vY2tlZFZhcmlhYmxlTmFtZSB2YXJpYWJsZSAlfXt7IHZhcmlhYmxlLm5hbWUgfX17JSBlbmRtYWNybyAlfVxueyUgbWFjcm8gdW5kZXJseWluZ01vY2tlZFZhcmlhYmxlTmFtZSB2YXJpYWJsZSAlfXVuZGVybHlpbmd7eyB2YXJpYWJsZS5uYW1lfHVwcGVyRmlyc3RMZXR0ZXIgfX17JSBlbmRtYWNybyAlfVxuXG57JSBtYWNybyBtb2NrT3B0aW9uYWxWYXJpYWJsZSB2YXJpYWJsZSAlfVxueyUgdHlwZWQgdmFyaWFibGUgYXMgVmFyaWFibGUgJX1cbiAgICB7eyB0eXBlLmFjY2Vzc0xldmVsIH19IHZhciB7JSBjYWxsIG1vY2tlZFZhcmlhYmxlTmFtZSB2YXJpYWJsZSAlfToge3sgdmFyaWFibGUudHlwZU5hbWUgfX1cbnslIGVuZG1hY3JvICV9XG5cbnslIG1hY3JvIG1vY2tOb25PcHRpb25hbEFycmF5T3JEaWN0aW9uYXJ5VmFyaWFibGUgdmFyaWFibGUgJX1cbnslIHR5cGVkIHZhcmlhYmxlIGFzIFZhcmlhYmxlICV9XG4gICAge3sgdHlwZS5hY2Nlc3NMZXZlbCB9fSB2YXIgeyUgY2FsbCBtb2NrZWRWYXJpYWJsZU5hbWUgdmFyaWFibGUgJX06IHt7IHZhcmlhYmxlLnR5cGVOYW1lIH19ID0geyUgaWYgdmFyaWFibGUuaXNBcnJheSAlfVtdeyUgZWxpZiB2YXJpYWJsZS5pc0RpY3Rpb25hcnkgJX1bOl17JSBlbmRpZiAlfVxueyUgZW5kbWFjcm8gJX1cblxueyUgbWFjcm8gbW9ja05vbk9wdGlvbmFsVmFyaWFibGUgdmFyaWFibGUgJX1cbiAgICB7JSB0eXBlZCB2YXJpYWJsZSBhcyBWYXJpYWJsZSAlfVxuICAgIHslIG5ld2xpbmUgJX0gICBcL1wvIE1BUks6IC0ge3sgdmFyaWFibGUubmFtZSB9fVxuXG4gICAge3sgdHlwZS5hY2Nlc3NMZXZlbCB9fSB2YXIgeyUgY2FsbCBtb2NrZWRWYXJpYWJsZU5hbWUgdmFyaWFibGUgJX06IHt7IHZhcmlhYmxlLnR5cGVOYW1lIH19IHtcbiAgICAgICAgZ2V0IHsgeyUgY2FsbCB1bmRlcmx5aW5nTW9ja2VkVmFyaWFibGVOYW1lIHZhcmlhYmxlICV9IH1cbiAgICAgICAgc2V0KHZhbHVlKSB7IHslIGNhbGwgdW5kZXJseWluZ01vY2tlZFZhcmlhYmxlTmFtZSB2YXJpYWJsZSAlfSA9IHZhbHVlIH1cbiAgICB9XG4gICAgcHJpdmF0ZSB2YXIgeyUgY2FsbCB1bmRlcmx5aW5nTW9ja2VkVmFyaWFibGVOYW1lIHZhcmlhYmxlICV9OiB7eyB2YXJpYWJsZS50eXBlTmFtZSB9fSFcbnslIGVuZG1hY3JvICV9XG5cbnslIGZvciB0eXBlIGluIHR5cGVzLnByb3RvY29scyAlfXsjIFVzZSB0eXBlcy5pbXBsZW1lbnRpbmcuQXN5bmNBdXRvU3B5aW5nU3R1YiBpbnN0ZWFkIG9mIHR5cGVzLnByb3RvY29scyBpZiBkZWNpZGVkIHRvIGhhdmUgdGhpcyBwcm90b2NvbCAjfVxueyUgc2V0IGNsZWFuVHlwZU5hbWUgJX0geyUgY2FsbCBnZXRDbGVhblR5cGVOYW1lIHR5cGUubmFtZSAlfSAgeyUgZW5kc2V0ICV9XG57JSBuZXdsaW5lICV9XC9cLyBNQVJLOiAtIHt7IHR5cGUubmFtZSB9fVNweWluZ1N0dWJcblxue3sgdHlwZS5hY2Nlc3NMZXZlbCB9fSBmaW5hbCBjbGFzcyAge3sgY2xlYW5UeXBlTmFtZXxyZW1vdmVOZXdsaW5lcyB9fVNweWluZ1N0dWI6IHt7IHR5cGUubmFtZSB9fSB7XG5cbiAgICB7eyB0eXBlLmFjY2Vzc0xldmVsIH19IGluaXQoKSB7fVxueyUgZm9yIHZhcmlhYmxlIGluIHR5cGUuYWxsVmFyaWFibGVzfCFkZWZpbmVkSW5FeHRlbnNpb24gJX1cbiAgICB7JSBpZiB2YXJpYWJsZS5pc09wdGlvbmFsICV9eyUgY2FsbCBtb2NrT3B0aW9uYWxWYXJpYWJsZSB2YXJpYWJsZSAlfXslIGVsaWYgdmFyaWFibGUuaXNBcnJheSBvciB2YXJpYWJsZS5pc0RpY3Rpb25hcnkgJX17JSBjYWxsIG1vY2tOb25PcHRpb25hbEFycmF5T3JEaWN0aW9uYXJ5VmFyaWFibGUgdmFyaWFibGUgJX17JSBlbHNlICV9eyUgY2FsbCBtb2NrTm9uT3B0aW9uYWxWYXJpYWJsZSB2YXJpYWJsZSAlfXslIGVuZGlmICV9XG57JSBlbmRmb3IgJX1cbnslIGZvciBtZXRob2QgaW4gdHlwZS5hbGxNZXRob2RzfCFkZWZpbmVkSW5FeHRlbnNpb24gJX1cbiAgICB7JSBjYWxsIG1vY2tNZXRob2QgbWV0aG9kICV9XG57JSBlbmRmb3IgJX1cbn1cbnslIGVuZGZvciAlfSIsInZlcnNpb24iOjMsImZhdm9yaXRlIjp0cnVlLCJhdXRob3IiOiJFZHVhcmRvIEJvY2F0byIsImdlbmVyYXRlZENvZGUiOiJcblwvXC8gTUFSSzogLSBTb21ldGhpbmdSZXBvc2l0b3J5SW50ZXJmYWNlU3B5aW5nU3R1YlxuXG5pbnRlcm5hbCBmaW5hbCBjbGFzcyAgU29tZXRoaW5nUmVwb3NpdG9yeVNweWluZ1N0dWI6IFNvbWV0aGluZ1JlcG9zaXRvcnlJbnRlcmZhY2Uge1xuXG4gICAgaW50ZXJuYWwgaW5pdCgpIHt9XG4gICAgXG4gICBcL1wvIE1BUks6IC0gaW5pdFxuXG4gICAgaW50ZXJuYWwgdmFyIGluaXRSZXN1bHRUb0JlUmV0dXJuZWQ6IFJlc3VsdDxTb21ldGhpbmdSZXBvc2l0b3J5SW50ZXJmYWNlLCBFcnJvcj4gPSAuc3VjY2VzcyguZml4dHVyZSgpKVxuICAgIGludGVybmFsIHZhciBpbml0SW5wdXRSZWNlaXZlZElucHV0OiBTdHJpbmc\/XG4gICAgaW50ZXJuYWwgdmFyIGluaXRJbnB1dFJlY2VpdmVkSW52b2NhdGlvbnM6IFtTdHJpbmddID0gW11cbiAgICBpbnRlcm5hbCB2YXIgaW5pdElucHV0Q2xvc3VyZTogKChTdHJpbmcpIC0+IFZvaWQpP1xuXG4gICAgcmVxdWlyZWQgaW5pdChpbnB1dDogU3RyaW5nKSB7XG4gICAgICAgIGluaXRJbnB1dFJlY2VpdmVkSW5wdXQgPSBpbnB1dFxuICAgICAgICBpbml0SW5wdXRSZWNlaXZlZEludm9jYXRpb25zLmFwcGVuZChpbnB1dClcbiAgICAgICAgaW5pdElucHV0Q2xvc3VyZT8oaW5wdXQpXG4gICAgfVxuICAgIFxuICAgXC9cLyBNQVJLOiAtIGZldGNoU29tZXRoaW5nV2l0aElEXG5cbiAgICBpbnRlcm5hbCB2YXIgZmV0Y2hTb21ldGhpbmdXaXRoSURSZXN1bHRUb0JlUmV0dXJuZWQ6IFJlc3VsdDxTb21ldGhpbmcsIEVycm9yPiA9IC5zdWNjZXNzKC5maXh0dXJlKCkpXG4gICAgaW50ZXJuYWwgdmFyIGZldGNoU29tZXRoaW5nV2l0aElEQ2FsbHNDb3VudCA9IDBcbiAgICBpbnRlcm5hbCB2YXIgZmV0Y2hTb21ldGhpbmdXaXRoSURDYWxsZWQ6IEJvb2wge1xuICAgICAgICBmZXRjaFNvbWV0aGluZ1dpdGhJRENhbGxzQ291bnQgPiAwXG4gICAgfVxuICAgIGludGVybmFsIHZhciBmZXRjaFNvbWV0aGluZ1dpdGhJRFJlY2VpdmVkSWQ6IFN0cmluZz9cbiAgICBpbnRlcm5hbCB2YXIgZmV0Y2hTb21ldGhpbmdXaXRoSURSZWNlaXZlZEludm9jYXRpb25zOiBbU3RyaW5nXSA9IFtdXG5cbiAgICBpbnRlcm5hbCBmdW5jIGZldGNoU29tZXRoaW5nV2l0aElEKF8gaWQ6IFN0cmluZykgdGhyb3dzIC0+IFNvbWV0aGluZyB7XG4gICAgICAgIGZldGNoU29tZXRoaW5nV2l0aElEQ2FsbHNDb3VudCArPSAxXG4gICAgICAgIGZldGNoU29tZXRoaW5nV2l0aElEUmVjZWl2ZWRJZCA9IGlkXG4gICAgICAgIGZldGNoU29tZXRoaW5nV2l0aElEUmVjZWl2ZWRJbnZvY2F0aW9ucy5hcHBlbmQoaWQpXG4gICAgICAgIHJldHVybiB0cnkgZmV0Y2hTb21ldGhpbmdXaXRoSURSZXN1bHRUb0JlUmV0dXJuZWQuZ2V0KClcbiAgICB9XG4gICAgXG4gICBcL1wvIE1BUks6IC0gZmV0Y2hBcnJheU9mU29tZXRoaW5nXG5cbiAgICBpbnRlcm5hbCB2YXIgZmV0Y2hBcnJheU9mU29tZXRoaW5nUmVzdWx0VG9CZVJldHVybmVkOiBSZXN1bHQ8W1NvbWV0aGluZ10sIEVycm9yPiA9IC5zdWNjZXNzKC5pbml0KCkpXG4gICAgaW50ZXJuYWwgdmFyIGZldGNoQXJyYXlPZlNvbWV0aGluZ0NhbGxzQ291bnQgPSAwXG4gICAgaW50ZXJuYWwgdmFyIGZldGNoQXJyYXlPZlNvbWV0aGluZ0NhbGxlZDogQm9vbCB7XG4gICAgICAgIGZldGNoQXJyYXlPZlNvbWV0aGluZ0NhbGxzQ291bnQgPiAwXG4gICAgfVxuXG4gICAgaW50ZXJuYWwgZnVuYyBmZXRjaEFycmF5T2ZTb21ldGhpbmcoKSB0aHJvd3MgLT4gW1NvbWV0aGluZ10ge1xuICAgICAgICBmZXRjaEFycmF5T2ZTb21ldGhpbmdDYWxsc0NvdW50ICs9IDFcbiAgICAgICAgcmV0dXJuIHRyeSBmZXRjaEFycmF5T2ZTb21ldGhpbmdSZXN1bHRUb0JlUmV0dXJuZWQuZ2V0KClcbiAgICB9XG4gICAgXG4gICBcL1wvIE1BUks6IC0gZmV0Y2hBcnJheU9mU29tZUVudW1cblxuICAgIGludGVybmFsIHZhciBmZXRjaEFycmF5T2ZTb21lRW51bVJlc3VsdFRvQmVSZXR1cm5lZDogUmVzdWx0PFtTb21lRW51bV0sIEVycm9yPiA9IC5zdWNjZXNzKC5pbml0KCkpXG4gICAgaW50ZXJuYWwgdmFyIGZldGNoQXJyYXlPZlNvbWVFbnVtQ2FsbHNDb3VudCA9IDBcbiAgICBpbnRlcm5hbCB2YXIgZmV0Y2hBcnJheU9mU29tZUVudW1DYWxsZWQ6IEJvb2wge1xuICAgICAgICBmZXRjaEFycmF5T2ZTb21lRW51bUNhbGxzQ291bnQgPiAwXG4gICAgfVxuXG4gICAgaW50ZXJuYWwgZnVuYyBmZXRjaEFycmF5T2ZTb21lRW51bSgpIHRocm93cyAtPiBbU29tZUVudW1dIHtcbiAgICAgICAgZmV0Y2hBcnJheU9mU29tZUVudW1DYWxsc0NvdW50ICs9IDFcbiAgICAgICAgcmV0dXJuIHRyeSBmZXRjaEFycmF5T2ZTb21lRW51bVJlc3VsdFRvQmVSZXR1cm5lZC5nZXQoKVxuICAgIH1cbiAgICBcbiAgIFwvXC8gTUFSSzogLSBwb3N0U29tZXRoaW5nXG5cbiAgICBpbnRlcm5hbCB2YXIgcG9zdFNvbWV0aGluZ1Jlc3VsdFRvQmVSZXR1cm5lZDogUmVzdWx0PFZvaWQsIEVycm9yPiA9IC5zdWNjZXNzKCgpKVxuICAgIGludGVybmFsIHZhciBwb3N0U29tZXRoaW5nU3RyaW5nUGFyYW1JbnRQYXJhbVNvbWV0aGluZ1BhcmFtQ2FsbHNDb3VudCA9IDBcbiAgICBpbnRlcm5hbCB2YXIgcG9zdFNvbWV0aGluZ1N0cmluZ1BhcmFtSW50UGFyYW1Tb21ldGhpbmdQYXJhbUNhbGxlZDogQm9vbCB7XG4gICAgICAgIHBvc3RTb21ldGhpbmdTdHJpbmdQYXJhbUludFBhcmFtU29tZXRoaW5nUGFyYW1DYWxsc0NvdW50ID4gMFxuICAgIH1cbiAgICBpbnRlcm5hbCB2YXIgcG9zdFNvbWV0aGluZ1N0cmluZ1BhcmFtSW50UGFyYW1Tb21ldGhpbmdQYXJhbVJlY2VpdmVkQXJndW1lbnRzOiAoc3RyaW5nUGFyYW06IFN0cmluZywgaW50UGFyYW06IEludCwgc29tZXRoaW5nUGFyYW06IFNvbWV0aGluZyk\/XG4gICAgaW50ZXJuYWwgdmFyIHBvc3RTb21ldGhpbmdTdHJpbmdQYXJhbUludFBhcmFtU29tZXRoaW5nUGFyYW1SZWNlaXZlZEludm9jYXRpb25zOiBbKHN0cmluZ1BhcmFtOiBTdHJpbmcsIGludFBhcmFtOiBJbnQsIHNvbWV0aGluZ1BhcmFtOiBTb21ldGhpbmcpXSA9IFtdXG5cbiAgICBpbnRlcm5hbCBmdW5jIHBvc3RTb21ldGhpbmcoc3RyaW5nUGFyYW06IFN0cmluZywgaW50UGFyYW06IEludCwgc29tZXRoaW5nUGFyYW06IFNvbWV0aGluZykgdGhyb3dzIHtcbiAgICAgICAgcG9zdFNvbWV0aGluZ1N0cmluZ1BhcmFtSW50UGFyYW1Tb21ldGhpbmdQYXJhbUNhbGxzQ291bnQgKz0gMVxuICAgICAgICBwb3N0U29tZXRoaW5nU3RyaW5nUGFyYW1JbnRQYXJhbVNvbWV0aGluZ1BhcmFtUmVjZWl2ZWRBcmd1bWVudHMgPSAoc3RyaW5nUGFyYW06IHN0cmluZ1BhcmFtLCBpbnRQYXJhbTogaW50UGFyYW0sIHNvbWV0aGluZ1BhcmFtOiBzb21ldGhpbmdQYXJhbSlcbiAgICAgICAgcG9zdFNvbWV0aGluZ1N0cmluZ1BhcmFtSW50UGFyYW1Tb21ldGhpbmdQYXJhbVJlY2VpdmVkSW52b2NhdGlvbnMuYXBwZW5kKChzdHJpbmdQYXJhbTogc3RyaW5nUGFyYW0sIGludFBhcmFtOiBpbnRQYXJhbSwgc29tZXRoaW5nUGFyYW06IHNvbWV0aGluZ1BhcmFtKSlcbiAgICB9XG59IiwidXJsIjoiIiwicmVnZW5lcmF0aW9uQ291bnRlciI6NywiZmlsZVVSTCI6ImZpbGU6XC9cL1wvVXNlcnNcL2JvY2F0ZWR1XC9hZGlkYXNcL2RldmVsb3BtZW50XC9Tb3VyY2VyeVJlc291cmNlc1wvQXN5bmNBdXRvU3B5aW5nU3R1YlwvQXN5bmNBdXRvU3B5aW5nU3R1Yi5zb3VyY2VyeXRlbXBsYXRlIiwicnVuQ29uZmlndXJhdGlvbiI6InNlbGVjdGlvbiIsInNhbXBsZUNvZGUiOiJlbnVtIFNvbWVFbnVtIHtcbiAgICBjYXNlIGZpcnN0Q2FzZVxuICAgIGNhc2Ugc2Vjb25kQ2FzZVxufVxuXG5wcm90b2NvbCBTb21ldGhpbmdSZXBvc2l0b3J5SW50ZXJmYWNlIHtcbiAgICBpbml0KGlucHV0OiBTdHJpbmcpXG4gICAgZnVuYyBmZXRjaFNvbWV0aGluZ1dpdGhJRChfIGlkOiBTdHJpbmcpIGFzeW5jIHRocm93cyAtPiBTb21ldGhpbmdcbiAgICBmdW5jIGZldGNoQXJyYXlPZlNvbWV0aGluZygpIGFzeW5jIHRocm93cyAtPiBbU29tZXRoaW5nXVxuICAgIGZ1bmMgZmV0Y2hBcnJheU9mU29tZUVudW0oKSBhc3luYyB0aHJvd3MgLT4gW1NvbWVFbnVtXVxuICAgIGZ1bmMgcG9zdFNvbWV0aGluZyhzdHJpbmdQYXJhbTogU3RyaW5nLCBpbnRQYXJhbTogSW50LCBzb21ldGhpbmdQYXJhbTogU29tZXRoaW5nKSBhc3luYyB0aHJvd3Ncbn0iLCJpc0xvY2tlZCI6ZmFsc2UsImtpbmQiOiJzdGVuY2lsIiwidHJpbVdoaXRlc3BhY2VzIjp0cnVlLCJuYW1lIjoiQXN5bmNBdXRvU3B5aW5nU3R1YiIsImluc2VydGlvbk1vZGUiOiJlbmRPZkZpbGUifQ=="}