{"version":3,"instance":"eyJpZCI6IjQ5RTFFODdELUFENDAtNDE3Ny1BOEFGLUE3NDBDNTMxNkE5MyIsImRlc2NyaXB0aW9uIjoiQ3JlYXRlcyBhIGBTdHViYCBiYXNlZCBvbiBhIGRlcGVuZGVuY3kgcHJvdG9jb2wsIG1vc3RseSBhcHBsaWNhYmxlIGZvciBkYXRhc291cmNlcyBsaWtlIHNlcnZpY2VzIGFuZCByZXBvc2l0b3JpZXMuXG5OT1RFOiBpdCBhc3N1bWVzIHRoYXQgYWxsIG1vZGVscyByZXR1cm5lZCBoYXZlIGEgYGZpeHR1cmVgIG1ldGhvZCBwcmV2aW91c2x5IGRlZmluZWQuIiwiY29udGVudCI6InslIG1hY3JvIGdldENsZWFuVHlwZU5hbWUgdHlwZU5hbWUgJX1cbiAgICB7JSBpZiB0eXBlTmFtZXxjb250YWluczogXCJJbnRlcmZhY2VcIiAlfVxuICAgICAgICB7eyB0eXBlTmFtZXxyZXBsYWNlOiBcIkludGVyZmFjZVwiLCBcIlwifX1cbiAgICB7JSBlbGlmIHR5cGVOYW1lfGNvbnRhaW5zOiBcIlByb3RvY29sXCIgJX1cbiAgICAgICAge3sgdHlwZU5hbWV8cmVwbGFjZTogXCJQcm90b2NvbFwiLCBcIlwifX1cbiAgICB7JSBlbmRpZiAlfVxueyUgZW5kbWFjcm8gJX1cblxueyUgbWFjcm8gcmVzb2x2ZVJldHVyblZhbHVlRm9yUmV0dXJuVHlwZSBtZXRob2QgJX1cbnslIHR5cGVkIG1ldGhvZCBhcyBNZXRob2QgJX1cbiAgICB7JSBzZXQgZm91bmRhdGlvblR5cGVzV2l0aE5vRml4dHVyZSAlfSBcbiAgICBbXG4gICAgICAgIFwiRGF0ZVwiLCBcIkRhdGFcIlxuICAgIF1cbiAgICB7JSBlbmRzZXQgJX1cbiAgICB7JSBpZiBtZXRob2QucmV0dXJuVHlwZS5raW5kID09IFwiZW51bVwiICV9XG4gICAgICAgIC57eyBtZXRob2QucmV0dXJuVHlwZS5jYXNlcy5maXJzdC5uYW1lIH19XG4gICAgeyUgZWxpZiBmb3VuZGF0aW9uVHlwZXNXaXRoTm9GaXh0dXJlfGNvbnRhaW5zOiBtZXRob2QucmV0dXJuVHlwZU5hbWUgJX1cbiAgICAgICAgLmluaXQoKVxuICAgIHslIGVsc2UgJX1cbiAgICAgICAgeyUgaWYgbWV0aG9kLnJldHVyblR5cGVOYW1lfGNvbnRhaW5zOlwiW1wiIGFuZCBtZXRob2QucmV0dXJuVHlwZU5hbWV8Y29udGFpbnM6XCJdXCIgJX1cbiAgICAgICAgICAgIC5pbml0KClcbiAgICAgICAgeyUgZWxpZiBtZXRob2QucmV0dXJuVHlwZU5hbWV8Y29udGFpbnM6XCJVUkxcIiAlfVxuICAgICAgICAgICAgLmluaXQoc3RyaW5nOiBcInd3dy50ZXN0LmNvbVwiKS51bnNhZmVseVVud3JhcHBlZFxuICAgICAgICB7JSBlbHNlICV9XG4gICAgICAgICAgICAuZml4dHVyZSgpXG4gICAgICAgIHslIGVuZGlmICV9XG4gICAgeyUgZW5kaWYgJX1cbnslIGVuZG1hY3JvICV9XG5cbnslIGZvciB0eXBlIGluIHR5cGVzLnByb3RvY29scyAlfXsjIFVzZSB0eXBlcy5pbXBsZW1lbnRpbmcuQXN5bmNBdXRvU3R1YiBpbnN0ZWFkIG9mIHR5cGVzLnByb3RvY29scyBpZiBkZWNpZGVkIHRvIGhhdmUgdGhpcyBwcm90b2NvbCAjfVxueyUgbmV3bGluZSAlfVwvXC8gTUFSSzogLSB7eyB0eXBlLm5hbWUgfX1TdHViXG5cbnslIHNldCBjbGVhblR5cGVOYW1lICV9IHslIGNhbGwgZ2V0Q2xlYW5UeXBlTmFtZSB0eXBlLm5hbWUgJX0gIHslIGVuZHNldCAlfVxue3sgdHlwZS5hY2Nlc3NMZXZlbCB9fSBmaW5hbCBjbGFzcyB7eyBjbGVhblR5cGVOYW1lfHJlbW92ZU5ld2xpbmVzIH19U3R1Yjoge3sgdHlwZS5uYW1lIH19IHtcbiAgICB7eyB0eXBlLmFjY2Vzc0xldmVsIH19IGluaXQoKSB7fVxuICAgIHslIGZvciBtZXRob2QgaW4gdHlwZS5hbGxNZXRob2RzICV9XG4gICAgeyUgaWYgbWV0aG9kLmlzSW5pdGlhbGl6ZXIgYW5kIG1ldGhvZC50aHJvd3MgJX1cblxuICAgIFwvXC8gTUFSSzogLSB7eyBtZXRob2Quc2hvcnROYW1lIH19XG5cbiAgICB7eyB0eXBlLmFjY2Vzc0xldmVsIH19IHZhciB7eyBtZXRob2Quc2hvcnROYW1lIH19UmVzdWx0VG9CZVJldHVybmVkOiBSZXN1bHQ8Vm9pZCwgRXJyb3I+ID0gLnN1Y2Nlc3MoKCkpXG4gICAge3sgdHlwZS5hY2Nlc3NMZXZlbCB9fSBmdW5jIHt7IG1ldGhvZC5uYW1lIH19IHtcbiAgICAgICAgdHJ5IHt7IG1ldGhvZC5zaG9ydE5hbWUgfX1SZXN1bHRUb0JlUmV0dXJuZWQuZ2V0KClcbiAgICB9XG4gICAgeyUgZWxpZiBub3QgbWV0aG9kLmlzSW5pdGlhbGl6ZXIgJX1cblxuICAgIFwvXC8gTUFSSzogLSB7eyBtZXRob2Quc2hvcnROYW1lIH19XG5cbiAgICB7JSBpZiBtZXRob2QucmV0dXJuVHlwZU5hbWUubmFtZSAhPSBcIlZvaWRcIiBhbmQgbWV0aG9kLnRocm93cyAlfVxuICAgIHslIHNldCByZXR1cm5WYWx1ZSAlfSB7JSBjYWxsIHJlc29sdmVSZXR1cm5WYWx1ZUZvclJldHVyblR5cGUgbWV0aG9kICV9IHslIGVuZHNldCAlfVxuICAgIHt7IHR5cGUuYWNjZXNzTGV2ZWwgfX0gdmFyIHt7IG1ldGhvZC5zaG9ydE5hbWUgfX1SZXN1bHRUb0JlUmV0dXJuZWQ6IFJlc3VsdDx7eyBtZXRob2QucmV0dXJuVHlwZU5hbWUubmFtZSB9fSwgRXJyb3I+ID0gLnN1Y2Nlc3Moe3sgcmV0dXJuVmFsdWV8cmVtb3ZlTmV3bGluZXMgfX0pXG4gICAgeyUgZWxpZiBtZXRob2QucmV0dXJuVHlwZU5hbWUubmFtZSA9PSBcIlZvaWRcIiBhbmQgbWV0aG9kLnRocm93cyAlfVxuICAgIHt7IHR5cGUuYWNjZXNzTGV2ZWwgfX0gdmFyIHt7IG1ldGhvZC5zaG9ydE5hbWUgfX1SZXN1bHRUb0JlUmV0dXJuZWQ6IFJlc3VsdDxWb2lkLCBFcnJvcj4gPSAuc3VjY2VzcygoKSlcbiAgICB7JSBlbmRpZiAlfVxuICAgIHslIGlmIG1ldGhvZC50aHJvd3MgYW5kIG5vdCBtZXRob2QuaXNJbml0aWFsaXplciAlfVxuICAgIHt7IHR5cGUuYWNjZXNzTGV2ZWwgfX0gZnVuYyB7eyBtZXRob2QubmFtZSB9fXt7ICcgYXN5bmMnIGlmIG1ldGhvZC5pc0FzeW5jIH19e3sgJyB0aHJvd3MnIGlmIG1ldGhvZC50aHJvd3MgfX0geyUgaWYgbWV0aG9kLnJldHVyblR5cGVOYW1lLm5hbWUgIT0gXCJWb2lkXCIgJX0tPiB7eyBtZXRob2QucmV0dXJuVHlwZU5hbWUubmFtZSB9fSB7JSBlbmRpZiAlfXtcbiAgICAgICAgdHJ5IHt7IG1ldGhvZC5zaG9ydE5hbWUgfX1SZXN1bHRUb0JlUmV0dXJuZWQuZ2V0KClcbiAgICB9XG4gICAgeyUgZWxzZSAlfVxuICAgIHt7IHR5cGUuYWNjZXNzTGV2ZWwgfX0gZnVuYyB7eyBtZXRob2QubmFtZSB9fXt7ICcgYXN5bmMnIGlmIG1ldGhvZC5pc0FzeW5jIH19IHt9XG4gICAgeyUgZW5kaWYgJX1cbiAgICB7JSBlbmRpZiAlfVxuICAgIHslIGVuZGZvciAlfVxufVxueyUgZW5kZm9yICV9IiwidmVyc2lvbiI6MywiZmF2b3JpdGUiOnRydWUsImF1dGhvciI6IkVkdWFyZG8gQm9jYXRvIiwiZ2VuZXJhdGVkQ29kZSI6IlxuXC9cLyBNQVJLOiAtIFNvbWV0aGluZ1JlcG9zaXRvcnlJbnRlcmZhY2VTdHViXG5cbmludGVybmFsIGZpbmFsIGNsYXNzIFNvbWV0aGluZ1JlcG9zaXRvcnlTdHViOiBTb21ldGhpbmdSZXBvc2l0b3J5SW50ZXJmYWNlIHtcbiAgICBpbnRlcm5hbCBpbml0KCkge31cblxuICAgIFwvXC8gTUFSSzogLSBpbml0XG5cbiAgICBpbnRlcm5hbCB2YXIgaW5pdFJlc3VsdFRvQmVSZXR1cm5lZDogUmVzdWx0PFZvaWQsIEVycm9yPiA9IC5zdWNjZXNzKCgpKVxuICAgIGludGVybmFsIGZ1bmMgaW5pdChzb21ldGhpbmc6IFN0cmluZykge1xuICAgICAgICB0cnkgaW5pdFJlc3VsdFRvQmVSZXR1cm5lZC5nZXQoKVxuICAgIH1cblxuICAgIFwvXC8gTUFSSzogLSBmZXRjaFNvbWV0aGluZ1xuXG4gICAgaW50ZXJuYWwgdmFyIGZldGNoU29tZXRoaW5nUmVzdWx0VG9CZVJldHVybmVkOiBSZXN1bHQ8U29tZXRoaW5nLCBFcnJvcj4gPSAuc3VjY2VzcyguZml4dHVyZSgpKVxuICAgIGludGVybmFsIGZ1bmMgZmV0Y2hTb21ldGhpbmcoXyBpZDogU3RyaW5nKSBhc3luYyB0aHJvd3MgLT4gU29tZXRoaW5nIHtcbiAgICAgICAgdHJ5IGZldGNoU29tZXRoaW5nUmVzdWx0VG9CZVJldHVybmVkLmdldCgpXG4gICAgfVxuXG4gICAgXC9cLyBNQVJLOiAtIGdldEVudW1cblxuICAgIGludGVybmFsIHZhciBnZXRFbnVtUmVzdWx0VG9CZVJldHVybmVkOiBSZXN1bHQ8TXlFbnVtLCBFcnJvcj4gPSAuc3VjY2VzcyguZmlyc3RDYXNlKVxuICAgIGludGVybmFsIGZ1bmMgZ2V0RW51bSgpIGFzeW5jIHRocm93cyAtPiBNeUVudW0ge1xuICAgICAgICB0cnkgZ2V0RW51bVJlc3VsdFRvQmVSZXR1cm5lZC5nZXQoKVxuICAgIH1cblxuICAgIFwvXC8gTUFSSzogLSBnZXREYXRlXG5cbiAgICBpbnRlcm5hbCB2YXIgZ2V0RGF0ZVJlc3VsdFRvQmVSZXR1cm5lZDogUmVzdWx0PERhdGUsIEVycm9yPiA9IC5zdWNjZXNzKC5pbml0KCkpXG4gICAgaW50ZXJuYWwgZnVuYyBnZXREYXRlKCkgYXN5bmMgdGhyb3dzIC0+IERhdGUge1xuICAgICAgICB0cnkgZ2V0RGF0ZVJlc3VsdFRvQmVSZXR1cm5lZC5nZXQoKVxuICAgIH1cblxuICAgIFwvXC8gTUFSSzogLSBnZXREYXRhXG5cbiAgICBpbnRlcm5hbCB2YXIgZ2V0RGF0YVJlc3VsdFRvQmVSZXR1cm5lZDogUmVzdWx0PERhdGEsIEVycm9yPiA9IC5zdWNjZXNzKC5pbml0KCkpXG4gICAgaW50ZXJuYWwgZnVuYyBnZXREYXRhKCkgYXN5bmMgdGhyb3dzIC0+IERhdGEge1xuICAgICAgICB0cnkgZ2V0RGF0YVJlc3VsdFRvQmVSZXR1cm5lZC5nZXQoKVxuICAgIH1cblxuICAgIFwvXC8gTUFSSzogLSBmZXRjaFVSTFxuXG4gICAgaW50ZXJuYWwgdmFyIGZldGNoVVJMUmVzdWx0VG9CZVJldHVybmVkOiBSZXN1bHQ8VVJMLCBFcnJvcj4gPSAuc3VjY2VzcyguaW5pdChzdHJpbmc6XCJ3d3cudGVzdC5jb21cIikudW5zYWZlbHlVbndyYXBwZWQpXG4gICAgaW50ZXJuYWwgZnVuYyBmZXRjaFVSTCgpIGFzeW5jIHRocm93cyAtPiBVUkwge1xuICAgICAgICB0cnkgZmV0Y2hVUkxSZXN1bHRUb0JlUmV0dXJuZWQuZ2V0KClcbiAgICB9XG5cbiAgICBcL1wvIE1BUks6IC0gZmV0Y2hBcnJheVxuXG4gICAgaW50ZXJuYWwgdmFyIGZldGNoQXJyYXlSZXN1bHRUb0JlUmV0dXJuZWQ6IFJlc3VsdDxbU3RyaW5nXSwgRXJyb3I+ID0gLnN1Y2Nlc3MoLmluaXQoKSlcbiAgICBpbnRlcm5hbCBmdW5jIGZldGNoQXJyYXkoKSBhc3luYyB0aHJvd3MgLT4gW1N0cmluZ10ge1xuICAgICAgICB0cnkgZmV0Y2hBcnJheVJlc3VsdFRvQmVSZXR1cm5lZC5nZXQoKVxuICAgIH1cblxuICAgIFwvXC8gTUFSSzogLSBmZXRjaERpY3Rpb25hcnlcblxuICAgIGludGVybmFsIHZhciBmZXRjaERpY3Rpb25hcnlSZXN1bHRUb0JlUmV0dXJuZWQ6IFJlc3VsdDxbU3RyaW5nOiBTdHJpbmddLCBFcnJvcj4gPSAuc3VjY2VzcyguaW5pdCgpKVxuICAgIGludGVybmFsIGZ1bmMgZmV0Y2hEaWN0aW9uYXJ5KCkgYXN5bmMgdGhyb3dzIC0+IFtTdHJpbmc6IFN0cmluZ10ge1xuICAgICAgICB0cnkgZmV0Y2hEaWN0aW9uYXJ5UmVzdWx0VG9CZVJldHVybmVkLmdldCgpXG4gICAgfVxuXG4gICAgXC9cLyBNQVJLOiAtIHNhdmVTb21ldGhpbmdcblxuICAgIGludGVybmFsIHZhciBzYXZlU29tZXRoaW5nUmVzdWx0VG9CZVJldHVybmVkOiBSZXN1bHQ8Vm9pZCwgRXJyb3I+ID0gLnN1Y2Nlc3MoKCkpXG4gICAgaW50ZXJuYWwgZnVuYyBzYXZlU29tZXRoaW5nKHN0cmluZ1BhcmFtOiBTdHJpbmcsIGludFBhcmFtOiBJbnQsIHNvbWV0aGluZ1BhcmFtOiBTb21ldGhpbmcpIGFzeW5jIHRocm93cyB7XG4gICAgICAgIHRyeSBzYXZlU29tZXRoaW5nUmVzdWx0VG9CZVJldHVybmVkLmdldCgpXG4gICAgfVxuXG4gICAgXC9cLyBNQVJLOiAtIHNhdmVTb21ldGhpbmdOb1Rocm93XG5cbiAgICBpbnRlcm5hbCBmdW5jIHNhdmVTb21ldGhpbmdOb1Rocm93KF8gZGF0YTogRGF0YSkgYXN5bmMge31cbn0iLCJ1cmwiOiIiLCJyZWdlbmVyYXRpb25Db3VudGVyIjozNzAsImZpbGVVUkwiOiJmaWxlOlwvXC9cL1VzZXJzXC9ib2NhdGVkdVwvYWRpZGFzXC9kZXZlbG9wbWVudFwvU291cmNlcnlSZXNvdXJjZXNcL0FzeW5jQXV0b1N0dWJcL0FzeW5jQXV0b1N0dWIuc291cmNlcnl0ZW1wbGF0ZSIsInJ1bkNvbmZpZ3VyYXRpb24iOiJzZWxlY3Rpb24iLCJzYW1wbGVDb2RlIjoiZW51bSBNeUVudW0ge1xuICAgIGNhc2UgZmlyc3RDYXNlXG4gICAgY2FzZSBzZWNvbmRDYXNlXG59XG5cbnByb3RvY29sIFNvbWV0aGluZ1JlcG9zaXRvcnlJbnRlcmZhY2Uge1xuICAgIGluaXQoaW5wdXQ6IFN0cmluZylcbiAgICBpbml0KHNvbWV0aGluZzogU3RyaW5nKSB0aHJvd3NcbiAgICBmdW5jIGZldGNoU29tZXRoaW5nKF8gaWQ6IFN0cmluZykgYXN5bmMgdGhyb3dzIC0+IFNvbWV0aGluZ1xuICAgIGZ1bmMgZ2V0RW51bSgpIGFzeW5jIHRocm93cyAtPiBNeUVudW1cbiAgICBmdW5jIGdldERhdGUoKSBhc3luYyB0aHJvd3MgLT4gRGF0ZVxuICAgIGZ1bmMgZ2V0RGF0YSgpIGFzeW5jIHRocm93cyAtPiBEYXRhXG4gICAgZnVuYyBmZXRjaFVSTCgpIGFzeW5jIHRocm93cyAtPiBVUkxcbiAgICBmdW5jIGZldGNoQXJyYXkoKSBhc3luYyB0aHJvd3MgLT4gW1N0cmluZ11cbiAgICBmdW5jIGZldGNoRGljdGlvbmFyeSgpIGFzeW5jIHRocm93cyAtPiBbU3RyaW5nOiBTdHJpbmddXG4gICAgZnVuYyBzYXZlU29tZXRoaW5nKHN0cmluZ1BhcmFtOiBTdHJpbmcsIGludFBhcmFtOiBJbnQsIHNvbWV0aGluZ1BhcmFtOiBTb21ldGhpbmcpIGFzeW5jIHRocm93c1xuICAgIGZ1bmMgc2F2ZVNvbWV0aGluZ05vVGhyb3coXyBkYXRhOiBEYXRhKSBhc3luY1xufSIsImlzTG9ja2VkIjpmYWxzZSwia2luZCI6InN0ZW5jaWwiLCJ0cmltV2hpdGVzcGFjZXMiOnRydWUsIm5hbWUiOiJBc3luY0F1dG9TdHViIiwiaW5zZXJ0aW9uTW9kZSI6ImVuZE9mRmlsZSJ9"}