{"version":3,"instance":"eyJmYXZvcml0ZSI6dHJ1ZSwidHJpbVdoaXRlc3BhY2VzIjp0cnVlLCJ1cmwiOiIiLCJpbnNlcnRpb25Nb2RlIjoiZW5kT2ZGaWxlIiwibmFtZSI6IkFzeW5jQXV0b1N0dWIiLCJpZCI6IjYwQzkyMUY0LTg3NDEtNDIyQy1BRTI0LTExNjMxNUIyQUZDQiIsInZlcnNpb24iOjMsImdlbmVyYXRlZENvZGUiOiJcL1wvIE1BUks6IC0gU29tZVNlcnZpY2VQcm90b2NvbFN0dWJcblxucHVibGljIGZpbmFsIGNsYXNzIFNvbWVTZXJ2aWNlU3R1YjogU29tZVNlcnZpY2VQcm90b2NvbCB7XG4gICAgcHVibGljIGluaXQoKSB7fVxuXG4gICAgXC9cLyBNQVJLOiAtIGdldFNvbWV0aGluZ1xuXG4gICAgcHVibGljIHZhciBnZXRTb21ldGhpbmdSZXN1bHRUb0JlUmV0dXJuZWQ6IFJlc3VsdDxTb21ldGhpbmcsIEVycm9yPiA9IC5zdWNjZXNzKC5maXh0dXJlKCkpXG4gICAgcHVibGljIGZ1bmMgZ2V0U29tZXRoaW5nKF8gaWQ6IFN0cmluZykgYXN5bmMgdGhyb3dzIC0+IFNvbWV0aGluZyB7XG4gICAgICAgIHRyeSBnZXRTb21ldGhpbmdSZXN1bHRUb0JlUmV0dXJuZWQuZ2V0KClcbiAgICB9XG5cbiAgICBcL1wvIE1BUks6IC0gZ2V0RW51bVxuXG4gICAgcHVibGljIHZhciBnZXRFbnVtUmVzdWx0VG9CZVJldHVybmVkOiBSZXN1bHQ8TXlFbnVtLCBFcnJvcj4gPSAuc3VjY2VzcyguZmlyc3RDYXNlKVxuICAgIHB1YmxpYyBmdW5jIGdldEVudW0oKSBhc3luYyB0aHJvd3MgLT4gTXlFbnVtIHtcbiAgICAgICAgdHJ5IGdldEVudW1SZXN1bHRUb0JlUmV0dXJuZWQuZ2V0KClcbiAgICB9XG5cbiAgICBcL1wvIE1BUks6IC0gZ2V0RGF0ZVxuXG4gICAgcHVibGljIHZhciBnZXREYXRlUmVzdWx0VG9CZVJldHVybmVkOiBSZXN1bHQ8RGF0ZSwgRXJyb3I+ID0gLnN1Y2Nlc3MoLmluaXQoKSlcbiAgICBwdWJsaWMgZnVuYyBnZXREYXRlKCkgYXN5bmMgdGhyb3dzIC0+IERhdGUge1xuICAgICAgICB0cnkgZ2V0RGF0ZVJlc3VsdFRvQmVSZXR1cm5lZC5nZXQoKVxuICAgIH1cblxuICAgIFwvXC8gTUFSSzogLSBnZXREYXRhXG5cbiAgICBwdWJsaWMgdmFyIGdldERhdGFSZXN1bHRUb0JlUmV0dXJuZWQ6IFJlc3VsdDxEYXRhLCBFcnJvcj4gPSAuc3VjY2VzcyguaW5pdCgpKVxuICAgIHB1YmxpYyBmdW5jIGdldERhdGEoKSBhc3luYyB0aHJvd3MgLT4gRGF0YSB7XG4gICAgICAgIHRyeSBnZXREYXRhUmVzdWx0VG9CZVJldHVybmVkLmdldCgpXG4gICAgfVxuXG4gICAgXC9cLyBNQVJLOiAtIGdldFVSTFxuXG4gICAgcHVibGljIHZhciBnZXRVUkxSZXN1bHRUb0JlUmV0dXJuZWQ6IFJlc3VsdDxVUkwsIEVycm9yPiA9IC5zdWNjZXNzKC5pbml0KCkpXG4gICAgcHVibGljIGZ1bmMgZ2V0VVJMKCkgYXN5bmMgdGhyb3dzIC0+IFVSTCB7XG4gICAgICAgIHRyeSBnZXRVUkxSZXN1bHRUb0JlUmV0dXJuZWQuZ2V0KClcbiAgICB9XG5cbiAgICBcL1wvIE1BUks6IC0gZ2V0QXJyYXlcblxuICAgIHB1YmxpYyB2YXIgZ2V0QXJyYXlSZXN1bHRUb0JlUmV0dXJuZWQ6IFJlc3VsdDxbU3RyaW5nXSwgRXJyb3I+ID0gLnN1Y2Nlc3MoLmluaXQoKSlcbiAgICBwdWJsaWMgZnVuYyBnZXRBcnJheSgpIGFzeW5jIHRocm93cyAtPiBbU3RyaW5nXSB7XG4gICAgICAgIHRyeSBnZXRBcnJheVJlc3VsdFRvQmVSZXR1cm5lZC5nZXQoKVxuICAgIH1cblxuICAgIFwvXC8gTUFSSzogLSBnZXREaWN0aW9uYXJ5XG5cbiAgICBwdWJsaWMgdmFyIGdldERpY3Rpb25hcnlSZXN1bHRUb0JlUmV0dXJuZWQ6IFJlc3VsdDxbU3RyaW5nOiBTdHJpbmddLCBFcnJvcj4gPSAuc3VjY2VzcyguaW5pdCgpKVxuICAgIHB1YmxpYyBmdW5jIGdldERpY3Rpb25hcnkoKSBhc3luYyB0aHJvd3MgLT4gW1N0cmluZzogU3RyaW5nXSB7XG4gICAgICAgIHRyeSBnZXREaWN0aW9uYXJ5UmVzdWx0VG9CZVJldHVybmVkLmdldCgpXG4gICAgfVxuXG4gICAgXC9cLyBNQVJLOiAtIHBvc3RTb21ldGhpbmdcblxuICAgIHB1YmxpYyB2YXIgcG9zdFNvbWV0aGluZ1Jlc3VsdFRvQmVSZXR1cm5lZDogUmVzdWx0PFZvaWQsIEVycm9yPiA9IC5zdWNjZXNzKCgpKVxuICAgIHB1YmxpYyBmdW5jIHBvc3RTb21ldGhpbmcoKSBhc3luYyB0aHJvd3Mge1xuICAgICAgICB0cnkgcG9zdFNvbWV0aGluZ1Jlc3VsdFRvQmVSZXR1cm5lZC5nZXQoKVxuICAgIH1cbn0iLCJkZXNjcmlwdGlvbiI6IkNyZWF0ZXMgYSBgU3R1YmAgYmFzZWQgb24gYSBkZXBlbmRlbmN5IHByb3RvY29sLCBtb3N0bHkgYXBwbGljYWJsZSBmb3IgZGF0YXNvdXJjZXMgbGlrZSBzZXJ2aWNlcyBhbmQgcmVwb3NpdG9yaWVzLlxuTk9URTogaXQgYXNzdW1lcyB0aGF0IGFsbCBtb2RlbHMgcmV0dXJuZWQgaGF2ZSBhIGBmaXh0dXJlYCBtZXRob2QgcHJldmlvdXNseSBkZWZpbmVkLiIsInNhbXBsZUNvZGUiOiJlbnVtIE15RW51bSB7XG4gICAgY2FzZSBmaXJzdENhc2VcbiAgICBjYXNlIHNlY29uZENhc2Vcbn1cblxucHJvdG9jb2wgU29tZVNlcnZpY2VQcm90b2NvbCB7XG4gICAgZnVuYyBnZXRTb21ldGhpbmcoXyBpZDogU3RyaW5nKSBhc3luYyB0aHJvd3MgLT4gU29tZXRoaW5nXG4gICAgZnVuYyBnZXRFbnVtKCkgYXN5bmMgdGhyb3dzIC0+IE15RW51bVxuICAgIGZ1bmMgZ2V0RGF0ZSgpIGFzeW5jIHRocm93cyAtPiBEYXRlXG4gICAgZnVuYyBnZXREYXRhKCkgYXN5bmMgdGhyb3dzIC0+IERhdGFcbiAgICBmdW5jIGdldFVSTCgpIGFzeW5jIHRocm93cyAtPiBVUkxcbiAgICBmdW5jIGdldEFycmF5KCkgYXN5bmMgdGhyb3dzIC0+IFtTdHJpbmddXG4gICAgZnVuYyBnZXREaWN0aW9uYXJ5KCkgYXN5bmMgdGhyb3dzIC0+IFtTdHJpbmc6IFN0cmluZ11cbiAgICBmdW5jIHBvc3RTb21ldGhpbmcoKSBhc3luYyB0aHJvd3Ncbn0iLCJpc0xvY2tlZCI6ZmFsc2UsInJ1bkNvbmZpZ3VyYXRpb24iOiJzZWxlY3Rpb24iLCJyZWdlbmVyYXRpb25Db3VudGVyIjowLCJraW5kIjoic3RlbmNpbCIsImF1dGhvciI6IkVkdWFyZG8gQm9jYXRvIiwiY29udGVudCI6InslIG1hY3JvIGdldENsZWFuVHlwZU5hbWUgdHlwZU5hbWUgJX1cbiAgICB7JSBpZiB0eXBlTmFtZXxjb250YWluczogXCJJbnRlcmZhY2VcIiAlfVxuICAgICAgICB7eyB0eXBlTmFtZXxyZXBsYWNlOiBcIkludGVyZmFjZVwiLCBcIlwifX1cbiAgICB7JSBlbGlmIHR5cGVOYW1lfGNvbnRhaW5zOiBcIlByb3RvY29sXCIgJX1cbiAgICAgICAge3sgdHlwZU5hbWV8cmVwbGFjZTogXCJQcm90b2NvbFwiLCBcIlwifX1cbiAgICB7JSBlbmRpZiAlfVxueyUgZW5kbWFjcm8gJX1cblxueyUgbWFjcm8gcmVzb2x2ZVJldHVyblZhbHVlRm9yUmV0dXJuVHlwZSBtZXRob2QgJX1cbnslIHR5cGVkIG1ldGhvZCBhcyBNZXRob2QgJX1cbiAgICB7JSBzZXQgZm91bmRhdGlvblR5cGVzV2l0aE5vRml4dHVyZSAlfSBcbiAgICBbXG4gICAgICAgIFwiRGF0ZVwiLCBcIkRhdGFcIiwgXCJVUkxcIlxuICAgIF1cbiAgICB7JSBlbmRzZXQgJX1cbiAgICB7JSBpZiBtZXRob2QucmV0dXJuVHlwZS5raW5kID09IFwiZW51bVwiICV9XG4gICAgICAgIC57eyBtZXRob2QucmV0dXJuVHlwZS5jYXNlcy5maXJzdC5uYW1lIH19XG4gICAgeyUgZWxpZiBmb3VuZGF0aW9uVHlwZXNXaXRoTm9GaXh0dXJlfGNvbnRhaW5zOiBtZXRob2QucmV0dXJuVHlwZU5hbWUgJX1cbiAgICAgICAgLmluaXQoKVxuICAgIHslIGVsc2UgJX1cbiAgICAgICAgeyUgaWYgbWV0aG9kLnJldHVyblR5cGVOYW1lfGNvbnRhaW5zOlwiW1wiIGFuZCBtZXRob2QucmV0dXJuVHlwZU5hbWV8Y29udGFpbnM6XCJdXCIgJX1cbiAgICAgICAgICAgIC5pbml0KClcbiAgICAgICAgeyUgZWxzZSAlfVxuICAgICAgICAgICAgLmZpeHR1cmUoKVxuICAgICAgICB7JSBlbmRpZiAlfVxuICAgIHslIGVuZGlmICV9XG57JSBlbmRtYWNybyAlfVxuXG57JSBmb3IgdHlwZSBpbiB0eXBlcy5wcm90b2NvbHMgJX17IyBVc2UgdHlwZXMuaW1wbGVtZW50aW5nLkFzeW5jQXV0b1N0dWIgaW5zdGVhZCBvZiB0eXBlcy5wcm90b2NvbHMgaWYgZGVjaWRlZCB0byBoYXZlIHRoaXMgcHJvdG9jb2wgI31cblwvXC8gTUFSSzogLSB7eyB0eXBlLm5hbWUgfX1TdHViXG5cbnslIHNldCBjbGVhblR5cGVOYW1lICV9IHslIGNhbGwgZ2V0Q2xlYW5UeXBlTmFtZSB0eXBlLm5hbWUgJX0gIHslIGVuZHNldCAlfVxucHVibGljIGZpbmFsIGNsYXNzIHt7IGNsZWFuVHlwZU5hbWV8cmVtb3ZlTmV3bGluZXMgfX1TdHViOiB7eyB0eXBlLm5hbWUgfX0ge1xuICAgIHB1YmxpYyBpbml0KCkge31cbiAgICB7JSBmb3IgbWV0aG9kIGluIHR5cGUuYWxsTWV0aG9kcyAlfVxuXG4gICAgXC9cLyBNQVJLOiAtIHt7IG1ldGhvZC5zaG9ydE5hbWUgfX1cblxuICAgIHslIGlmIG1ldGhvZC5yZXR1cm5UeXBlTmFtZS5uYW1lICE9IFwiVm9pZFwiICV9XG4gICAgeyUgc2V0IHJldHVyblZhbHVlICV9IHslIGNhbGwgcmVzb2x2ZVJldHVyblZhbHVlRm9yUmV0dXJuVHlwZSBtZXRob2QgJX0geyUgZW5kc2V0ICV9XG4gICAgcHVibGljIHZhciB7eyBtZXRob2Quc2hvcnROYW1lIH19UmVzdWx0VG9CZVJldHVybmVkOiBSZXN1bHQ8e3sgbWV0aG9kLnJldHVyblR5cGVOYW1lLm5hbWUgfX0sIEVycm9yPiA9IC5zdWNjZXNzKHt7IHJldHVyblZhbHVlfHJlbW92ZU5ld2xpbmVzIH19KVxuICAgIHslIGVsc2UgJX1cbiAgICBwdWJsaWMgdmFyIHt7IG1ldGhvZC5zaG9ydE5hbWUgfX1SZXN1bHRUb0JlUmV0dXJuZWQ6IFJlc3VsdDxWb2lkLCBFcnJvcj4gPSAuc3VjY2VzcygoKSlcbiAgICB7JSBlbmRpZiAlfVxuICAgIHB1YmxpYyBmdW5jIHt7IG1ldGhvZC5uYW1lIH19IGFzeW5jIHRocm93cyB7JSBpZiBtZXRob2QucmV0dXJuVHlwZU5hbWUubmFtZSAhPSBcIlZvaWRcIiAlfS0+IHt7IG1ldGhvZC5yZXR1cm5UeXBlTmFtZS5uYW1lIH19IHslIGVuZGlmICV9e1xuICAgICAgICB0cnkge3sgbWV0aG9kLnNob3J0TmFtZSB9fVJlc3VsdFRvQmVSZXR1cm5lZC5nZXQoKVxuICAgIH1cbiAgICB7JSBlbmRmb3IgJX1cbn1cbnslIGVuZGZvciAlfSJ9"}