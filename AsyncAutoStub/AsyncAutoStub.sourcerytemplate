{"version":3,"instance":"eyJpZCI6IjQ5RTFFODdELUFENDAtNDE3Ny1BOEFGLUE3NDBDNTMxNkE5MyIsImRlc2NyaXB0aW9uIjoiQ3JlYXRlcyBhIGBTdHViYCBiYXNlZCBvbiBhIGRlcGVuZGVuY3kgcHJvdG9jb2wsIG1vc3RseSBhcHBsaWNhYmxlIGZvciBkYXRhc291cmNlcyBsaWtlIHNlcnZpY2VzIGFuZCByZXBvc2l0b3JpZXMuXG5OT1RFOiBpdCBhc3N1bWVzIHRoYXQgYWxsIG1vZGVscyByZXR1cm5lZCBoYXZlIGEgYGZpeHR1cmVgIG1ldGhvZCBwcmV2aW91c2x5IGRlZmluZWQuIiwiY29udGVudCI6InslIG1hY3JvIGdldENsZWFuVHlwZU5hbWUgdHlwZU5hbWUgJX1cbiAgICB7JSBpZiB0eXBlTmFtZXxjb250YWluczogXCJJbnRlcmZhY2VcIiAlfVxuICAgICAgICB7eyB0eXBlTmFtZXxyZXBsYWNlOiBcIkludGVyZmFjZVwiLCBcIlwifX1cbiAgICB7JSBlbGlmIHR5cGVOYW1lfGNvbnRhaW5zOiBcIlByb3RvY29sXCIgJX1cbiAgICAgICAge3sgdHlwZU5hbWV8cmVwbGFjZTogXCJQcm90b2NvbFwiLCBcIlwifX1cbiAgICB7JSBlbmRpZiAlfVxueyUgZW5kbWFjcm8gJX1cblxueyUgbWFjcm8gcmVzb2x2ZVJldHVyblZhbHVlRm9yUmV0dXJuVHlwZSBtZXRob2QgJX1cbnslIHR5cGVkIG1ldGhvZCBhcyBNZXRob2QgJX1cbiAgICB7JSBzZXQgZm91bmRhdGlvblR5cGVzV2l0aE5vRml4dHVyZSAlfSBcbiAgICBbXG4gICAgICAgIFwiRGF0ZVwiLCBcIkRhdGFcIiwgXCJVUkxcIlxuICAgIF1cbiAgICB7JSBlbmRzZXQgJX1cbiAgICB7JSBpZiBtZXRob2QucmV0dXJuVHlwZS5raW5kID09IFwiZW51bVwiICV9XG4gICAgICAgIC57eyBtZXRob2QucmV0dXJuVHlwZS5jYXNlcy5maXJzdC5uYW1lIH19XG4gICAgeyUgZWxpZiBmb3VuZGF0aW9uVHlwZXNXaXRoTm9GaXh0dXJlfGNvbnRhaW5zOiBtZXRob2QucmV0dXJuVHlwZU5hbWUgJX1cbiAgICAgICAgLmluaXQoKVxuICAgIHslIGVsc2UgJX1cbiAgICAgICAgeyUgaWYgbWV0aG9kLnJldHVyblR5cGVOYW1lfGNvbnRhaW5zOlwiW1wiIGFuZCBtZXRob2QucmV0dXJuVHlwZU5hbWV8Y29udGFpbnM6XCJdXCIgJX1cbiAgICAgICAgICAgIC5pbml0KClcbiAgICAgICAgeyUgZWxzZSAlfVxuICAgICAgICAgICAgLmZpeHR1cmUoKVxuICAgICAgICB7JSBlbmRpZiAlfVxuICAgIHslIGVuZGlmICV9XG57JSBlbmRtYWNybyAlfVxuXG57JSBmb3IgdHlwZSBpbiB0eXBlcy5wcm90b2NvbHMgJX17IyBVc2UgdHlwZXMuaW1wbGVtZW50aW5nLkFzeW5jQXV0b1N0dWIgaW5zdGVhZCBvZiB0eXBlcy5wcm90b2NvbHMgaWYgZGVjaWRlZCB0byBoYXZlIHRoaXMgcHJvdG9jb2wgI31cblwvXC8gTUFSSzogLSB7eyB0eXBlLm5hbWUgfX1TdHViXG5cbnslIHNldCBjbGVhblR5cGVOYW1lICV9IHslIGNhbGwgZ2V0Q2xlYW5UeXBlTmFtZSB0eXBlLm5hbWUgJX0gIHslIGVuZHNldCAlfVxue3sgdHlwZS5hY2Nlc3NMZXZlbCB9fSBmaW5hbCBjbGFzcyB7eyBjbGVhblR5cGVOYW1lfHJlbW92ZU5ld2xpbmVzIH19U3R1Yjoge3sgdHlwZS5uYW1lIH19IHtcbiAgICB7eyB0eXBlLmFjY2Vzc0xldmVsIH19IGluaXQoKSB7fVxuICAgIHslIGZvciBtZXRob2QgaW4gdHlwZS5hbGxNZXRob2RzICV9XG5cbiAgICBcL1wvIE1BUks6IC0ge3sgbWV0aG9kLnNob3J0TmFtZSB9fVxuXG4gICAgeyUgaWYgbWV0aG9kLnJldHVyblR5cGVOYW1lLm5hbWUgIT0gXCJWb2lkXCIgJX1cbiAgICB7JSBzZXQgcmV0dXJuVmFsdWUgJX0geyUgY2FsbCByZXNvbHZlUmV0dXJuVmFsdWVGb3JSZXR1cm5UeXBlIG1ldGhvZCAlfSB7JSBlbmRzZXQgJX1cbiAgICB7eyB0eXBlLmFjY2Vzc0xldmVsIH19IHZhciB7eyBtZXRob2Quc2hvcnROYW1lIH19UmVzdWx0VG9CZVJldHVybmVkOiBSZXN1bHQ8e3sgbWV0aG9kLnJldHVyblR5cGVOYW1lLm5hbWUgfX0sIEVycm9yPiA9IC5zdWNjZXNzKHt7IHJldHVyblZhbHVlfHJlbW92ZU5ld2xpbmVzIH19KVxuICAgIHslIGVsc2UgJX1cbiAgICB7eyB0eXBlLmFjY2Vzc0xldmVsIH19IHZhciB7eyBtZXRob2Quc2hvcnROYW1lIH19UmVzdWx0VG9CZVJldHVybmVkOiBSZXN1bHQ8Vm9pZCwgRXJyb3I+ID0gLnN1Y2Nlc3MoKCkpXG4gICAgeyUgZW5kaWYgJX1cbiAgICB7eyB0eXBlLmFjY2Vzc0xldmVsIH19IGZ1bmMge3sgbWV0aG9kLm5hbWUgfX17eyAnIGFzeW5jJyBpZiBtZXRob2QuaXNBc3luYyB9fXt7ICcgdGhyb3dzJyBpZiBtZXRob2QudGhyb3dzIH19IHslIGlmIG1ldGhvZC5yZXR1cm5UeXBlTmFtZS5uYW1lICE9IFwiVm9pZFwiICV9LT4ge3sgbWV0aG9kLnJldHVyblR5cGVOYW1lLm5hbWUgfX0geyUgZW5kaWYgJX17XG4gICAgICAgIHRyeSB7eyBtZXRob2Quc2hvcnROYW1lIH19UmVzdWx0VG9CZVJldHVybmVkLmdldCgpXG4gICAgfVxuICAgIHslIGVuZGZvciAlfVxufVxueyUgZW5kZm9yICV9IiwidmVyc2lvbiI6MywiZmF2b3JpdGUiOnRydWUsImF1dGhvciI6IkVkdWFyZG8gQm9jYXRvIiwiZ2VuZXJhdGVkQ29kZSI6IlwvXC8gTUFSSzogLSBTb21lU2VydmljZUludGVyZmFjZVN0dWJcblxuaW50ZXJuYWwgZmluYWwgY2xhc3MgU29tZVNlcnZpY2VTdHViOiBTb21lU2VydmljZUludGVyZmFjZSB7XG4gICAgaW50ZXJuYWwgaW5pdCgpIHt9XG5cbiAgICBcL1wvIE1BUks6IC0gaW5pdFxuXG4gICAgaW50ZXJuYWwgdmFyIGluaXRSZXN1bHRUb0JlUmV0dXJuZWQ6IFJlc3VsdDxTb21lU2VydmljZUludGVyZmFjZSwgRXJyb3I+ID0gLnN1Y2Nlc3MoLmZpeHR1cmUoKSlcbiAgICBpbnRlcm5hbCBmdW5jIGluaXQoc29tZXRoaW5nOiBTdHJpbmcpIC0+IFNvbWVTZXJ2aWNlSW50ZXJmYWNlIHtcbiAgICAgICAgdHJ5IGluaXRSZXN1bHRUb0JlUmV0dXJuZWQuZ2V0KClcbiAgICB9XG5cbiAgICBcL1wvIE1BUks6IC0gZ2V0U29tZXRoaW5nXG5cbiAgICBpbnRlcm5hbCB2YXIgZ2V0U29tZXRoaW5nUmVzdWx0VG9CZVJldHVybmVkOiBSZXN1bHQ8U29tZXRoaW5nLCBFcnJvcj4gPSAuc3VjY2VzcyguZml4dHVyZSgpKVxuICAgIGludGVybmFsIGZ1bmMgZ2V0U29tZXRoaW5nKF8gaWQ6IFN0cmluZykgYXN5bmMgdGhyb3dzIC0+IFNvbWV0aGluZyB7XG4gICAgICAgIHRyeSBnZXRTb21ldGhpbmdSZXN1bHRUb0JlUmV0dXJuZWQuZ2V0KClcbiAgICB9XG5cbiAgICBcL1wvIE1BUks6IC0gZ2V0RW51bVxuXG4gICAgaW50ZXJuYWwgdmFyIGdldEVudW1SZXN1bHRUb0JlUmV0dXJuZWQ6IFJlc3VsdDxNeUVudW0sIEVycm9yPiA9IC5zdWNjZXNzKC5maXJzdENhc2UpXG4gICAgaW50ZXJuYWwgZnVuYyBnZXRFbnVtKCkgYXN5bmMgdGhyb3dzIC0+IE15RW51bSB7XG4gICAgICAgIHRyeSBnZXRFbnVtUmVzdWx0VG9CZVJldHVybmVkLmdldCgpXG4gICAgfVxuXG4gICAgXC9cLyBNQVJLOiAtIGdldERhdGVcblxuICAgIGludGVybmFsIHZhciBnZXREYXRlUmVzdWx0VG9CZVJldHVybmVkOiBSZXN1bHQ8RGF0ZSwgRXJyb3I+ID0gLnN1Y2Nlc3MoLmluaXQoKSlcbiAgICBpbnRlcm5hbCBmdW5jIGdldERhdGUoKSBhc3luYyB0aHJvd3MgLT4gRGF0ZSB7XG4gICAgICAgIHRyeSBnZXREYXRlUmVzdWx0VG9CZVJldHVybmVkLmdldCgpXG4gICAgfVxuXG4gICAgXC9cLyBNQVJLOiAtIGdldERhdGFcblxuICAgIGludGVybmFsIHZhciBnZXREYXRhUmVzdWx0VG9CZVJldHVybmVkOiBSZXN1bHQ8RGF0YSwgRXJyb3I+ID0gLnN1Y2Nlc3MoLmluaXQoKSlcbiAgICBpbnRlcm5hbCBmdW5jIGdldERhdGEoKSBhc3luYyB0aHJvd3MgLT4gRGF0YSB7XG4gICAgICAgIHRyeSBnZXREYXRhUmVzdWx0VG9CZVJldHVybmVkLmdldCgpXG4gICAgfVxuXG4gICAgXC9cLyBNQVJLOiAtIGdldFVSTFxuXG4gICAgaW50ZXJuYWwgdmFyIGdldFVSTFJlc3VsdFRvQmVSZXR1cm5lZDogUmVzdWx0PFVSTCwgRXJyb3I+ID0gLnN1Y2Nlc3MoLmluaXQoKSlcbiAgICBpbnRlcm5hbCBmdW5jIGdldFVSTCgpIGFzeW5jIHRocm93cyAtPiBVUkwge1xuICAgICAgICB0cnkgZ2V0VVJMUmVzdWx0VG9CZVJldHVybmVkLmdldCgpXG4gICAgfVxuXG4gICAgXC9cLyBNQVJLOiAtIGdldEFycmF5XG5cbiAgICBpbnRlcm5hbCB2YXIgZ2V0QXJyYXlSZXN1bHRUb0JlUmV0dXJuZWQ6IFJlc3VsdDxbU3RyaW5nXSwgRXJyb3I+ID0gLnN1Y2Nlc3MoLmluaXQoKSlcbiAgICBpbnRlcm5hbCBmdW5jIGdldEFycmF5KCkgYXN5bmMgdGhyb3dzIC0+IFtTdHJpbmddIHtcbiAgICAgICAgdHJ5IGdldEFycmF5UmVzdWx0VG9CZVJldHVybmVkLmdldCgpXG4gICAgfVxuXG4gICAgXC9cLyBNQVJLOiAtIGdldERpY3Rpb25hcnlcblxuICAgIGludGVybmFsIHZhciBnZXREaWN0aW9uYXJ5UmVzdWx0VG9CZVJldHVybmVkOiBSZXN1bHQ8W1N0cmluZzogU3RyaW5nXSwgRXJyb3I+ID0gLnN1Y2Nlc3MoLmluaXQoKSlcbiAgICBpbnRlcm5hbCBmdW5jIGdldERpY3Rpb25hcnkoKSBhc3luYyB0aHJvd3MgLT4gW1N0cmluZzogU3RyaW5nXSB7XG4gICAgICAgIHRyeSBnZXREaWN0aW9uYXJ5UmVzdWx0VG9CZVJldHVybmVkLmdldCgpXG4gICAgfVxuXG4gICAgXC9cLyBNQVJLOiAtIHBvc3RTb21ldGhpbmdcblxuICAgIGludGVybmFsIHZhciBwb3N0U29tZXRoaW5nUmVzdWx0VG9CZVJldHVybmVkOiBSZXN1bHQ8Vm9pZCwgRXJyb3I+ID0gLnN1Y2Nlc3MoKCkpXG4gICAgaW50ZXJuYWwgZnVuYyBwb3N0U29tZXRoaW5nKCkgYXN5bmMgdGhyb3dzIHtcbiAgICAgICAgdHJ5IHBvc3RTb21ldGhpbmdSZXN1bHRUb0JlUmV0dXJuZWQuZ2V0KClcbiAgICB9XG5cbiAgICBcL1wvIE1BUks6IC0gcG9zdE5vVGhyb3dcblxuICAgIGludGVybmFsIHZhciBwb3N0Tm9UaHJvd1Jlc3VsdFRvQmVSZXR1cm5lZDogUmVzdWx0PFZvaWQsIEVycm9yPiA9IC5zdWNjZXNzKCgpKVxuICAgIGludGVybmFsIGZ1bmMgcG9zdE5vVGhyb3coKSBhc3luYyB7XG4gICAgICAgIHRyeSBwb3N0Tm9UaHJvd1Jlc3VsdFRvQmVSZXR1cm5lZC5nZXQoKVxuICAgIH1cbn0iLCJ1cmwiOiIiLCJyZWdlbmVyYXRpb25Db3VudGVyIjoxLCJmaWxlVVJMIjoiZmlsZTpcL1wvXC9Vc2Vyc1wvYm9jYXRlZHVcL2FkaWRhc1wvZGV2ZWxvcG1lbnRcL1NvdXJjZXJ5UmVzb3VyY2VzXC9Bc3luY0F1dG9TdHViXC9Bc3luY0F1dG9TdHViLnNvdXJjZXJ5dGVtcGxhdGUiLCJydW5Db25maWd1cmF0aW9uIjoic2VsZWN0aW9uIiwic2FtcGxlQ29kZSI6ImVudW0gTXlFbnVtIHtcbiAgICBjYXNlIGZpcnN0Q2FzZVxuICAgIGNhc2Ugc2Vjb25kQ2FzZVxufVxuXG5wcm90b2NvbCBTb21lU2VydmljZUludGVyZmFjZSB7XG4gICAgaW5pdChzb21ldGhpbmc6IFN0cmluZylcbiAgICBmdW5jIGdldFNvbWV0aGluZyhfIGlkOiBTdHJpbmcpIGFzeW5jIHRocm93cyAtPiBTb21ldGhpbmdcbiAgICBmdW5jIGdldEVudW0oKSBhc3luYyB0aHJvd3MgLT4gTXlFbnVtXG4gICAgZnVuYyBnZXREYXRlKCkgYXN5bmMgdGhyb3dzIC0+IERhdGVcbiAgICBmdW5jIGdldERhdGEoKSBhc3luYyB0aHJvd3MgLT4gRGF0YVxuICAgIGZ1bmMgZ2V0VVJMKCkgYXN5bmMgdGhyb3dzIC0+IFVSTFxuICAgIGZ1bmMgZ2V0QXJyYXkoKSBhc3luYyB0aHJvd3MgLT4gW1N0cmluZ11cbiAgICBmdW5jIGdldERpY3Rpb25hcnkoKSBhc3luYyB0aHJvd3MgLT4gW1N0cmluZzogU3RyaW5nXVxuICAgIGZ1bmMgcG9zdFNvbWV0aGluZygpIGFzeW5jIHRocm93c1xuICAgIGZ1bmMgcG9zdE5vVGhyb3coKSBhc3luY1xufSIsImlzTG9ja2VkIjpmYWxzZSwia2luZCI6InN0ZW5jaWwiLCJ0cmltV2hpdGVzcGFjZXMiOnRydWUsIm5hbWUiOiJBc3luY0F1dG9TdHViIiwiaW5zZXJ0aW9uTW9kZSI6ImVuZE9mRmlsZSJ9"}