{"version":3,"instance":"eyJpZCI6IkI5RTBDMDk1LUYzMTAtNEFDMC1CQTY5LTBFNjQ0NzlCMzA0MyIsImRlc2NyaXB0aW9uIjoiQ3JlYXRlcyBhIHN0dWIgZnJvbSBiYXNlZCBvbiBhIGRlcGVuZGVuY3kgcHJvdG9jb2wsIG1vc3RseSBhcHBsaWNhYmxlIGZvciBkYXRhc291cmNlcyBsaWtlIHNlcnZpY2VzIGFuZCByZXBvc2l0b3JpZXMuXG5OT1RFOiBpdCBhc3N1bWVzIHRoYXQgYWxsIG1vZGVscyByZXR1cm5lZCBoYXZlIGEgYGZpeHR1cmVgIG1ldGhvZCBwcmV2aW91c2x5IGRlZmluZWQuIiwiY29udGVudCI6InslIG1hY3JvIGdldENsZWFuVHlwZU5hbWUgdHlwZU5hbWUgJX1cbiAgICB7JSBpZiB0eXBlTmFtZXxjb250YWluczogXCJJbnRlcmZhY2VcIiAlfVxuICAgICAgICB7eyB0eXBlTmFtZXxyZXBsYWNlOiBcIkludGVyZmFjZVwiLCBcIlwifX1cbiAgICB7JSBlbGlmIHR5cGVOYW1lfGNvbnRhaW5zOiBcIlByb3RvY29sXCIgJX1cbiAgICAgICAge3sgdHlwZU5hbWV8cmVwbGFjZTogXCJQcm90b2NvbFwiLCBcIlwifX1cbiAgICB7JSBlbmRpZiAlfVxueyUgZW5kbWFjcm8gJX1cblxueyUgbWFjcm8gcmVzb2x2ZVJldHVyblZhbHVlRm9yUmV0dXJuVHlwZSBtZXRob2QgJX1cbiAgICB7JSBzZXQgZm91bmRhdGlvblR5cGVzV2l0aE5vRml4dHVyZSAlfSBcbiAgICBbXG4gICAgICAgIFwiRGF0ZVwiLCBcIkRhdGFcIiwgXCJVUkxcIlxuICAgIF1cbiAgICB7JSBlbmRzZXQgJX1cbiAgICB7JSBpZiBtZXRob2QucmV0dXJuVHlwZS5raW5kID09IFwiZW51bVwiICV9XG4gICAgICAgIC57eyBtZXRob2QucmV0dXJuVHlwZS5jYXNlcy5maXJzdC5uYW1lIH19XG4gICAgeyUgZWxpZiBmb3VuZGF0aW9uVHlwZXNXaXRoTm9GaXh0dXJlfGNvbnRhaW5zOiBtZXRob2QucmV0dXJuVHlwZU5hbWUgJX1cbiAgICAgICAgLmluaXQoKVxuICAgIHslIGVsc2UgJX1cbiAgICAgICAgeyUgaWYgbWV0aG9kLnJldHVyblR5cGVOYW1lfGNvbnRhaW5zOlwiW1wiIGFuZCBtZXRob2QucmV0dXJuVHlwZU5hbWV8Y29udGFpbnM6XCJdXCIgJX1cbiAgICAgICAgICAgIC5pbml0KClcbiAgICAgICAgeyUgZWxzZSAlfVxuICAgICAgICAgICAgLmZpeHR1cmUoKVxuICAgICAgICB7JSBlbmRpZiAlfVxuICAgIHslIGVuZGlmICV9XG57JSBlbmRtYWNybyAlfVxuXG5cbnslIGZvciB0eXBlIGluIHR5cGVzLnByb3RvY29scyAlfVxuI2lmIERFQlVHXG57JSBzZXQgY2xlYW5UeXBlTmFtZSAlfSB7JSBjYWxsIGdldENsZWFuVHlwZU5hbWUgdHlwZS5uYW1lICV9ICB7JSBlbmRzZXQgJX1cbnB1YmxpYyBmaW5hbCBjbGFzcyB7eyBjbGVhblR5cGVOYW1lfHJlbW92ZU5ld2xpbmVzIH19U3R1Yjoge3sgdHlwZS5uYW1lIH19IHtcbiAgICBwdWJsaWMgaW5pdCgpIHt9XG4gICAgeyUgZm9yIG1ldGhvZCBpbiB0eXBlLmFsbE1ldGhvZHMgJX1cblxuICAgIHslIGlmIG1ldGhvZC5yZXR1cm5UeXBlTmFtZS5uYW1lICE9IFwiVm9pZFwiICV9XG4gICAgeyUgc2V0IHJldHVyblZhbHVlICV9IHslIGNhbGwgcmVzb2x2ZVJldHVyblZhbHVlRm9yUmV0dXJuVHlwZSBtZXRob2QgJX0geyUgZW5kc2V0ICV9XG4gICAgcHVibGljIHZhciB7eyBtZXRob2Quc2hvcnROYW1lIH19UmVzdWx0VG9CZVJldHVybmVkOiBSZXN1bHQ8e3sgbWV0aG9kLnJldHVyblR5cGVOYW1lLm5hbWUgfX0sIEVycm9yPiA9IC5zdWNjZXNzKHt7IHJldHVyblZhbHVlfHJlbW92ZU5ld2xpbmVzIH19KVxuICAgIHslIGVsc2UgJX1cbiAgICBwdWJsaWMgdmFyIHt7IG1ldGhvZC5zaG9ydE5hbWUgfX1SZXN1bHRUb0JlUmV0dXJuZWQ6IFJlc3VsdDxWb2lkLCBFcnJvcj4gPSAuc3VjY2VzcygoKSlcbiAgICB7JSBlbmRpZiAlfVxuICAgIHB1YmxpYyBmdW5jIHt7IG1ldGhvZC5uYW1lIH19IGFzeW5jIHRocm93cyB7JSBpZiBtZXRob2QucmV0dXJuVHlwZU5hbWUubmFtZSAhPSBcIlZvaWRcIiAlfS0+IHt7IG1ldGhvZC5yZXR1cm5UeXBlTmFtZS5uYW1lIH19IHslIGVuZGlmICV9e1xuICAgICAgICB0cnkge3sgbWV0aG9kLnNob3J0TmFtZSB9fVJlc3VsdFRvQmVSZXR1cm5lZC5nZXQoKVxuICAgIH1cbiAgICB7JSBlbmRmb3IgJX1cbn1cbiNlbmRpZlxuXG57JSBlbmRmb3IgJX0iLCJ2ZXJzaW9uIjozLCJmYXZvcml0ZSI6dHJ1ZSwiYXV0aG9yIjoiRWR1YXJkbyBCb2NhdG8iLCJnZW5lcmF0ZWRDb2RlIjoiI2lmIERFQlVHXG5wdWJsaWMgZmluYWwgY2xhc3MgU29tZVNlcnZpY2VTdHViOiBTb21lU2VydmljZVByb3RvY29sIHtcbiAgICBwdWJsaWMgaW5pdCgpIHt9XG5cbiAgICBwdWJsaWMgdmFyIGdldFNvbWV0aGluZ1Jlc3VsdFRvQmVSZXR1cm5lZDogUmVzdWx0PFNvbWV0aGluZywgRXJyb3I+ID0gLnN1Y2Nlc3MoLmZpeHR1cmUoKSlcbiAgICBwdWJsaWMgZnVuYyBnZXRTb21ldGhpbmcoXyBpZDogU3RyaW5nKSBhc3luYyB0aHJvd3MgLT4gU29tZXRoaW5nIHtcbiAgICAgICAgdHJ5IGdldFNvbWV0aGluZ1Jlc3VsdFRvQmVSZXR1cm5lZC5nZXQoKVxuICAgIH1cblxuICAgIHB1YmxpYyB2YXIgZ2V0RW51bVJlc3VsdFRvQmVSZXR1cm5lZDogUmVzdWx0PE15RW51bSwgRXJyb3I+ID0gLnN1Y2Nlc3MoLmZpcnN0Q2FzZSlcbiAgICBwdWJsaWMgZnVuYyBnZXRFbnVtKCkgYXN5bmMgdGhyb3dzIC0+IE15RW51bSB7XG4gICAgICAgIHRyeSBnZXRFbnVtUmVzdWx0VG9CZVJldHVybmVkLmdldCgpXG4gICAgfVxuXG4gICAgcHVibGljIHZhciBnZXREYXRlUmVzdWx0VG9CZVJldHVybmVkOiBSZXN1bHQ8RGF0ZSwgRXJyb3I+ID0gLnN1Y2Nlc3MoLmluaXQoKSlcbiAgICBwdWJsaWMgZnVuYyBnZXREYXRlKCkgYXN5bmMgdGhyb3dzIC0+IERhdGUge1xuICAgICAgICB0cnkgZ2V0RGF0ZVJlc3VsdFRvQmVSZXR1cm5lZC5nZXQoKVxuICAgIH1cblxuICAgIHB1YmxpYyB2YXIgZ2V0RGF0YVJlc3VsdFRvQmVSZXR1cm5lZDogUmVzdWx0PERhdGEsIEVycm9yPiA9IC5zdWNjZXNzKC5pbml0KCkpXG4gICAgcHVibGljIGZ1bmMgZ2V0RGF0YSgpIGFzeW5jIHRocm93cyAtPiBEYXRhIHtcbiAgICAgICAgdHJ5IGdldERhdGFSZXN1bHRUb0JlUmV0dXJuZWQuZ2V0KClcbiAgICB9XG5cbiAgICBwdWJsaWMgdmFyIGdldFVSTFJlc3VsdFRvQmVSZXR1cm5lZDogUmVzdWx0PFVSTCwgRXJyb3I+ID0gLnN1Y2Nlc3MoLmluaXQoKSlcbiAgICBwdWJsaWMgZnVuYyBnZXRVUkwoKSBhc3luYyB0aHJvd3MgLT4gVVJMIHtcbiAgICAgICAgdHJ5IGdldFVSTFJlc3VsdFRvQmVSZXR1cm5lZC5nZXQoKVxuICAgIH1cblxuICAgIHB1YmxpYyB2YXIgZ2V0QXJyYXlSZXN1bHRUb0JlUmV0dXJuZWQ6IFJlc3VsdDxbU3RyaW5nXSwgRXJyb3I+ID0gLnN1Y2Nlc3MoLmluaXQoKSlcbiAgICBwdWJsaWMgZnVuYyBnZXRBcnJheSgpIGFzeW5jIHRocm93cyAtPiBbU3RyaW5nXSB7XG4gICAgICAgIHRyeSBnZXRBcnJheVJlc3VsdFRvQmVSZXR1cm5lZC5nZXQoKVxuICAgIH1cblxuICAgIHB1YmxpYyB2YXIgZ2V0RGljdGlvbmFyeVJlc3VsdFRvQmVSZXR1cm5lZDogUmVzdWx0PFtTdHJpbmc6IFN0cmluZ10sIEVycm9yPiA9IC5zdWNjZXNzKC5pbml0KCkpXG4gICAgcHVibGljIGZ1bmMgZ2V0RGljdGlvbmFyeSgpIGFzeW5jIHRocm93cyAtPiBbU3RyaW5nOiBTdHJpbmddIHtcbiAgICAgICAgdHJ5IGdldERpY3Rpb25hcnlSZXN1bHRUb0JlUmV0dXJuZWQuZ2V0KClcbiAgICB9XG5cbiAgICBwdWJsaWMgdmFyIHBvc3RTb21ldGhpbmdSZXN1bHRUb0JlUmV0dXJuZWQ6IFJlc3VsdDxWb2lkLCBFcnJvcj4gPSAuc3VjY2VzcygoKSlcbiAgICBwdWJsaWMgZnVuYyBwb3N0U29tZXRoaW5nKCkgYXN5bmMgdGhyb3dzIHtcbiAgICAgICAgdHJ5IHBvc3RTb21ldGhpbmdSZXN1bHRUb0JlUmV0dXJuZWQuZ2V0KClcbiAgICB9XG59XG4jZW5kaWYiLCJ1cmwiOiIiLCJyZWdlbmVyYXRpb25Db3VudGVyIjo5LCJmaWxlVVJMIjoiZmlsZTpcL1wvXC9Vc2Vyc1wvYm9jYXRlZHVcL0Rlc2t0b3BcL0FzeW5jQXV0b1N0dWIuc291cmNlcnl0ZW1wbGF0ZSIsInJ1bkNvbmZpZ3VyYXRpb24iOiJzZWxlY3Rpb24iLCJzYW1wbGVDb2RlIjoiZW51bSBNeUVudW0ge1xuICAgIGNhc2UgZmlyc3RDYXNlXG4gICAgY2FzZSBzZWNvbmRDYXNlXG59XG5cbnByb3RvY29sIFNvbWVTZXJ2aWNlUHJvdG9jb2wge1xuICAgIGZ1bmMgZ2V0U29tZXRoaW5nKF8gaWQ6IFN0cmluZykgYXN5bmMgdGhyb3dzIC0+IFNvbWV0aGluZ1xuICAgIGZ1bmMgZ2V0RW51bSgpIGFzeW5jIHRocm93cyAtPiBNeUVudW1cbiAgICBmdW5jIGdldERhdGUoKSBhc3luYyB0aHJvd3MgLT4gRGF0ZVxuICAgIGZ1bmMgZ2V0RGF0YSgpIGFzeW5jIHRocm93cyAtPiBEYXRhXG4gICAgZnVuYyBnZXRVUkwoKSBhc3luYyB0aHJvd3MgLT4gVVJMXG4gICAgZnVuYyBnZXRBcnJheSgpIGFzeW5jIHRocm93cyAtPiBbU3RyaW5nXVxuICAgIGZ1bmMgZ2V0RGljdGlvbmFyeSgpIGFzeW5jIHRocm93cyAtPiBbU3RyaW5nOiBTdHJpbmddXG4gICAgZnVuYyBwb3N0U29tZXRoaW5nKCkgYXN5bmMgdGhyb3dzXG59IiwiaXNMb2NrZWQiOmZhbHNlLCJraW5kIjoic3RlbmNpbCIsInRyaW1XaGl0ZXNwYWNlcyI6dHJ1ZSwibmFtZSI6IkFzeW5jQXV0b1N0dWIiLCJpbnNlcnRpb25Nb2RlIjoiZW5kT2ZGaWxlIn0="}