#if DEBUG
// MARK: - SomeServiceProtocolStub

public final class SomeServiceStub: SomeServiceProtocol {
    public init() {}

    // MARK: - getSomething

    public var getSomethingResultToBeReturned: Result<Something, Error> = .success(.fixture())
    public func getSomething(_ id: String) async throws -> Something {
        try getSomethingResultToBeReturned.get()
    }

    // MARK: - getEnum

    public var getEnumResultToBeReturned: Result<MyEnum, Error> = .success(.firstCase)
    public func getEnum() async throws -> MyEnum {
        try getEnumResultToBeReturned.get()
    }

    // MARK: - getDate

    public var getDateResultToBeReturned: Result<Date, Error> = .success(.init())
    public func getDate() async throws -> Date {
        try getDateResultToBeReturned.get()
    }

    // MARK: - getData

    public var getDataResultToBeReturned: Result<Data, Error> = .success(.init())
    public func getData() async throws -> Data {
        try getDataResultToBeReturned.get()
    }

    // MARK: - getURL

    public var getURLResultToBeReturned: Result<URL, Error> = .success(.init())
    public func getURL() async throws -> URL {
        try getURLResultToBeReturned.get()
    }

    // MARK: - getArray

    public var getArrayResultToBeReturned: Result<[String], Error> = .success(.init())
    public func getArray() async throws -> [String] {
        try getArrayResultToBeReturned.get()
    }

    // MARK: - getDictionary

    public var getDictionaryResultToBeReturned: Result<[String: String], Error> = .success(.init())
    public func getDictionary() async throws -> [String: String] {
        try getDictionaryResultToBeReturned.get()
    }

    // MARK: - postSomething

    public var postSomethingResultToBeReturned: Result<Void, Error> = .success(())
    public func postSomething() async throws {
        try postSomethingResultToBeReturned.get()
    }
}
#endif