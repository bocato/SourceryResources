{"version":3,"instance":"eyJpZCI6IjMzNTc2OTY2LTcxRjktNDJFMi05Nzc0LUI4MkU2OUQzQjI0OSIsImRlc2NyaXB0aW9uIjoiQ3JlYXRlcyB0aGUgaW5pdGlhbGl6ZXIgZm9yIGNsYXNzIHRoYXQgaGF2ZSBhIERUTyBpbiBvcmRlciB0byBtYXAgZnJvbSBEVE8gdG8gRG9tYWluIGVudGl0eS4iLCJjb250ZW50IjoieyUgbWFjcm8gZ2V0QXJyYXlUeXBlTmFtZSB2YXJpYWJsZSAlfVxueyUgc2V0IGNsZWFuTGVmdCAlfSB7eyB2YXJpYWJsZS50eXBlTmFtZS5uYW1lfHJlcGxhY2U6IFwiXVwiLCBcIlwifX0geyUgZW5kc2V0ICV9XG57eyBjbGVhbkxlZnR8cmVwbGFjZTogXCJbXCIsIFwiXCJ9fVxueyUgZW5kbWFjcm8gJX1cblxueyUgZm9yIHR5cGUgaW4gdHlwZXMuc3RydWN0cyAlfVxueyUgc2V0IGZvdW5kYXRpb25UeXBlcyAlfVxuICAgIFtcbiAgICAgICAgXCJJbnRcIiwgXCJVSW50XCIsIFwiRmxvYXRcIiwgXCJEb3VibGVcIiwgXCJCb29sXCIsIFwiU3RyaW5nXCIsIFwiQ2hhcmFjdGVyXCIsIFxuICAgICAgICBcIk9wdGlvbmFsXCIsIFwiQXJyYXlcIiwgXCJEaWN0aW9uYXJ5XCIsIFwiU2V0XCIsIFwiRGF0ZVwiLCBcIkRhdGFcIiwgXCJVUkxcIiwgXG4gICAgICAgIFwiUmFuZ2VcIiwgXCJDbG9zZWRSYW5nZVwiLCBcIkVycm9yXCIsIFwiQW55XCIsIFwiQW55T2JqZWN0XCIsIFwiVm9pZFwiXG4gICAgXVxueyUgZW5kc2V0ICV9XG57JSBpZiBub3QgdHlwZS5uYW1lfGNvbnRhaW5zOiBcIkRUT1wiICV9XG57JSBuZXdsaW5lICV9e3sgdHlwZS5hY2Nlc3NMZXZlbCB9fSBleHRlbnNpb24ge3sgdHlwZS5uYW1lIH19IHtcbiAgICBpbml0KFxuICAgICAgICBkdG86IHt7IHR5cGUubmFtZSB9fURUT3slIGlmIHR5cGUudmFyaWFibGVzLmNvdW50ID4gMSAlfSx7JSBlbmRpZiAlfVxuICAgICAgICB7JSBmb3IgdmFyaWFibGUgaW4gdHlwZS52YXJpYWJsZXMgJX1cbiAgICAgICAgeyUgaWYgdmFyaWFibGUuaXNBcnJheSAlfVxuICAgICAgICAgICAgeyUgc2V0IGNsZWFuQXJyYXlUeXBlUmV0dXJuICV9IHslIGNhbGwgZ2V0QXJyYXlUeXBlTmFtZSB2YXJpYWJsZSAlfSB7JSBlbmRzZXQgJX1cbiAgICAgICAgICAgIHslIHNldCBjbGVhbkFycmF5VHlwZSAlfXt7IGNsZWFuQXJyYXlUeXBlUmV0dXJufHJlbW92ZU5ld2xpbmVzIH19eyUgZW5kc2V0ICV9XG4gICAgICAgICAgICB7JSBpZiBmb3VuZGF0aW9uVHlwZXN8Y29udGFpbnM6Y2xlYW5BcnJheVR5cGUgJX1cbiAgICAgICAgbWFwe3t2YXJpYWJsZS5uYW1lfHVwcGVyRmlyc3RMZXR0ZXJ9fUZyb21EVE86IChbe3tjbGVhbkFycmF5VHlwZX19XSkgLT4ge3sgdmFyaWFibGUudHlwZU5hbWUgfX17JSBpZiBub3QgZm9ybG9vcC5sYXN0ICV9LHslIGVuZGlmICV9XG4gICAgICAgICAgICB7JSBlbHNlICV9XG4gICAgICAgIG1hcHt7dmFyaWFibGUubmFtZXx1cHBlckZpcnN0TGV0dGVyfX1FbnRpdHlGcm9tRFRPOiAoW3t7Y2xlYW5BcnJheVR5cGV9fURUT10pIC0+IHt7IHZhcmlhYmxlLnR5cGVOYW1lIH19eyUgaWYgbm90IGZvcmxvb3AubGFzdCAlfSx7JSBlbmRpZiAlfVxuICAgICAgICAgICAgeyUgZW5kaWYgJX1cbiAgICAgICAgeyUgZW5kaWYgJX1cbiAgICAgICAgeyUgZW5kZm9yICV9XG4gICAgKSB7XG4gICAgICAgIHslIGZvciB2YXJpYWJsZSBpbiB0eXBlLnZhcmlhYmxlcyAlfVxuICAgICAgICB7JSBpZiB2YXJpYWJsZS50eXBlTmFtZS5uYW1lfGNvbnRhaW5zOlwiW1wiIGFuZCB2YXJpYWJsZS50eXBlTmFtZS5uYW1lfGNvbnRhaW5zOlwiXVwiICV9XG4gICAgICAgIHslIGlmIHZhbHVlICV9XG4gICAgICAgIHNlbGYue3t2YXJpYWJsZS5uYW1lfX0gPSBtYXB7e3ZhcmlhYmxlLm5hbWV8dXBwZXJGaXJzdExldHRlcn19RW50aXR5RnJvbURUTyhkdG8ue3t2YXJpYWJsZS5uYW1lfX0pXG4gICAgICAgIHslIGVsc2UgJX1cbiAgICAgICAgc2VsZi57e3ZhcmlhYmxlLm5hbWV9fSA9IG1hcHt7dmFyaWFibGUubmFtZXx1cHBlckZpcnN0TGV0dGVyfX1Gcm9tRFRPKGR0by57e3ZhcmlhYmxlLm5hbWV9fSlcbiAgICAgICAgeyUgZW5kaWYgJX1cbiAgICAgICAgeyUgZWxpZiBub3QgZm91bmRhdGlvblR5cGVzfGNvbnRhaW5zOiB2YXJpYWJsZS50eXBlTmFtZSAlfVxuICAgICAgICBzZWxmLnt7dmFyaWFibGUubmFtZX19ID0gLmluaXQoZHRvOiBkdG8ue3t2YXJpYWJsZS5uYW1lfX0pXG4gICAgICAgIHslIGVsc2UgJX1cbiAgICAgICAgc2VsZi57e3ZhcmlhYmxlLm5hbWV9fSA9IGR0by57e3ZhcmlhYmxlLm5hbWV9fVxuICAgICAgICB7JSBlbmRpZiAlfVxuICAgICAgICB7JSBlbmRmb3IgJX1cbiAgICB9XG59XG57JSBlbmRpZiAlfVxueyUgZW5kZm9yICV9XG5cbnslIGZvciB0eXBlIGluIHR5cGVzLmVudW1zIHdoZXJlIHR5cGUuY2FzZXMuY291bnQgPiAwICV9XG57e3R5cGUuYWNjZXNzTGV2ZWx9fSBleHRlbnNpb24ge3t0eXBlLm5hbWV9fSB7XG4gICAgaW5pdChkdG86IHt7IHR5cGUubmFtZSB9fURUTylcbiAgICAgICAgc3dpdGNoIGR0byB7XG4gICAgICAgIHslIGZvciBwIGluIHR5cGUuY2FzZXMgJX1cbiAgICAgICAgY2FzZSAue3twLm5hbWV9fTogc2VsZiA9IC57e3AubmFtZX19XG4gICAgICAgIHslIGVuZGZvciAlfVxuICAgICAgICB9XG4gICAgfVxufVxueyUgZW5kZm9yICV9IiwidmVyc2lvbiI6MywiZmF2b3JpdGUiOnRydWUsImF1dGhvciI6IkVkdWFyZG8gQm9jYXRvIiwiZ2VuZXJhdGVkQ29kZSI6IlxuaW50ZXJuYWwgZXh0ZW5zaW9uIExpc3RJdGVtIHtcbiAgICBpbml0KFxuICAgICAgICBkdG86IExpc3RJdGVtRFRPXG4gICAgKSB7XG4gICAgICAgIHNlbGYudmFsdWUgPSBkdG8udmFsdWVcbiAgICB9XG59XG5cbmludGVybmFsIGV4dGVuc2lvbiBNeU9iamVjdCB7XG4gICAgaW5pdChcbiAgICAgICAgZHRvOiBNeU9iamVjdERUTyxcbiAgICAgICAgbWFwU3RyaW5nTGlzdEZyb21EVE86IChbU3RyaW5nXSkgLT4gW1N0cmluZ10sXG4gICAgICAgIG1hcEl0ZW1zTGlzdEVudGl0eUZyb21EVE86IChbTGlzdEl0ZW1EVE9dKSAtPiBbTGlzdEl0ZW1dXG4gICAgKSB7XG4gICAgICAgIHNlbGYuaWQgPSBkdG8uaWRcbiAgICAgICAgc2VsZi5pbnRWYWx1ZSA9IGR0by5pbnRWYWx1ZVxuICAgICAgICBzZWxmLnN0YXR1cyA9IC5pbml0KGR0bzogZHRvLnN0YXR1cylcbiAgICAgICAgc2VsZi5zdHJpbmdMaXN0ID0gbWFwU3RyaW5nTGlzdEZyb21EVE8oZHRvLnN0cmluZ0xpc3QpXG4gICAgICAgIHNlbGYuaXRlbXNMaXN0ID0gbWFwSXRlbXNMaXN0RnJvbURUTyhkdG8uaXRlbXNMaXN0KVxuICAgIH1cbn1cblxuaW50ZXJuYWwgZXh0ZW5zaW9uIFN0YXR1cyB7XG4gICAgaW5pdChkdG86IFN0YXR1c0RUTylcbiAgICAgICAgc3dpdGNoIGR0byB7XG4gICAgICAgIGNhc2UgLmlkbGU6IHNlbGYgPSAuaWRsZVxuICAgICAgICBjYXNlIC5jb21wbGV0ZWQ6IHNlbGYgPSAuY29tcGxldGVkXG4gICAgICAgIH1cbiAgICB9XG59IiwidXJsIjoiIiwicmVnZW5lcmF0aW9uQ291bnRlciI6MzYsImZpbGVVUkwiOiJmaWxlOlwvXC9cL1VzZXJzXC9ib2NhdGVkdVwvYWRpZGFzXC9kZXZlbG9wbWVudFwvU291cmNlcnlSZXNvdXJjZXNcL0F1dG9NYXBwYWJsZUZyb21EVE9cL0F1dG9NYXBwYWJsZUZyb21EVE8uc291cmNlcnl0ZW1wbGF0ZSIsInJ1bkNvbmZpZ3VyYXRpb24iOiJzZWxlY3Rpb24iLCJzYW1wbGVDb2RlIjoiaW1wb3J0IEZvdW5kYXRpb25cblxuZW51bSBTdGF0dXMge1xuICAgIGNhc2UgaWRsZVxuICAgIGNhc2UgY29tcGxldGVkXG59XG5cbnN0cnVjdCBMaXN0SXRlbSB7XG4gICAgbGV0IHZhbHVlOiBTdHJpbmdcbn1cblxuc3RydWN0IE15T2JqZWN0IHtcbiAgICBsZXQgaWQ6IFN0cmluZ1xuICAgIGxldCBpbnRWYWx1ZTogSW50XG4gICAgbGV0IHN0YXR1czogU3RhdHVzXG4gICAgbGV0IHN0cmluZ0xpc3Q6IFtTdHJpbmddXG4gICAgbGV0IGl0ZW1zTGlzdDogW0xpc3RJdGVtXVxufVxuIiwiaXNMb2NrZWQiOmZhbHNlLCJraW5kIjoic3RlbmNpbCIsInRyaW1XaGl0ZXNwYWNlcyI6dHJ1ZSwibmFtZSI6IkF1dG9NYXBwYWJsZUZyb21EVE8iLCJpbnNlcnRpb25Nb2RlIjoiZW5kT2ZGaWxlIn0="}