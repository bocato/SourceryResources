{"version":3,"instance":"eyJpZCI6IjMzNTc2OTY2LTcxRjktNDJFMi05Nzc0LUI4MkU2OUQzQjI0OSIsImRlc2NyaXB0aW9uIjoiQ3JlYXRlcyB0aGUgaW5pdGlhbGl6ZXIgZm9yIGNsYXNzIHRoYXQgaGF2ZSBhIERUTyBpbiBvcmRlciB0byBtYXAgZnJvbSBEVE8gdG8gRG9tYWluIGVudGl0eS4iLCJjb250ZW50IjoieyUgbWFjcm8gZ2V0QXJyYXlUeXBlTmFtZSB2YXJpYWJsZSAlfVxueyUgc2V0IGNsZWFuTGVmdCAlfSB7eyB2YXJpYWJsZS50eXBlTmFtZS5uYW1lfHJlcGxhY2U6IFwiXVwiLCBcIlwifX0geyUgZW5kc2V0ICV9XG57eyBjbGVhbkxlZnR8cmVwbGFjZTogXCJbXCIsIFwiXCJ9fVxueyUgZW5kbWFjcm8gJX1cblxueyUgZm9yIHR5cGUgaW4gdHlwZXMuc3RydWN0cyAlfVxueyUgc2V0IGZvdW5kYXRpb25UeXBlcyAlfVxuICAgIFtcbiAgICAgICAgXCJJbnRcIiwgXCJVSW50XCIsIFwiRmxvYXRcIiwgXCJEb3VibGVcIiwgXCJCb29sXCIsIFwiU3RyaW5nXCIsIFwiQ2hhcmFjdGVyXCIsIFxuICAgICAgICBcIk9wdGlvbmFsXCIsIFwiQXJyYXlcIiwgXCJEaWN0aW9uYXJ5XCIsIFwiU2V0XCIsIFwiRGF0ZVwiLCBcIkRhdGFcIiwgXCJVUkxcIiwgXG4gICAgICAgIFwiUmFuZ2VcIiwgXCJDbG9zZWRSYW5nZVwiLCBcIkVycm9yXCIsIFwiQW55XCIsIFwiQW55T2JqZWN0XCIsIFwiVm9pZFwiXG4gICAgXVxueyUgZW5kc2V0ICV9XG57JSBpZiBub3QgdHlwZS5uYW1lfGNvbnRhaW5zOiBcIkRUT1wiICV9XG57JSBuZXdsaW5lICV9e3sgdHlwZS5hY2Nlc3NMZXZlbCB9fSBleHRlbnNpb24ge3sgdHlwZS5uYW1lIH19IHtcbiAgICBpbml0KFxuICAgICAgICBkdG86IHt7IHR5cGUubmFtZSB9fURUT3slIGlmIHR5cGUudmFyaWFibGVzLmNvdW50ID4gMSAlfSx7JSBlbmRpZiAlfVxuICAgICAgICB7JSBmb3IgdmFyaWFibGUgaW4gdHlwZS52YXJpYWJsZXMgJX1cbiAgICAgICAgeyUgaWYgdmFyaWFibGUuaXNBcnJheSAlfVxuICAgICAgICAgICAgeyUgc2V0IGNsZWFuQXJyYXlUeXBlUmV0dXJuICV9IHslIGNhbGwgZ2V0QXJyYXlUeXBlTmFtZSB2YXJpYWJsZSAlfSB7JSBlbmRzZXQgJX17JSBzZXQgY2xlYW5BcnJheVR5cGUgJX17eyBjbGVhbkFycmF5VHlwZVJldHVybnxyZW1vdmVOZXdsaW5lcyB9fXslIGVuZHNldCAlfVxuICAgICAgICAgICAgeyUgaWYgZm91bmRhdGlvblR5cGVzfGNvbnRhaW5zOmNsZWFuQXJyYXlUeXBlICV9XG4gICAgICAgIG1hcHt7dmFyaWFibGUubmFtZXx1cHBlckZpcnN0TGV0dGVyfX1Gcm9tRFRPOiAoW3t7Y2xlYW5BcnJheVR5cGV9fV0pIC0+IHt7IHZhcmlhYmxlLnR5cGVOYW1lIH19eyUgaWYgbm90IGZvcmxvb3AubGFzdCAlfSx7JSBlbmRpZiAlfVxuICAgICAgICAgICAgeyUgZWxzZSAlfVxuICAgICAgICBtYXB7e3ZhcmlhYmxlLm5hbWV8dXBwZXJGaXJzdExldHRlcn19RW50aXR5RnJvbURUTzogKFt7e2NsZWFuQXJyYXlUeXBlfX1EVE9dKSAtPiB7eyB2YXJpYWJsZS50eXBlTmFtZSB9fXslIGlmIG5vdCBmb3Jsb29wLmxhc3QgJX0seyUgZW5kaWYgJX1cbiAgICAgICAgICAgIHslIGVuZGlmICV9XG4gICAgICAgIHslIGVuZGlmICV9XG4gICAgICAgIHslIGVuZGZvciAlfVxuICAgICkge1xuICAgICAgICB7JSBmb3IgdmFyaWFibGUgaW4gdHlwZS52YXJpYWJsZXMgJX1cbiAgICAgICAgeyUgc2V0IGNsZWFuQXJyYXlUeXBlUmV0dXJuICV9IHslIGNhbGwgZ2V0QXJyYXlUeXBlTmFtZSB2YXJpYWJsZSAlfSB7JSBlbmRzZXQgJX17JSBzZXQgY2xlYW5BcnJheVR5cGUgJX17eyBjbGVhbkFycmF5VHlwZVJldHVybnxyZW1vdmVOZXdsaW5lcyB9fXslIGVuZHNldCAlfVxuICAgICAgICB7JSBpZiB2YXJpYWJsZS50eXBlTmFtZS5uYW1lfGNvbnRhaW5zOlwiW1wiIGFuZCB2YXJpYWJsZS50eXBlTmFtZS5uYW1lfGNvbnRhaW5zOlwiXVwiICV9XG4gICAgICAgIHslIGlmIG5vdCBmb3VuZGF0aW9uVHlwZXN8Y29udGFpbnM6Y2xlYW5BcnJheVR5cGUgJX1cbiAgICAgICAgc2VsZi57e3ZhcmlhYmxlLm5hbWV9fSA9IG1hcHt7dmFyaWFibGUubmFtZXx1cHBlckZpcnN0TGV0dGVyfX1FbnRpdHlGcm9tRFRPKGR0by57e3ZhcmlhYmxlLm5hbWV9fSlcbiAgICAgICAgeyUgZWxzZSAlfVxuICAgICAgICBzZWxmLnt7dmFyaWFibGUubmFtZX19ID0gbWFwe3t2YXJpYWJsZS5uYW1lfHVwcGVyRmlyc3RMZXR0ZXJ9fUZyb21EVE8oZHRvLnt7dmFyaWFibGUubmFtZX19KVxuICAgICAgICB7JSBlbmRpZiAlfVxuICAgICAgICB7JSBlbGlmIG5vdCBmb3VuZGF0aW9uVHlwZXN8Y29udGFpbnM6IHZhcmlhYmxlLnR5cGVOYW1lICV9XG4gICAgICAgIHNlbGYue3t2YXJpYWJsZS5uYW1lfX0gPSAuaW5pdChkdG86IGR0by57e3ZhcmlhYmxlLm5hbWV9fSlcbiAgICAgICAgeyUgZWxzZSAlfVxuICAgICAgICBzZWxmLnt7dmFyaWFibGUubmFtZX19ID0gZHRvLnt7dmFyaWFibGUubmFtZX19XG4gICAgICAgIHslIGVuZGlmICV9XG4gICAgICAgIHslIGVuZGZvciAlfVxuICAgIH1cbn1cbnslIGVuZGlmICV9XG57JSBlbmRmb3IgJX1cblxueyUgZm9yIHR5cGUgaW4gdHlwZXMuZW51bXMgd2hlcmUgdHlwZS5jYXNlcy5jb3VudCA+IDAgJX1cbnt7dHlwZS5hY2Nlc3NMZXZlbH19IGV4dGVuc2lvbiB7e3R5cGUubmFtZX19IHtcbiAgICBpbml0KGR0bzoge3sgdHlwZS5uYW1lIH19RFRPKVxuICAgICAgICBzd2l0Y2ggZHRvIHtcbiAgICAgICAgeyUgZm9yIHAgaW4gdHlwZS5jYXNlcyAlfVxuICAgICAgICBjYXNlIC57e3AubmFtZX19OiBzZWxmID0gLnt7cC5uYW1lfX1cbiAgICAgICAgeyUgZW5kZm9yICV9XG4gICAgICAgIH1cbiAgICB9XG59XG57JSBlbmRmb3IgJX0iLCJ2ZXJzaW9uIjozLCJmYXZvcml0ZSI6dHJ1ZSwiYXV0aG9yIjoiRWR1YXJkbyBCb2NhdG8iLCJnZW5lcmF0ZWRDb2RlIjoiXG5pbnRlcm5hbCBleHRlbnNpb24gTGlzdEl0ZW0ge1xuICAgIGluaXQoXG4gICAgICAgIGR0bzogTGlzdEl0ZW1EVE9cbiAgICApIHtcbiAgICAgICAgc2VsZi52YWx1ZSA9IGR0by52YWx1ZVxuICAgIH1cbn1cblxuaW50ZXJuYWwgZXh0ZW5zaW9uIE15T2JqZWN0IHtcbiAgICBpbml0KFxuICAgICAgICBkdG86IE15T2JqZWN0RFRPLFxuICAgICAgICBtYXBTdHJpbmdMaXN0RnJvbURUTzogKFtTdHJpbmddKSAtPiBbU3RyaW5nXSxcbiAgICAgICAgbWFwSXRlbXNMaXN0RW50aXR5RnJvbURUTzogKFtMaXN0SXRlbURUT10pIC0+IFtMaXN0SXRlbV1cbiAgICApIHtcbiAgICAgICAgc2VsZi5pZCA9IGR0by5pZFxuICAgICAgICBzZWxmLmludFZhbHVlID0gZHRvLmludFZhbHVlXG4gICAgICAgIHNlbGYuc3RhdHVzID0gLmluaXQoZHRvOiBkdG8uc3RhdHVzKVxuICAgICAgICBzZWxmLnN0cmluZ0xpc3QgPSBtYXBTdHJpbmdMaXN0RnJvbURUTyhkdG8uc3RyaW5nTGlzdClcbiAgICAgICAgc2VsZi5pdGVtc0xpc3QgPSBtYXBJdGVtc0xpc3RFbnRpdHlGcm9tRFRPKGR0by5pdGVtc0xpc3QpXG4gICAgfVxufVxuXG5pbnRlcm5hbCBleHRlbnNpb24gU3RhdHVzIHtcbiAgICBpbml0KGR0bzogU3RhdHVzRFRPKVxuICAgICAgICBzd2l0Y2ggZHRvIHtcbiAgICAgICAgY2FzZSAuaWRsZTogc2VsZiA9IC5pZGxlXG4gICAgICAgIGNhc2UgLmNvbXBsZXRlZDogc2VsZiA9IC5jb21wbGV0ZWRcbiAgICAgICAgfVxuICAgIH1cbn0iLCJ1cmwiOiIiLCJyZWdlbmVyYXRpb25Db3VudGVyIjozNywiZmlsZVVSTCI6ImZpbGU6XC9cL1wvVXNlcnNcL2JvY2F0ZWR1XC9hZGlkYXNcL2RldmVsb3BtZW50XC9Tb3VyY2VyeVJlc291cmNlc1wvQXV0b01hcHBhYmxlRnJvbURUT1wvQXV0b01hcHBhYmxlRnJvbURUTy5zb3VyY2VyeXRlbXBsYXRlIiwicnVuQ29uZmlndXJhdGlvbiI6InNlbGVjdGlvbiIsInNhbXBsZUNvZGUiOiJpbXBvcnQgRm91bmRhdGlvblxuXG5lbnVtIFN0YXR1cyB7XG4gICAgY2FzZSBpZGxlXG4gICAgY2FzZSBjb21wbGV0ZWRcbn1cblxuc3RydWN0IExpc3RJdGVtIHtcbiAgICBsZXQgdmFsdWU6IFN0cmluZ1xufVxuXG5zdHJ1Y3QgTXlPYmplY3Qge1xuICAgIGxldCBpZDogU3RyaW5nXG4gICAgbGV0IGludFZhbHVlOiBJbnRcbiAgICBsZXQgc3RhdHVzOiBTdGF0dXNcbiAgICBsZXQgc3RyaW5nTGlzdDogW1N0cmluZ11cbiAgICBsZXQgaXRlbXNMaXN0OiBbTGlzdEl0ZW1dXG59XG4iLCJpc0xvY2tlZCI6ZmFsc2UsImtpbmQiOiJzdGVuY2lsIiwidHJpbVdoaXRlc3BhY2VzIjp0cnVlLCJuYW1lIjoiQXV0b01hcHBhYmxlRnJvbURUTyIsImluc2VydGlvbk1vZGUiOiJlbmRPZkZpbGUifQ=="}